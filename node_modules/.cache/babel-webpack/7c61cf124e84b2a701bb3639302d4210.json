{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _isNativeReflectConstruct = require(\"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/isNativeReflectConstruct\");\n\nvar _getPrototypeOf = require(\"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/inherits\");\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nvar Mixin = require('../../utils/mixin');\n\nvar ErrorReportingMixinBase = /*#__PURE__*/function (_Mixin) {\n  function ErrorReportingMixinBase(host, opts) {\n    var _this;\n\n    _classCallCheck(this, ErrorReportingMixinBase);\n\n    _this = _callSuper(this, ErrorReportingMixinBase, [host]);\n    _this.posTracker = null;\n    _this.onParseError = opts.onParseError;\n    return _this;\n  }\n\n  _inherits(ErrorReportingMixinBase, _Mixin);\n\n  return _createClass(ErrorReportingMixinBase, [{\n    key: \"_setErrorLocation\",\n    value: function _setErrorLocation(err) {\n      err.startLine = err.endLine = this.posTracker.line;\n      err.startCol = err.endCol = this.posTracker.col;\n      err.startOffset = err.endOffset = this.posTracker.offset;\n    }\n  }, {\n    key: \"_reportError\",\n    value: function _reportError(code) {\n      var err = {\n        code: code,\n        startLine: -1,\n        startCol: -1,\n        startOffset: -1,\n        endLine: -1,\n        endCol: -1,\n        endOffset: -1\n      };\n\n      this._setErrorLocation(err);\n\n      this.onParseError(err);\n    }\n  }, {\n    key: \"_getOverriddenMethods\",\n    value: function _getOverriddenMethods(mxn) {\n      return {\n        _err: function _err(code) {\n          mxn._reportError(code);\n        }\n      };\n    }\n  }]);\n}(Mixin);\n\nmodule.exports = ErrorReportingMixinBase;","map":null,"metadata":{},"sourceType":"script"}
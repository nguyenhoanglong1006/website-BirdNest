{"ast":null,"code":"\"use strict\";\n\nmodule.exports = DocumentType;\n\nvar Node = require('./Node');\n\nvar Leaf = require('./Leaf');\n\nvar ChildNode = require('./ChildNode');\n\nfunction DocumentType(ownerDocument, name, publicId, systemId) {\n  Leaf.call(this);\n  this.nodeType = Node.DOCUMENT_TYPE_NODE;\n  this.ownerDocument = ownerDocument || null;\n  this.name = name;\n  this.publicId = publicId || \"\";\n  this.systemId = systemId || \"\";\n}\n\nDocumentType.prototype = Object.create(Leaf.prototype, {\n  nodeName: {\n    get: function get() {\n      return this.name;\n    }\n  },\n  nodeValue: {\n    get: function get() {\n      return null;\n    },\n    set: function set() {}\n  },\n  // Utility methods\n  clone: {\n    value: function clone() {\n      return new DocumentType(this.ownerDocument, this.name, this.publicId, this.systemId);\n    }\n  },\n  isEqual: {\n    value: function isEqual(n) {\n      return this.name === n.name && this.publicId === n.publicId && this.systemId === n.systemId;\n    }\n  }\n});\nObject.defineProperties(DocumentType.prototype, ChildNode);","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar skipWhile_1 = require('../operators/skipWhile');\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\n\n\nfunction skipWhile(predicate) {\n  return skipWhile_1.skipWhile(predicate)(this);\n}\n\nexports.skipWhile = skipWhile; //# sourceMappingURL=skipWhile.js.map","map":null,"metadata":{},"sourceType":"script"}
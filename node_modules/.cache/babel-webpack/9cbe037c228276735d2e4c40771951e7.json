{"ast":null,"code":"\"use strict\";\n/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\n\nvar Subject_1 = /*@__PURE__*/require('./Subject');\n\nexports.Subject = Subject_1.Subject;\nexports.AnonymousSubject = Subject_1.AnonymousSubject;\n/* tslint:enable:no-unused-variable */\n\nvar Observable_1 = /*@__PURE__*/require('./Observable');\n\nexports.Observable = Observable_1.Observable; // statics\n\n/* tslint:disable:no-use-before-declare */\n\n/*@__PURE__*/\n\nrequire('./add/observable/bindCallback');\n/*@__PURE__*/\n\n\nrequire('./add/observable/bindNodeCallback');\n/*@__PURE__*/\n\n\nrequire('./add/observable/combineLatest');\n/*@__PURE__*/\n\n\nrequire('./add/observable/concat');\n/*@__PURE__*/\n\n\nrequire('./add/observable/defer');\n/*@__PURE__*/\n\n\nrequire('./add/observable/empty');\n/*@__PURE__*/\n\n\nrequire('./add/observable/forkJoin');\n/*@__PURE__*/\n\n\nrequire('./add/observable/from');\n/*@__PURE__*/\n\n\nrequire('./add/observable/fromEvent');\n/*@__PURE__*/\n\n\nrequire('./add/observable/fromEventPattern');\n/*@__PURE__*/\n\n\nrequire('./add/observable/fromPromise');\n/*@__PURE__*/\n\n\nrequire('./add/observable/generate');\n/*@__PURE__*/\n\n\nrequire('./add/observable/if');\n/*@__PURE__*/\n\n\nrequire('./add/observable/interval');\n/*@__PURE__*/\n\n\nrequire('./add/observable/merge');\n/*@__PURE__*/\n\n\nrequire('./add/observable/race');\n/*@__PURE__*/\n\n\nrequire('./add/observable/never');\n/*@__PURE__*/\n\n\nrequire('./add/observable/of');\n/*@__PURE__*/\n\n\nrequire('./add/observable/onErrorResumeNext');\n/*@__PURE__*/\n\n\nrequire('./add/observable/pairs');\n/*@__PURE__*/\n\n\nrequire('./add/observable/range');\n/*@__PURE__*/\n\n\nrequire('./add/observable/using');\n/*@__PURE__*/\n\n\nrequire('./add/observable/throw');\n/*@__PURE__*/\n\n\nrequire('./add/observable/timer');\n/*@__PURE__*/\n\n\nrequire('./add/observable/zip'); //dom\n\n/*@__PURE__*/\n\n\nrequire('./add/observable/dom/ajax');\n/*@__PURE__*/\n\n\nrequire('./add/observable/dom/webSocket'); //operators\n\n/*@__PURE__*/\n\n\nrequire('./add/operator/buffer');\n/*@__PURE__*/\n\n\nrequire('./add/operator/bufferCount');\n/*@__PURE__*/\n\n\nrequire('./add/operator/bufferTime');\n/*@__PURE__*/\n\n\nrequire('./add/operator/bufferToggle');\n/*@__PURE__*/\n\n\nrequire('./add/operator/bufferWhen');\n/*@__PURE__*/\n\n\nrequire('./add/operator/catch');\n/*@__PURE__*/\n\n\nrequire('./add/operator/combineAll');\n/*@__PURE__*/\n\n\nrequire('./add/operator/combineLatest');\n/*@__PURE__*/\n\n\nrequire('./add/operator/concat');\n/*@__PURE__*/\n\n\nrequire('./add/operator/concatAll');\n/*@__PURE__*/\n\n\nrequire('./add/operator/concatMap');\n/*@__PURE__*/\n\n\nrequire('./add/operator/concatMapTo');\n/*@__PURE__*/\n\n\nrequire('./add/operator/count');\n/*@__PURE__*/\n\n\nrequire('./add/operator/dematerialize');\n/*@__PURE__*/\n\n\nrequire('./add/operator/debounce');\n/*@__PURE__*/\n\n\nrequire('./add/operator/debounceTime');\n/*@__PURE__*/\n\n\nrequire('./add/operator/defaultIfEmpty');\n/*@__PURE__*/\n\n\nrequire('./add/operator/delay');\n/*@__PURE__*/\n\n\nrequire('./add/operator/delayWhen');\n/*@__PURE__*/\n\n\nrequire('./add/operator/distinct');\n/*@__PURE__*/\n\n\nrequire('./add/operator/distinctUntilChanged');\n/*@__PURE__*/\n\n\nrequire('./add/operator/distinctUntilKeyChanged');\n/*@__PURE__*/\n\n\nrequire('./add/operator/do');\n/*@__PURE__*/\n\n\nrequire('./add/operator/exhaust');\n/*@__PURE__*/\n\n\nrequire('./add/operator/exhaustMap');\n/*@__PURE__*/\n\n\nrequire('./add/operator/expand');\n/*@__PURE__*/\n\n\nrequire('./add/operator/elementAt');\n/*@__PURE__*/\n\n\nrequire('./add/operator/filter');\n/*@__PURE__*/\n\n\nrequire('./add/operator/finally');\n/*@__PURE__*/\n\n\nrequire('./add/operator/find');\n/*@__PURE__*/\n\n\nrequire('./add/operator/findIndex');\n/*@__PURE__*/\n\n\nrequire('./add/operator/first');\n/*@__PURE__*/\n\n\nrequire('./add/operator/groupBy');\n/*@__PURE__*/\n\n\nrequire('./add/operator/ignoreElements');\n/*@__PURE__*/\n\n\nrequire('./add/operator/isEmpty');\n/*@__PURE__*/\n\n\nrequire('./add/operator/audit');\n/*@__PURE__*/\n\n\nrequire('./add/operator/auditTime');\n/*@__PURE__*/\n\n\nrequire('./add/operator/last');\n/*@__PURE__*/\n\n\nrequire('./add/operator/let');\n/*@__PURE__*/\n\n\nrequire('./add/operator/every');\n/*@__PURE__*/\n\n\nrequire('./add/operator/map');\n/*@__PURE__*/\n\n\nrequire('./add/operator/mapTo');\n/*@__PURE__*/\n\n\nrequire('./add/operator/materialize');\n/*@__PURE__*/\n\n\nrequire('./add/operator/max');\n/*@__PURE__*/\n\n\nrequire('./add/operator/merge');\n/*@__PURE__*/\n\n\nrequire('./add/operator/mergeAll');\n/*@__PURE__*/\n\n\nrequire('./add/operator/mergeMap');\n/*@__PURE__*/\n\n\nrequire('./add/operator/mergeMapTo');\n/*@__PURE__*/\n\n\nrequire('./add/operator/mergeScan');\n/*@__PURE__*/\n\n\nrequire('./add/operator/min');\n/*@__PURE__*/\n\n\nrequire('./add/operator/multicast');\n/*@__PURE__*/\n\n\nrequire('./add/operator/observeOn');\n/*@__PURE__*/\n\n\nrequire('./add/operator/onErrorResumeNext');\n/*@__PURE__*/\n\n\nrequire('./add/operator/pairwise');\n/*@__PURE__*/\n\n\nrequire('./add/operator/partition');\n/*@__PURE__*/\n\n\nrequire('./add/operator/pluck');\n/*@__PURE__*/\n\n\nrequire('./add/operator/publish');\n/*@__PURE__*/\n\n\nrequire('./add/operator/publishBehavior');\n/*@__PURE__*/\n\n\nrequire('./add/operator/publishReplay');\n/*@__PURE__*/\n\n\nrequire('./add/operator/publishLast');\n/*@__PURE__*/\n\n\nrequire('./add/operator/race');\n/*@__PURE__*/\n\n\nrequire('./add/operator/reduce');\n/*@__PURE__*/\n\n\nrequire('./add/operator/repeat');\n/*@__PURE__*/\n\n\nrequire('./add/operator/repeatWhen');\n/*@__PURE__*/\n\n\nrequire('./add/operator/retry');\n/*@__PURE__*/\n\n\nrequire('./add/operator/retryWhen');\n/*@__PURE__*/\n\n\nrequire('./add/operator/sample');\n/*@__PURE__*/\n\n\nrequire('./add/operator/sampleTime');\n/*@__PURE__*/\n\n\nrequire('./add/operator/scan');\n/*@__PURE__*/\n\n\nrequire('./add/operator/sequenceEqual');\n/*@__PURE__*/\n\n\nrequire('./add/operator/share');\n/*@__PURE__*/\n\n\nrequire('./add/operator/shareReplay');\n/*@__PURE__*/\n\n\nrequire('./add/operator/single');\n/*@__PURE__*/\n\n\nrequire('./add/operator/skip');\n/*@__PURE__*/\n\n\nrequire('./add/operator/skipLast');\n/*@__PURE__*/\n\n\nrequire('./add/operator/skipUntil');\n/*@__PURE__*/\n\n\nrequire('./add/operator/skipWhile');\n/*@__PURE__*/\n\n\nrequire('./add/operator/startWith');\n/*@__PURE__*/\n\n\nrequire('./add/operator/subscribeOn');\n/*@__PURE__*/\n\n\nrequire('./add/operator/switch');\n/*@__PURE__*/\n\n\nrequire('./add/operator/switchMap');\n/*@__PURE__*/\n\n\nrequire('./add/operator/switchMapTo');\n/*@__PURE__*/\n\n\nrequire('./add/operator/take');\n/*@__PURE__*/\n\n\nrequire('./add/operator/takeLast');\n/*@__PURE__*/\n\n\nrequire('./add/operator/takeUntil');\n/*@__PURE__*/\n\n\nrequire('./add/operator/takeWhile');\n/*@__PURE__*/\n\n\nrequire('./add/operator/throttle');\n/*@__PURE__*/\n\n\nrequire('./add/operator/throttleTime');\n/*@__PURE__*/\n\n\nrequire('./add/operator/timeInterval');\n/*@__PURE__*/\n\n\nrequire('./add/operator/timeout');\n/*@__PURE__*/\n\n\nrequire('./add/operator/timeoutWith');\n/*@__PURE__*/\n\n\nrequire('./add/operator/timestamp');\n/*@__PURE__*/\n\n\nrequire('./add/operator/toArray');\n/*@__PURE__*/\n\n\nrequire('./add/operator/toPromise');\n/*@__PURE__*/\n\n\nrequire('./add/operator/window');\n/*@__PURE__*/\n\n\nrequire('./add/operator/windowCount');\n/*@__PURE__*/\n\n\nrequire('./add/operator/windowTime');\n/*@__PURE__*/\n\n\nrequire('./add/operator/windowToggle');\n/*@__PURE__*/\n\n\nrequire('./add/operator/windowWhen');\n/*@__PURE__*/\n\n\nrequire('./add/operator/withLatestFrom');\n/*@__PURE__*/\n\n\nrequire('./add/operator/zip');\n/*@__PURE__*/\n\n\nrequire('./add/operator/zipAll');\n/* tslint:disable:no-unused-variable */\n\n\nvar Subscription_1 = /*@__PURE__*/require('./Subscription');\n\nexports.Subscription = Subscription_1.Subscription;\n\nvar Subscriber_1 = /*@__PURE__*/require('./Subscriber');\n\nexports.Subscriber = Subscriber_1.Subscriber;\n\nvar AsyncSubject_1 = /*@__PURE__*/require('./AsyncSubject');\n\nexports.AsyncSubject = AsyncSubject_1.AsyncSubject;\n\nvar ReplaySubject_1 = /*@__PURE__*/require('./ReplaySubject');\n\nexports.ReplaySubject = ReplaySubject_1.ReplaySubject;\n\nvar BehaviorSubject_1 = /*@__PURE__*/require('./BehaviorSubject');\n\nexports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;\n\nvar ConnectableObservable_1 = /*@__PURE__*/require('./observable/ConnectableObservable');\n\nexports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;\n\nvar Notification_1 = /*@__PURE__*/require('./Notification');\n\nexports.Notification = Notification_1.Notification;\n\nvar EmptyError_1 = /*@__PURE__*/require('./util/EmptyError');\n\nexports.EmptyError = EmptyError_1.EmptyError;\n\nvar ArgumentOutOfRangeError_1 = /*@__PURE__*/require('./util/ArgumentOutOfRangeError');\n\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n\nvar ObjectUnsubscribedError_1 = /*@__PURE__*/require('./util/ObjectUnsubscribedError');\n\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;\n\nvar TimeoutError_1 = /*@__PURE__*/require('./util/TimeoutError');\n\nexports.TimeoutError = TimeoutError_1.TimeoutError;\n\nvar UnsubscriptionError_1 = /*@__PURE__*/require('./util/UnsubscriptionError');\n\nexports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;\n\nvar timeInterval_1 = /*@__PURE__*/require('./operator/timeInterval');\n\nexports.TimeInterval = timeInterval_1.TimeInterval;\n\nvar timestamp_1 = /*@__PURE__*/require('./operators/timestamp');\n\nexports.Timestamp = timestamp_1.Timestamp;\n\nvar TestScheduler_1 = /*@__PURE__*/require('./testing/TestScheduler');\n\nexports.TestScheduler = TestScheduler_1.TestScheduler;\n\nvar VirtualTimeScheduler_1 = /*@__PURE__*/require('./scheduler/VirtualTimeScheduler');\n\nexports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;\n\nvar AjaxObservable_1 = /*@__PURE__*/require('./observable/dom/AjaxObservable');\n\nexports.AjaxResponse = AjaxObservable_1.AjaxResponse;\nexports.AjaxError = AjaxObservable_1.AjaxError;\nexports.AjaxTimeoutError = AjaxObservable_1.AjaxTimeoutError;\n\nvar pipe_1 = /*@__PURE__*/require('./util/pipe');\n\nexports.pipe = pipe_1.pipe;\n\nvar asap_1 = /*@__PURE__*/require('./scheduler/asap');\n\nvar async_1 = /*@__PURE__*/require('./scheduler/async');\n\nvar queue_1 = /*@__PURE__*/require('./scheduler/queue');\n\nvar animationFrame_1 = /*@__PURE__*/require('./scheduler/animationFrame');\n\nvar rxSubscriber_1 = /*@__PURE__*/require('./symbol/rxSubscriber');\n\nvar iterator_1 = /*@__PURE__*/require('./symbol/iterator');\n\nvar observable_1 = /*@__PURE__*/require('./symbol/observable');\n\nvar _operators = /*@__PURE__*/require('./operators');\n\nexports.operators = _operators;\n/* tslint:enable:no-unused-variable */\n\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\n\nvar Scheduler = {\n  asap: asap_1.asap,\n  queue: queue_1.queue,\n  animationFrame: animationFrame_1.animationFrame,\n  async: async_1.async\n};\nexports.Scheduler = Scheduler;\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\n\nvar Symbol = {\n  rxSubscriber: rxSubscriber_1.rxSubscriber,\n  observable: observable_1.observable,\n  iterator: iterator_1.iterator\n};\nexports.Symbol = Symbol;","map":null,"metadata":{},"sourceType":"script"}
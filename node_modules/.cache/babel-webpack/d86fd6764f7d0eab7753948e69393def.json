{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _get from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/get\";\nimport _classCallCheck from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nfunction _superPropGet(t, e, o, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), e, o); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(o, t); } : p; }\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\n/**\n * @license Angular v11.2.14\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { ɵsetRootDomAdapter, DOCUMENT, PlatformLocation, ɵgetDOM, ɵPLATFORM_SERVER_ID, ViewportScroller, ɵNullViewportScroller } from '@angular/common';\nimport { Injectable, Inject, InjectionToken, Injector, Optional, ViewEncapsulation, NgZone, RendererStyleFlags2, PLATFORM_ID, PLATFORM_INITIALIZER, ɵALLOW_MULTIPLE_PLATFORMS, RendererFactory2, NgModule, Testability, ɵsetDocument, createPlatformFactory, platformCore, APP_ID, ApplicationRef, ɵisPromise, Version } from '@angular/core';\nimport { ɵBrowserDomAdapter, ɵflattenStyles, EventManager, ɵSharedStylesHost, ɵNAMESPACE_URIS, ɵshimContentAttribute, ɵshimHostAttribute, ɵTRANSITION_ID, EVENT_MANAGER_PLUGINS, BrowserModule, ɵescapeHtml, TransferState } from '@angular/platform-browser';\nimport { ɵAnimationEngine } from '@angular/animations/browser';\nimport { ɵHttpInterceptingHandler, XhrFactory, HttpHandler, HttpBackend, HttpClientModule } from '@angular/common/http';\nimport { ɵplatformCoreDynamic } from '@angular/platform-browser-dynamic';\nimport { ɵAnimationRendererFactory, NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { Observable, Subject } from 'rxjs';\nimport { parse } from 'url';\nimport { DomElementSchemaRegistry } from '@angular/compiler';\nimport { first } from 'rxjs/operators';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\n\nvar domino = require('domino');\n\nfunction _notImplemented(methodName) {\n  return new Error('This method is not implemented in DominoAdapter: ' + methodName);\n}\n\nfunction setDomTypes() {\n  // Make all Domino types available as types in the global env.\n  Object.assign(global, domino.impl);\n  global['KeyboardEvent'] = domino.impl.Event;\n}\n/**\n * Parses a document string to a Document object.\n */\n\n\nfunction parseDocument(html) {\n  var url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n  var window = domino.createWindow(html, url);\n  var doc = window.document;\n  return doc;\n}\n/**\n * Serializes a document to string.\n */\n\n\nfunction serializeDocument(doc) {\n  return doc.serialize();\n}\n/**\n * DOM Adapter for the server platform based on https://github.com/fgnass/domino.\n */\n\n\nvar DominoAdapter = /*#__PURE__*/function (_ɵBrowserDomAdapter) {\n  function DominoAdapter() {\n    _classCallCheck(this, DominoAdapter);\n\n    return _callSuper(this, DominoAdapter, arguments);\n  }\n\n  _inherits(DominoAdapter, _ɵBrowserDomAdapter);\n\n  return _createClass(DominoAdapter, [{\n    key: \"log\",\n    value: function log(error) {\n      // tslint:disable-next-line:no-console\n      console.log(error);\n    }\n  }, {\n    key: \"logGroup\",\n    value: function logGroup(error) {\n      console.error(error);\n    }\n  }, {\n    key: \"logGroupEnd\",\n    value: function logGroupEnd() {}\n  }, {\n    key: \"supportsDOMEvents\",\n    value: function supportsDOMEvents() {\n      return false;\n    }\n  }, {\n    key: \"createHtmlDocument\",\n    value: function createHtmlDocument() {\n      return parseDocument('<html><head><title>fakeTitle</title></head><body></body></html>');\n    }\n  }, {\n    key: \"getDefaultDocument\",\n    value: function getDefaultDocument() {\n      if (!DominoAdapter.defaultDoc) {\n        DominoAdapter.defaultDoc = domino.createDocument();\n      }\n\n      return DominoAdapter.defaultDoc;\n    }\n  }, {\n    key: \"isElementNode\",\n    value: function isElementNode(node) {\n      return node ? node.nodeType === DominoAdapter.defaultDoc.ELEMENT_NODE : false;\n    }\n  }, {\n    key: \"isShadowRoot\",\n    value: function isShadowRoot(node) {\n      return node.shadowRoot == node;\n    }\n  }, {\n    key: \"getProperty\",\n    value: function getProperty(el, name) {\n      if (name === 'href') {\n        // Domino tries to resolve href-s which we do not want. Just return the\n        // attribute value.\n        return el.getAttribute('href');\n      } else if (name === 'innerText') {\n        // Domino does not support innerText. Just map it to textContent.\n        return el.textContent;\n      }\n\n      return el[name];\n    }\n  }, {\n    key: \"getGlobalEventTarget\",\n    value: function getGlobalEventTarget(doc, target) {\n      if (target === 'window') {\n        return doc.defaultView;\n      }\n\n      if (target === 'document') {\n        return doc;\n      }\n\n      if (target === 'body') {\n        return doc.body;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getBaseHref\",\n    value: function getBaseHref(doc) {\n      var base = doc.documentElement.querySelector('base');\n      var href = '';\n\n      if (base) {\n        href = base.getAttribute('href');\n      } // TODO(alxhub): Need relative path logic from BrowserDomAdapter here?\n\n\n      return href;\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(el, evt) {\n      el.dispatchEvent(evt); // Dispatch the event to the window also.\n\n      var doc = el.ownerDocument || el;\n      var win = doc.defaultView;\n\n      if (win) {\n        win.dispatchEvent(evt);\n      }\n    }\n  }, {\n    key: \"getHistory\",\n    value: function getHistory() {\n      throw _notImplemented('getHistory');\n    }\n  }, {\n    key: \"getLocation\",\n    value: function getLocation() {\n      throw _notImplemented('getLocation');\n    }\n  }, {\n    key: \"getUserAgent\",\n    value: function getUserAgent() {\n      return 'Fake user agent';\n    }\n  }, {\n    key: \"performanceNow\",\n    value: function performanceNow() {\n      return Date.now();\n    }\n  }, {\n    key: \"supportsCookies\",\n    value: function supportsCookies() {\n      return false;\n    }\n  }, {\n    key: \"getCookie\",\n    value: function getCookie(name) {\n      throw _notImplemented('getCookie');\n    }\n  }], [{\n    key: \"makeCurrent\",\n    value: function makeCurrent() {\n      setDomTypes();\n      ɵsetRootDomAdapter(new DominoAdapter());\n    }\n  }]);\n}(ɵBrowserDomAdapter);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Representation of the current platform state.\n *\n * @publicApi\n */\n\n\nvar PlatformState = /*#__PURE__*/function () {\n  function PlatformState(_doc) {\n    _classCallCheck(this, PlatformState);\n\n    this._doc = _doc;\n  }\n  /**\n   * Renders the current state of the platform to string.\n   */\n\n\n  return _createClass(PlatformState, [{\n    key: \"renderToString\",\n    value: function renderToString() {\n      return serializeDocument(this._doc);\n    }\n    /**\n     * Returns the current DOM state.\n     */\n\n  }, {\n    key: \"getDocument\",\n    value: function getDocument() {\n      return this._doc;\n    }\n  }]);\n}();\n\nPlatformState.ɵfac = function PlatformState_Factory(t) {\n  return new (t || PlatformState)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nPlatformState.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: PlatformState,\n  factory: PlatformState.ɵfac\n});\n\nPlatformState.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlatformState, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The DI token for setting the initial config for the platform.\n *\n * @publicApi\n */\n\n\nvar INITIAL_CONFIG = new InjectionToken('Server.INITIAL_CONFIG');\n/**\n * A function that will be executed when calling `renderModuleFactory` or `renderModule` just\n * before current platform state is rendered to string.\n *\n * @publicApi\n */\n\nvar BEFORE_APP_SERIALIZED = new InjectionToken('Server.RENDER_MODULE_HOOK');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar xhr2 = require('xhr2'); // @see https://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#URI-syntax\n\n\nvar isAbsoluteUrl = /^[a-zA-Z\\-\\+.]+:\\/\\//;\n\nvar ServerXhr = /*#__PURE__*/function () {\n  function ServerXhr() {\n    _classCallCheck(this, ServerXhr);\n  }\n\n  return _createClass(ServerXhr, [{\n    key: \"build\",\n    value: function build() {\n      return new xhr2.XMLHttpRequest();\n    }\n  }]);\n}();\n\nServerXhr.ɵfac = function ServerXhr_Factory(t) {\n  return new (t || ServerXhr)();\n};\n\nServerXhr.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ServerXhr,\n  factory: ServerXhr.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServerXhr, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar ZoneMacroTaskWrapper = /*#__PURE__*/function () {\n  function ZoneMacroTaskWrapper() {\n    _classCallCheck(this, ZoneMacroTaskWrapper);\n  }\n\n  return _createClass(ZoneMacroTaskWrapper, [{\n    key: \"wrap\",\n    value: function wrap(request) {\n      var _this = this;\n\n      return new Observable(function (observer) {\n        var task = null;\n        var scheduled = false;\n        var sub = null;\n        var savedResult = null;\n        var savedError = null;\n\n        var scheduleTask = function scheduleTask(_task) {\n          task = _task;\n          scheduled = true;\n\n          var delegate = _this.delegate(request);\n\n          sub = delegate.subscribe(function (res) {\n            return savedResult = res;\n          }, function (err) {\n            if (!scheduled) {\n              throw new Error('An http observable was completed twice. This shouldn\\'t happen, please file a bug.');\n            }\n\n            savedError = err;\n            scheduled = false;\n            task.invoke();\n          }, function () {\n            if (!scheduled) {\n              throw new Error('An http observable was completed twice. This shouldn\\'t happen, please file a bug.');\n            }\n\n            scheduled = false;\n            task.invoke();\n          });\n        };\n\n        var cancelTask = function cancelTask(_task) {\n          if (!scheduled) {\n            return;\n          }\n\n          scheduled = false;\n\n          if (sub) {\n            sub.unsubscribe();\n            sub = null;\n          }\n        };\n\n        var onComplete = function onComplete() {\n          if (savedError !== null) {\n            observer.error(savedError);\n          } else {\n            observer.next(savedResult);\n            observer.complete();\n          }\n        }; // MockBackend for Http is synchronous, which means that if scheduleTask is by\n        // scheduleMacroTask, the request will hit MockBackend and the response will be\n        // sent, causing task.invoke() to be called.\n\n\n        var _task = Zone.current.scheduleMacroTask('ZoneMacroTaskWrapper.subscribe', onComplete, {}, function () {\n          return null;\n        }, cancelTask);\n\n        scheduleTask(_task);\n        return function () {\n          if (scheduled && task) {\n            task.zone.cancelTask(task);\n            scheduled = false;\n          }\n\n          if (sub) {\n            sub.unsubscribe();\n            sub = null;\n          }\n        };\n      });\n    }\n  }]);\n}();\n\nvar ZoneClientBackend = /*#__PURE__*/function (_ZoneMacroTaskWrapper) {\n  function ZoneClientBackend(backend, platformLocation, config) {\n    var _this2;\n\n    _classCallCheck(this, ZoneClientBackend);\n\n    _this2 = _callSuper(this, ZoneClientBackend);\n    _this2.backend = backend;\n    _this2.platformLocation = platformLocation;\n    _this2.config = config;\n    return _this2;\n  }\n\n  _inherits(ZoneClientBackend, _ZoneMacroTaskWrapper);\n\n  return _createClass(ZoneClientBackend, [{\n    key: \"handle\",\n    value: function handle(request) {\n      var _this$platformLocatio = this.platformLocation,\n          href = _this$platformLocatio.href,\n          protocol = _this$platformLocatio.protocol,\n          hostname = _this$platformLocatio.hostname,\n          port = _this$platformLocatio.port;\n\n      if (this.config.useAbsoluteUrl && !isAbsoluteUrl.test(request.url) && isAbsoluteUrl.test(href)) {\n        var baseHref = this.platformLocation.getBaseHrefFromDOM() || href;\n        var urlPrefix = \"\".concat(protocol, \"//\").concat(hostname) + (port ? \":\".concat(port) : '');\n        var baseUrl = new URL(baseHref, urlPrefix);\n        var url = new URL(request.url, baseUrl);\n        return this.wrap(request.clone({\n          url: url.toString()\n        }));\n      }\n\n      return this.wrap(request);\n    }\n  }, {\n    key: \"delegate\",\n    value: function delegate(request) {\n      return this.backend.handle(request);\n    }\n  }]);\n}(ZoneMacroTaskWrapper);\n\nfunction zoneWrappedInterceptingHandler(backend, injector, platformLocation, config) {\n  var realBackend = new ɵHttpInterceptingHandler(backend, injector);\n  return new ZoneClientBackend(realBackend, platformLocation, config);\n}\n\nvar SERVER_HTTP_PROVIDERS = [{\n  provide: XhrFactory,\n  useClass: ServerXhr\n}, {\n  provide: HttpHandler,\n  useFactory: zoneWrappedInterceptingHandler,\n  deps: [HttpBackend, Injector, PlatformLocation, INITIAL_CONFIG]\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nfunction parseUrl(urlStr) {\n  var parsedUrl = parse(urlStr);\n  return {\n    hostname: parsedUrl.hostname || '',\n    protocol: parsedUrl.protocol || '',\n    port: parsedUrl.port || '',\n    pathname: parsedUrl.pathname || '',\n    search: parsedUrl.search || '',\n    hash: parsedUrl.hash || ''\n  };\n}\n/**\n * Server-side implementation of URL state. Implements `pathname`, `search`, and `hash`\n * but not the state stack.\n */\n\n\nvar ServerPlatformLocation = /*#__PURE__*/function () {\n  function ServerPlatformLocation(_doc, _config) {\n    _classCallCheck(this, ServerPlatformLocation);\n\n    this._doc = _doc;\n    this.href = '/';\n    this.hostname = '/';\n    this.protocol = '/';\n    this.port = '/';\n    this.pathname = '/';\n    this.search = '';\n    this.hash = '';\n    this._hashUpdate = new Subject();\n    var config = _config;\n\n    if (!config) {\n      return;\n    }\n\n    if (config.url) {\n      var url = parseUrl(config.url);\n      this.protocol = url.protocol;\n      this.hostname = url.hostname;\n      this.port = url.port;\n      this.pathname = url.pathname;\n      this.search = url.search;\n      this.hash = url.hash;\n      this.href = _doc.location.href;\n    }\n\n    if (config.useAbsoluteUrl) {\n      if (!config.baseUrl) {\n        throw new Error(\"\\\"PlatformConfig.baseUrl\\\" must be set if \\\"useAbsoluteUrl\\\" is true\");\n      }\n\n      var _url = parseUrl(config.baseUrl);\n\n      this.protocol = _url.protocol;\n      this.hostname = _url.hostname;\n      this.port = _url.port;\n    }\n  }\n\n  return _createClass(ServerPlatformLocation, [{\n    key: \"getBaseHrefFromDOM\",\n    value: function getBaseHrefFromDOM() {\n      return ɵgetDOM().getBaseHref(this._doc);\n    }\n  }, {\n    key: \"onPopState\",\n    value: function onPopState(fn) {// No-op: a state stack is not implemented, so\n      // no events will ever come.\n    }\n  }, {\n    key: \"onHashChange\",\n    value: function onHashChange(fn) {\n      this._hashUpdate.subscribe(fn);\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return \"\".concat(this.pathname).concat(this.search).concat(this.hash);\n    }\n  }, {\n    key: \"setHash\",\n    value: function setHash(value, oldUrl) {\n      var _this3 = this;\n\n      if (this.hash === value) {\n        // Don't fire events if the hash has not changed.\n        return;\n      }\n\n      this.hash = value;\n      var newUrl = this.url;\n      scheduleMicroTask(function () {\n        return _this3._hashUpdate.next({\n          type: 'hashchange',\n          state: null,\n          oldUrl: oldUrl,\n          newUrl: newUrl\n        });\n      });\n    }\n  }, {\n    key: \"replaceState\",\n    value: function replaceState(state, title, newUrl) {\n      var oldUrl = this.url;\n      var parsedUrl = parseUrl(newUrl);\n      this.pathname = parsedUrl.pathname;\n      this.search = parsedUrl.search;\n      this.setHash(parsedUrl.hash, oldUrl);\n    }\n  }, {\n    key: \"pushState\",\n    value: function pushState(state, title, newUrl) {\n      this.replaceState(state, title, newUrl);\n    }\n  }, {\n    key: \"forward\",\n    value: function forward() {\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: \"back\",\n    value: function back() {\n      throw new Error('Not implemented');\n    } // History API isn't available on server, therefore return undefined\n\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return undefined;\n    }\n  }]);\n}();\n\nServerPlatformLocation.ɵfac = function ServerPlatformLocation_Factory(t) {\n  return new (t || ServerPlatformLocation)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(INITIAL_CONFIG, 8));\n};\n\nServerPlatformLocation.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ServerPlatformLocation,\n  factory: ServerPlatformLocation.ɵfac\n});\n\nServerPlatformLocation.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [INITIAL_CONFIG]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServerPlatformLocation, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [INITIAL_CONFIG]\n      }]\n    }];\n  }, null);\n})();\n\nfunction scheduleMicroTask(fn) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar ServerEventManagerPlugin\n/* extends EventManagerPlugin which is private */\n= /*#__PURE__*/function () {\n  function ServerEventManagerPlugin(doc) {\n    _classCallCheck(this, ServerEventManagerPlugin);\n\n    this.doc = doc;\n  } // Handle all events on the server.\n\n\n  return _createClass(ServerEventManagerPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      return ɵgetDOM().onAndCancel(element, eventName, handler);\n    }\n  }, {\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(element, eventName, handler) {\n      var target = ɵgetDOM().getGlobalEventTarget(this.doc, element);\n\n      if (!target) {\n        throw new Error(\"Unsupported event target \".concat(target, \" for event \").concat(eventName));\n      }\n\n      return this.addEventListener(target, eventName, handler);\n    }\n  }]);\n}();\n\nServerEventManagerPlugin\n/* extends EventManagerPlugin which is private */\n.ɵfac = function ServerEventManagerPlugin_Factory(t) {\n  return new (t || ServerEventManagerPlugin\n  /* extends EventManagerPlugin which is private */\n  )(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nServerEventManagerPlugin\n/* extends EventManagerPlugin which is private */\n.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ServerEventManagerPlugin\n  /* extends EventManagerPlugin which is private */\n  ,\n  factory: ServerEventManagerPlugin\n  /* extends EventManagerPlugin which is private */\n  .ɵfac\n});\n\nServerEventManagerPlugin.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServerEventManagerPlugin\n  /* extends EventManagerPlugin which is private */\n  , [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar EMPTY_ARRAY = [];\nvar DEFAULT_SCHEMA = new DomElementSchemaRegistry();\n\nvar ServerRendererFactory2 = /*#__PURE__*/function () {\n  function ServerRendererFactory2(eventManager, ngZone, document, sharedStylesHost) {\n    _classCallCheck(this, ServerRendererFactory2);\n\n    this.eventManager = eventManager;\n    this.ngZone = ngZone;\n    this.document = document;\n    this.sharedStylesHost = sharedStylesHost;\n    this.rendererByCompId = new Map();\n    this.schema = DEFAULT_SCHEMA;\n    this.defaultRenderer = new DefaultServerRenderer2(eventManager, document, ngZone, this.schema);\n  }\n\n  return _createClass(ServerRendererFactory2, [{\n    key: \"createRenderer\",\n    value: function createRenderer(element, type) {\n      if (!element || !type) {\n        return this.defaultRenderer;\n      }\n\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n          {\n            var renderer = this.rendererByCompId.get(type.id);\n\n            if (!renderer) {\n              renderer = new EmulatedEncapsulationServerRenderer2(this.eventManager, this.document, this.ngZone, this.sharedStylesHost, this.schema, type);\n              this.rendererByCompId.set(type.id, renderer);\n            }\n\n            renderer.applyToHost(element);\n            return renderer;\n          }\n\n        default:\n          {\n            if (!this.rendererByCompId.has(type.id)) {\n              var styles = ɵflattenStyles(type.id, type.styles, []);\n              this.sharedStylesHost.addStyles(styles);\n              this.rendererByCompId.set(type.id, this.defaultRenderer);\n            }\n\n            return this.defaultRenderer;\n          }\n      }\n    }\n  }, {\n    key: \"begin\",\n    value: function begin() {}\n  }, {\n    key: \"end\",\n    value: function end() {}\n  }]);\n}();\n\nServerRendererFactory2.ɵfac = function ServerRendererFactory2_Factory(t) {\n  return new (t || ServerRendererFactory2)(ɵngcc0.ɵɵinject(ɵngcc1.EventManager), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc1.ɵSharedStylesHost));\n};\n\nServerRendererFactory2.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ServerRendererFactory2,\n  factory: ServerRendererFactory2.ɵfac\n});\n\nServerRendererFactory2.ctorParameters = function () {\n  return [{\n    type: EventManager\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ɵSharedStylesHost\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServerRendererFactory2, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc1.EventManager\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc1.ɵSharedStylesHost\n    }];\n  }, null);\n})();\n\nvar DefaultServerRenderer2 = /*#__PURE__*/function () {\n  function DefaultServerRenderer2(eventManager, document, ngZone, schema) {\n    _classCallCheck(this, DefaultServerRenderer2);\n\n    this.eventManager = eventManager;\n    this.document = document;\n    this.ngZone = ngZone;\n    this.schema = schema;\n    this.data = Object.create(null);\n  }\n\n  return _createClass(DefaultServerRenderer2, [{\n    key: \"destroy\",\n    value: function destroy() {}\n  }, {\n    key: \"createElement\",\n    value: function createElement(name, namespace, debugInfo) {\n      if (namespace) {\n        var doc = this.document || ɵgetDOM().getDefaultDocument(); // TODO(FW-811): Ivy may cause issues here because it's passing around\n        // full URIs for namespaces, therefore this lookup will fail.\n\n        return doc.createElementNS(ɵNAMESPACE_URIS[namespace], name);\n      }\n\n      return ɵgetDOM().createElement(name, this.document);\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment(value, debugInfo) {\n      return ɵgetDOM().getDefaultDocument().createComment(value);\n    }\n  }, {\n    key: \"createText\",\n    value: function createText(value, debugInfo) {\n      var doc = ɵgetDOM().getDefaultDocument();\n      return doc.createTextNode(value);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      parent.appendChild(newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      if (parent) {\n        parent.insertBefore(newChild, refChild);\n      }\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      if (parent) {\n        parent.removeChild(oldChild);\n      }\n    }\n  }, {\n    key: \"selectRootElement\",\n    value: function selectRootElement(selectorOrNode, debugInfo) {\n      var el;\n\n      if (typeof selectorOrNode === 'string') {\n        el = this.document.querySelector(selectorOrNode);\n\n        if (!el) {\n          throw new Error(\"The selector \\\"\".concat(selectorOrNode, \"\\\" did not match any elements\"));\n        }\n      } else {\n        el = selectorOrNode;\n      }\n\n      while (el.firstChild) {\n        el.removeChild(el.firstChild);\n      }\n\n      return el;\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return node.parentNode;\n    }\n  }, {\n    key: \"nextSibling\",\n    value: function nextSibling(node) {\n      return node.nextSibling;\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(el, name, value, namespace) {\n      if (namespace) {\n        // TODO(FW-811): Ivy may cause issues here because it's passing around\n        // full URIs for namespaces, therefore this lookup will fail.\n        el.setAttributeNS(ɵNAMESPACE_URIS[namespace], namespace + ':' + name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(el, name, namespace) {\n      if (namespace) {\n        // TODO(FW-811): Ivy may cause issues here because it's passing around\n        // full URIs for namespaces, therefore this lookup will fail.\n        el.removeAttributeNS(ɵNAMESPACE_URIS[namespace], name);\n      } else {\n        el.removeAttribute(name);\n      }\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(el, name) {\n      el.classList.add(name);\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(el, name) {\n      el.classList.remove(name);\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(el, style, value, flags) {\n      style = style.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n      var styleMap = _readStyleAttribute(el);\n\n      if (flags & RendererStyleFlags2.Important) {\n        value += ' !important';\n      }\n\n      styleMap[style] = value == null ? '' : value;\n\n      _writeStyleAttribute(el, styleMap);\n    }\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(el, style, flags) {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      this.setStyle(el, style, '', flags);\n    } // The value was validated already as a property binding, against the property name.\n    // To know this value is safe to use as an attribute, the security context of the\n    // attribute with the given name is checked against that security context of the\n    // property.\n\n  }, {\n    key: \"_isSafeToReflectProperty\",\n    value: function _isSafeToReflectProperty(tagName, propertyName) {\n      return this.schema.securityContext(tagName, propertyName, true) === this.schema.securityContext(tagName, propertyName, false);\n    }\n  }, {\n    key: \"setProperty\",\n    value: function setProperty(el, name, value) {\n      checkNoSyntheticProp(name, 'property');\n\n      if (name === 'innerText') {\n        // Domino does not support innerText. Just map it to textContent.\n        el.textContent = value;\n      }\n\n      el[name] = value; // Mirror property values for known HTML element properties in the attributes.\n      // Skip `innerhtml` which is conservatively marked as an attribute for security\n      // purposes but is not actually an attribute.\n\n      var tagName = el.tagName.toLowerCase();\n\n      if (value != null && (typeof value === 'number' || typeof value == 'string') && name.toLowerCase() !== 'innerhtml' && this.schema.hasElement(tagName, EMPTY_ARRAY) && this.schema.hasProperty(tagName, name, EMPTY_ARRAY) && this._isSafeToReflectProperty(tagName, name)) {\n        this.setAttribute(el, name, value.toString());\n      }\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(node, value) {\n      node.textContent = value;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(target, eventName, callback) {\n      checkNoSyntheticProp(eventName, 'listener');\n\n      if (typeof target === 'string') {\n        return this.eventManager.addGlobalEventListener(target, eventName, this.decoratePreventDefault(callback));\n      }\n\n      return this.eventManager.addEventListener(target, eventName, this.decoratePreventDefault(callback));\n    }\n  }, {\n    key: \"decoratePreventDefault\",\n    value: function decoratePreventDefault(eventHandler) {\n      var _this4 = this;\n\n      return function (event) {\n        // Ivy uses `Function` as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n        if (event === Function) {\n          return eventHandler;\n        } // Run the event handler inside the ngZone because event handlers are not patched\n        // by Zone on the server. This is required only for tests.\n\n\n        var allowDefaultBehavior = _this4.ngZone.runGuarded(function () {\n          return eventHandler(event);\n        });\n\n        if (allowDefaultBehavior === false) {\n          event.preventDefault();\n          event.returnValue = false;\n        }\n\n        return undefined;\n      };\n    }\n  }]);\n}();\n\nvar AT_CHARCODE = '@'.charCodeAt(0);\n\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\"Found the synthetic \".concat(nameKind, \" \").concat(name, \". Please include either \\\"BrowserAnimationsModule\\\" or \\\"NoopAnimationsModule\\\" in your application.\"));\n  }\n}\n\nvar EmulatedEncapsulationServerRenderer2 = /*#__PURE__*/function (_DefaultServerRendere) {\n  function EmulatedEncapsulationServerRenderer2(eventManager, document, ngZone, sharedStylesHost, schema, component) {\n    var _this5;\n\n    _classCallCheck(this, EmulatedEncapsulationServerRenderer2);\n\n    _this5 = _callSuper(this, EmulatedEncapsulationServerRenderer2, [eventManager, document, ngZone, schema]);\n    _this5.component = component; // Add a 's' prefix to style attributes to indicate server.\n\n    var componentId = 's' + component.id;\n    var styles = ɵflattenStyles(componentId, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n    _this5.contentAttr = ɵshimContentAttribute(componentId);\n    _this5.hostAttr = ɵshimHostAttribute(componentId);\n    return _this5;\n  }\n\n  _inherits(EmulatedEncapsulationServerRenderer2, _DefaultServerRendere);\n\n  return _createClass(EmulatedEncapsulationServerRenderer2, [{\n    key: \"applyToHost\",\n    value: function applyToHost(element) {\n      _superPropGet(EmulatedEncapsulationServerRenderer2, \"setAttribute\", this, 3)([element, this.hostAttr, '']);\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(parent, name) {\n      var el = _superPropGet(EmulatedEncapsulationServerRenderer2, \"createElement\", this, 3)([parent, name, this.document]);\n\n      _superPropGet(EmulatedEncapsulationServerRenderer2, \"setAttribute\", this, 3)([el, this.contentAttr, '']);\n\n      return el;\n    }\n  }]);\n}(DefaultServerRenderer2);\n\nfunction _readStyleAttribute(element) {\n  var styleMap = {};\n  var styleAttribute = element.getAttribute('style');\n\n  if (styleAttribute) {\n    var styleList = styleAttribute.split(/;+/g);\n\n    for (var i = 0; i < styleList.length; i++) {\n      var style = styleList[i].trim();\n\n      if (style.length > 0) {\n        var colonIndex = style.indexOf(':');\n\n        if (colonIndex === -1) {\n          throw new Error(\"Invalid CSS style: \".concat(style));\n        }\n\n        var name = style.substr(0, colonIndex).trim();\n        styleMap[name] = style.substr(colonIndex + 1).trim();\n      }\n    }\n  }\n\n  return styleMap;\n}\n\nfunction _writeStyleAttribute(element, styleMap) {\n  var styleAttrValue = '';\n\n  for (var key in styleMap) {\n    var newValue = styleMap[key];\n\n    if (newValue != null) {\n      styleAttrValue += key + ':' + styleMap[key] + ';';\n    }\n  }\n\n  element.setAttribute('style', styleAttrValue);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar ServerStylesHost = /*#__PURE__*/function (_ɵSharedStylesHost) {\n  function ServerStylesHost(doc, transitionId) {\n    var _this6;\n\n    _classCallCheck(this, ServerStylesHost);\n\n    _this6 = _callSuper(this, ServerStylesHost);\n    _this6.doc = doc;\n    _this6.transitionId = transitionId;\n    _this6.head = null;\n    _this6._styleNodes = new Set();\n    _this6.head = doc.getElementsByTagName('head')[0];\n    return _this6;\n  }\n\n  _inherits(ServerStylesHost, _ɵSharedStylesHost);\n\n  return _createClass(ServerStylesHost, [{\n    key: \"_addStyle\",\n    value: function _addStyle(style) {\n      var adapter = ɵgetDOM();\n      var el = adapter.createElement('style');\n      el.textContent = style;\n\n      if (!!this.transitionId) {\n        el.setAttribute('ng-transition', this.transitionId);\n      }\n\n      this.head.appendChild(el);\n\n      this._styleNodes.add(el);\n    }\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {\n      var _this7 = this;\n\n      additions.forEach(function (style) {\n        return _this7._addStyle(style);\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._styleNodes.forEach(function (styleNode) {\n        return styleNode.remove();\n      });\n    }\n  }]);\n}(ɵSharedStylesHost);\n\nServerStylesHost.ɵfac = function ServerStylesHost_Factory(t) {\n  return new (t || ServerStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵTRANSITION_ID, 8));\n};\n\nServerStylesHost.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ServerStylesHost,\n  factory: ServerStylesHost.ɵfac\n});\n\nServerStylesHost.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ɵTRANSITION_ID]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServerStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ɵTRANSITION_ID]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction notSupported(feature) {\n  throw new Error(\"platform-server does not support '\".concat(feature, \"'.\"));\n}\n\nvar INTERNAL_SERVER_PLATFORM_PROVIDERS = [{\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: [Injector]\n}, {\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_SERVER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useFactory: initDominoAdapter,\n  multi: true,\n  deps: [Injector]\n}, {\n  provide: PlatformLocation,\n  useClass: ServerPlatformLocation,\n  deps: [DOCUMENT, [Optional, INITIAL_CONFIG]]\n}, {\n  provide: PlatformState,\n  deps: [DOCUMENT]\n}, // Add special provider that allows multiple instances of platformServer* to be created.\n{\n  provide: ɵALLOW_MULTIPLE_PLATFORMS,\n  useValue: true\n}];\n\nfunction initDominoAdapter(injector) {\n  return function () {\n    DominoAdapter.makeCurrent();\n  };\n}\n\nfunction instantiateServerRendererFactory(renderer, engine, zone) {\n  return new ɵAnimationRendererFactory(renderer, engine, zone);\n}\n\nvar SERVER_RENDER_PROVIDERS = [ServerRendererFactory2, {\n  provide: RendererFactory2,\n  useFactory: instantiateServerRendererFactory,\n  deps: [ServerRendererFactory2, ɵAnimationEngine, NgZone]\n}, ServerStylesHost, {\n  provide: ɵSharedStylesHost,\n  useExisting: ServerStylesHost\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  multi: true,\n  useClass: ServerEventManagerPlugin\n}];\n/**\n * The ng module for the server.\n *\n * @publicApi\n */\n\nvar ServerModule = /*#__PURE__*/_createClass(function ServerModule() {\n  _classCallCheck(this, ServerModule);\n});\n\nServerModule.ɵfac = function ServerModule_Factory(t) {\n  return new (t || ServerModule)();\n};\n\nServerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ServerModule\n});\nServerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [SERVER_RENDER_PROVIDERS, SERVER_HTTP_PROVIDERS, {\n    provide: Testability,\n    useValue: null\n  }, {\n    provide: ViewportScroller,\n    useClass: ɵNullViewportScroller\n  }],\n  imports: [[HttpClientModule, NoopAnimationsModule], BrowserModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ServerModule, {\n    imports: function imports() {\n      return [HttpClientModule, NoopAnimationsModule];\n    },\n    exports: function exports() {\n      return [BrowserModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServerModule, [{\n    type: NgModule,\n    args: [{\n      exports: [BrowserModule],\n      imports: [HttpClientModule, NoopAnimationsModule],\n      providers: [SERVER_RENDER_PROVIDERS, SERVER_HTTP_PROVIDERS, {\n        provide: Testability,\n        useValue: null\n      }, {\n        provide: ViewportScroller,\n        useClass: ɵNullViewportScroller\n      }]\n    }]\n  }], null, null);\n})();\n\nfunction _document(injector) {\n  var config = injector.get(INITIAL_CONFIG, null);\n  var document = config && config.document ? parseDocument(config.document, config.url) : ɵgetDOM().createHtmlDocument(); // Tell ivy about the global document\n\n  ɵsetDocument(document);\n  return document;\n}\n/**\n * @publicApi\n */\n\n\nvar platformServer = createPlatformFactory(platformCore, 'server', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n/**\n * The server platform that supports the runtime compiler.\n *\n * @publicApi\n */\n\nvar platformDynamicServer = createPlatformFactory(ɵplatformCoreDynamic, 'serverDynamic', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nfunction serializeTransferStateFactory(doc, appId, transferStore) {\n  return function () {\n    var script = doc.createElement('script');\n    script.id = appId + '-state';\n    script.setAttribute('type', 'application/json');\n    script.textContent = ɵescapeHtml(transferStore.toJson());\n    doc.body.appendChild(script);\n  };\n}\n/**\n * NgModule to install on the server side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\n\n\nvar ServerTransferStateModule = /*#__PURE__*/_createClass(function ServerTransferStateModule() {\n  _classCallCheck(this, ServerTransferStateModule);\n});\n\nServerTransferStateModule.ɵfac = function ServerTransferStateModule_Factory(t) {\n  return new (t || ServerTransferStateModule)();\n};\n\nServerTransferStateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ServerTransferStateModule\n});\nServerTransferStateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [TransferState, {\n    provide: BEFORE_APP_SERIALIZED,\n    useFactory: serializeTransferStateFactory,\n    deps: [DOCUMENT, APP_ID, TransferState],\n    multi: true\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServerTransferStateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [TransferState, {\n        provide: BEFORE_APP_SERIALIZED,\n        useFactory: serializeTransferStateFactory,\n        deps: [DOCUMENT, APP_ID, TransferState],\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction _getPlatform(platformFactory, options) {\n  var extraProviders = options.extraProviders ? options.extraProviders : [];\n  return platformFactory([{\n    provide: INITIAL_CONFIG,\n    useValue: {\n      document: options.document,\n      url: options.url\n    }\n  }, extraProviders]);\n}\n\nfunction _render(platform, moduleRefPromise) {\n  return moduleRefPromise.then(function (moduleRef) {\n    var transitionId = moduleRef.injector.get(ɵTRANSITION_ID, null);\n\n    if (!transitionId) {\n      throw new Error(\"renderModule[Factory]() requires the use of BrowserModule.withServerTransition() to ensure\\nthe server-rendered app can be properly bootstrapped into a client app.\");\n    }\n\n    var applicationRef = moduleRef.injector.get(ApplicationRef);\n    return applicationRef.isStable.pipe(first(function (isStable) {\n      return isStable;\n    })).toPromise().then(function () {\n      var platformState = platform.injector.get(PlatformState);\n      var asyncPromises = []; // Run any BEFORE_APP_SERIALIZED callbacks just before rendering to string.\n\n      var callbacks = moduleRef.injector.get(BEFORE_APP_SERIALIZED, null);\n\n      if (callbacks) {\n        var _iterator = _createForOfIteratorHelper(callbacks),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var callback = _step.value;\n\n            try {\n              var callbackResult = callback();\n\n              if (ɵisPromise(callbackResult)) {\n                // TODO: in TS3.7, callbackResult is void.\n                asyncPromises.push(callbackResult);\n              }\n            } catch (e) {\n              // Ignore exceptions.\n              console.warn('Ignoring BEFORE_APP_SERIALIZED Exception: ', e);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      var complete = function complete() {\n        var output = platformState.renderToString();\n        platform.destroy();\n        return output;\n      };\n\n      if (asyncPromises.length === 0) {\n        return complete();\n      }\n\n      return Promise.all(asyncPromises.map(function (asyncPromise) {\n        return asyncPromise.catch(function (e) {\n          console.warn('Ignoring BEFORE_APP_SERIALIZED Exception: ', e);\n        });\n      })).then(complete);\n    });\n  });\n}\n/**\n * Renders a Module to string.\n *\n * `document` is the full document HTML of the page to render, as a string.\n * `url` is the URL for the current render request.\n * `extraProviders` are the platform level providers for the current render request.\n *\n * If compiling with the ViewEngine renderer, do not use this in a production server environment.\n * Use pre-compiled {@link NgModuleFactory} with {@link renderModuleFactory} instead. If\n * compiling with the Ivy renderer, this method is the recommended rendering method for\n * platform-server.\n *\n * @publicApi\n */\n\n\nfunction renderModule(module, options) {\n  var platform = _getPlatform(platformDynamicServer, options);\n\n  return _render(platform, platform.bootstrapModule(module));\n}\n/**\n * Renders a {@link NgModuleFactory} to string.\n *\n * `document` is the full document HTML of the page to render, as a string.\n * `url` is the URL for the current render request.\n * `extraProviders` are the platform level providers for the current render request.\n *\n * @publicApi\n */\n\n\nfunction renderModuleFactory(moduleFactory, options) {\n  var platform = _getPlatform(platformServer, options);\n\n  return _render(platform, platform.bootstrapModuleFactory(moduleFactory));\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nvar VERSION = new Version('11.2.14');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BEFORE_APP_SERIALIZED, INITIAL_CONFIG, PlatformState, ServerModule, ServerTransferStateModule, VERSION, platformDynamicServer, platformServer, renderModule, renderModuleFactory, INTERNAL_SERVER_PLATFORM_PROVIDERS as ɵINTERNAL_SERVER_PLATFORM_PROVIDERS, SERVER_RENDER_PROVIDERS as ɵSERVER_RENDER_PROVIDERS, ServerRendererFactory2 as ɵServerRendererFactory2, instantiateServerRendererFactory as ɵangular_packages_platform_server_platform_server_a, serializeTransferStateFactory as ɵangular_packages_platform_server_platform_server_b, ServerStylesHost as ɵangular_packages_platform_server_platform_server_c, ServerEventManagerPlugin as ɵangular_packages_platform_server_platform_server_d, ServerXhr as ɵangular_packages_platform_server_platform_server_e, zoneWrappedInterceptingHandler as ɵangular_packages_platform_server_platform_server_f, SERVER_HTTP_PROVIDERS as ɵangular_packages_platform_server_platform_server_g }; //# sourceMappingURL=platform-server.js.map","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subject_1 = /*@__PURE__*/require('../Subject');\n\nvar Subscription_1 = /*@__PURE__*/require('../Subscription');\n\nvar SubscriptionLoggable_1 = /*@__PURE__*/require('./SubscriptionLoggable');\n\nvar applyMixins_1 = /*@__PURE__*/require('../util/applyMixins');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar HotObservable = function (_super) {\n  __extends(HotObservable, _super);\n\n  function HotObservable(messages, scheduler) {\n    _super.call(this);\n\n    this.messages = messages;\n    this.subscriptions = [];\n    this.scheduler = scheduler;\n  }\n  /** @deprecated internal use only */\n\n\n  HotObservable.prototype._subscribe = function (subscriber) {\n    var subject = this;\n    var index = subject.logSubscribedFrame();\n    subscriber.add(new Subscription_1.Subscription(function () {\n      subject.logUnsubscribedFrame(index);\n    }));\n    return _super.prototype._subscribe.call(this, subscriber);\n  };\n\n  HotObservable.prototype.setup = function () {\n    var subject = this;\n    var messagesLength = subject.messages.length;\n    /* tslint:disable:no-var-keyword */\n\n    for (var i = 0; i < messagesLength; i++) {\n      (function () {\n        var message = subject.messages[i];\n        /* tslint:enable */\n\n        subject.scheduler.schedule(function () {\n          message.notification.observe(subject);\n        }, message.frame);\n      })();\n    }\n  };\n\n  return HotObservable;\n}(Subject_1.Subject);\n\nexports.HotObservable = HotObservable;\n/*@__PURE__*/\n\napplyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);","map":null,"metadata":{},"sourceType":"script"}
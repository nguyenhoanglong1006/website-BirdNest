{"ast":null,"code":"\"use strict\";\n\nmodule.exports = NamedNodeMap;\n\nvar utils = require('./utils');\n/* This is a hacky implementation of NamedNodeMap, intended primarily to\n * satisfy clients (like dompurify and the web-platform-tests) which check\n * to ensure that Node#attributes instanceof NamedNodeMap. */\n\n\nfunction NamedNodeMap(element) {\n  this.element = element;\n}\n\nObject.defineProperties(NamedNodeMap.prototype, {\n  length: {\n    get: utils.shouldOverride\n  },\n  item: {\n    value: utils.shouldOverride\n  },\n  getNamedItem: {\n    value: function getNamedItem(qualifiedName) {\n      return this.element.getAttributeNode(qualifiedName);\n    }\n  },\n  getNamedItemNS: {\n    value: function getNamedItemNS(namespace, localName) {\n      return this.element.getAttributeNodeNS(namespace, localName);\n    }\n  },\n  setNamedItem: {\n    value: utils.nyi\n  },\n  setNamedItemNS: {\n    value: utils.nyi\n  },\n  removeNamedItem: {\n    value: function removeNamedItem(qualifiedName) {\n      var attr = this.element.getAttributeNode(qualifiedName);\n\n      if (attr) {\n        this.element.removeAttribute(qualifiedName);\n        return attr;\n      }\n\n      utils.NotFoundError();\n    }\n  },\n  removeNamedItemNS: {\n    value: function removeNamedItemNS(ns, lname) {\n      var attr = this.element.getAttributeNodeNS(ns, lname);\n\n      if (attr) {\n        this.element.removeAttributeNS(ns, lname);\n        return attr;\n      }\n\n      utils.NotFoundError();\n    }\n  }\n});","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n/* exported NodeTraversal */\n\nvar NodeTraversal = module.exports = {\n  nextSkippingChildren: nextSkippingChildren,\n  nextAncestorSibling: nextAncestorSibling,\n  next: next,\n  previous: previous,\n  deepLastChild: deepLastChild\n};\n/**\n * @based on WebKit's NodeTraversal::nextSkippingChildren\n * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.h?rev=179143#L109\n */\n\nfunction nextSkippingChildren(node, stayWithin) {\n  if (node === stayWithin) {\n    return null;\n  }\n\n  if (node.nextSibling !== null) {\n    return node.nextSibling;\n  }\n\n  return nextAncestorSibling(node, stayWithin);\n}\n/**\n * @based on WebKit's NodeTraversal::nextAncestorSibling\n * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.cpp?rev=179143#L93\n */\n\n\nfunction nextAncestorSibling(node, stayWithin) {\n  for (node = node.parentNode; node !== null; node = node.parentNode) {\n    if (node === stayWithin) {\n      return null;\n    }\n\n    if (node.nextSibling !== null) {\n      return node.nextSibling;\n    }\n  }\n\n  return null;\n}\n/**\n * @based on WebKit's NodeTraversal::next\n * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.h?rev=179143#L99\n */\n\n\nfunction next(node, stayWithin) {\n  var n;\n  n = node.firstChild;\n\n  if (n !== null) {\n    return n;\n  }\n\n  if (node === stayWithin) {\n    return null;\n  }\n\n  n = node.nextSibling;\n\n  if (n !== null) {\n    return n;\n  }\n\n  return nextAncestorSibling(node, stayWithin);\n}\n/**\n * @based on WebKit's NodeTraversal::deepLastChild\n * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.cpp?rev=179143#L116\n */\n\n\nfunction deepLastChild(node) {\n  while (node.lastChild) {\n    node = node.lastChild;\n  }\n\n  return node;\n}\n/**\n * @based on WebKit's NodeTraversal::previous\n * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.h?rev=179143#L121\n */\n\n\nfunction previous(node, stayWithin) {\n  var p;\n  p = node.previousSibling;\n\n  if (p !== null) {\n    return deepLastChild(p);\n  }\n\n  p = node.parentNode;\n\n  if (p === stayWithin) {\n    return null;\n  }\n\n  return p;\n}","map":null,"metadata":{},"sourceType":"script"}
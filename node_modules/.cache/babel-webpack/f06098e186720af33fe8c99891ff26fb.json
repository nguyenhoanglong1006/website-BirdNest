{"ast":null,"code":"\"use strict\";\n\nmodule.exports = ProcessingInstruction;\n\nvar Node = require('./Node');\n\nvar CharacterData = require('./CharacterData');\n\nfunction ProcessingInstruction(doc, target, data) {\n  CharacterData.call(this);\n  this.nodeType = Node.PROCESSING_INSTRUCTION_NODE;\n  this.ownerDocument = doc;\n  this.target = target;\n  this._data = data;\n}\n\nvar nodeValue = {\n  get: function get() {\n    return this._data;\n  },\n  set: function set(v) {\n    if (v === null || v === undefined) {\n      v = '';\n    } else {\n      v = String(v);\n    }\n\n    this._data = v;\n    if (this.rooted) this.ownerDocument.mutateValue(this);\n  }\n};\nProcessingInstruction.prototype = Object.create(CharacterData.prototype, {\n  nodeName: {\n    get: function get() {\n      return this.target;\n    }\n  },\n  nodeValue: nodeValue,\n  textContent: nodeValue,\n  data: {\n    get: nodeValue.get,\n    set: function set(v) {\n      nodeValue.set.call(this, v === null ? '' : String(v));\n    }\n  },\n  // Utility methods\n  clone: {\n    value: function clone() {\n      return new ProcessingInstruction(this.ownerDocument, this.target, this._data);\n    }\n  },\n  isEqual: {\n    value: function isEqual(n) {\n      return this.target === n.target && this._data === n._data;\n    }\n  }\n});","map":null,"metadata":{},"sourceType":"script"}
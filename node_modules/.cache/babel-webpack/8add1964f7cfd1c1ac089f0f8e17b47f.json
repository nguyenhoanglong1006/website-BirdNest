{"ast":null,"code":"import _toConsumableArray from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _possibleConstructorReturn from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createForOfIteratorHelper from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\n\nimport { __awaiter } from 'tslib';\nimport { ResourceLoader } from '@angular/compiler';\nimport { NgModuleFactory, CompilerFactory } from '@angular/core';\nimport { INITIAL_CONFIG, renderModuleFactory, platformDynamicServer } from '@angular/platform-server';\nimport path, { resolve, dirname } from 'path';\nimport { URL } from 'url';\nimport fs, { readFile as readFile$1, access as access$1, constants } from 'fs';\nimport { promisify } from 'util';\nimport prettyBytes from 'pretty-bytes';\nimport parse5 from 'parse5';\nimport css from 'css';\nimport chalk from 'chalk';\nimport parse5Htmlparser2TreeAdapter from 'parse5-htmlparser2-tree-adapter';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _readFile = promisify(readFile$1);\n\nvar access = promisify(access$1);\n\nfunction exists(path) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return access(path, constants.F_OK);\n\n        case 3:\n          return _context.abrupt(\"return\", true);\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", false);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n}\n/** ResourceLoader implementation for loading files */\n\n\nvar FileLoader = /*#__PURE__*/function () {\n  function FileLoader() {\n    _classCallCheck(this, FileLoader);\n  }\n\n  return _createClass(FileLoader, [{\n    key: \"get\",\n    value: function get(url) {\n      return _readFile(url, 'utf-8');\n    }\n  }]);\n}();\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');\n}\n\nfunction unwrapExports(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace(n) {\n  return n && n['default'] || n;\n}\n\nvar critters = createCommonjsModule(function (module) {\n  function _interopDefault(ex) {\n    return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n  }\n\n  var path$1 = _interopDefault(path);\n\n  var prettyBytes$1 = _interopDefault(prettyBytes);\n\n  var parse5$1 = _interopDefault(parse5);\n\n  var css$1 = _interopDefault(css);\n\n  var chalk$1 = _interopDefault(chalk);\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, basedir, module) {\n    return module = {\n      path: basedir,\n      exports: {},\n      require: function require(path, base) {\n        return commonjsRequire();\n      }\n    }, fn(module, module.exports), module.exports;\n  }\n\n  function getCjsExportFromNamespace(n) {\n    return n && n['default'] || n;\n  }\n\n  function commonjsRequire() {\n    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n  } //Types of elements found in the DOM\n\n\n  var domelementtype = {\n    Text: \"text\",\n    //Text\n    Directive: \"directive\",\n    //<? ... ?>\n    Comment: \"comment\",\n    //<!-- ... -->\n    Script: \"script\",\n    //<script> tags\n    Style: \"style\",\n    //<style> tags\n    Tag: \"tag\",\n    //Any tag\n    CDATA: \"cdata\",\n    //<![CDATA[ ... ]]>\n    Doctype: \"doctype\",\n    isTag: function isTag(elem) {\n      return elem.type === \"tag\" || elem.type === \"script\" || elem.type === \"style\";\n    }\n  };\n  var lib = createCommonjsModule(function (module, exports) {\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    /**\n     * Tests whether an element is a tag or not.\n     *\n     * @param elem Element to test\n     */\n\n    function isTag(elem) {\n      return elem.type === \"tag\"\n      /* Tag */\n      || elem.type === \"script\"\n      /* Script */\n      || elem.type === \"style\"\n      /* Style */\n      ;\n    }\n\n    exports.isTag = isTag; // Exports for backwards compatibility\n\n    exports.Text = \"text\"\n    /* Text */\n    ; //Text\n\n    exports.Directive = \"directive\"\n    /* Directive */\n    ; //<? ... ?>\n\n    exports.Comment = \"comment\"\n    /* Comment */\n    ; //<!-- ... -->\n\n    exports.Script = \"script\"\n    /* Script */\n    ; //<script> tags\n\n    exports.Style = \"style\"\n    /* Style */\n    ; //<style> tags\n\n    exports.Tag = \"tag\"\n    /* Tag */\n    ; //Any tag\n\n    exports.CDATA = \"cdata\"\n    /* CDATA */\n    ; //<![CDATA[ ... ]]>\n\n    exports.Doctype = \"doctype\"\n    /* Doctype */\n    ;\n  });\n  var Aacute = \"Á\";\n  var aacute = \"á\";\n  var Abreve = \"Ă\";\n  var abreve = \"ă\";\n  var ac = \"∾\";\n  var acd = \"∿\";\n  var acE = \"∾̳\";\n  var Acirc = \"Â\";\n  var acirc = \"â\";\n  var acute = \"´\";\n  var Acy = \"А\";\n  var acy = \"а\";\n  var AElig = \"Æ\";\n  var aelig = \"æ\";\n  var af = \"⁡\";\n  var Afr = \"𝔄\";\n  var afr = \"𝔞\";\n  var Agrave = \"À\";\n  var agrave = \"à\";\n  var alefsym = \"ℵ\";\n  var aleph = \"ℵ\";\n  var Alpha = \"Α\";\n  var alpha = \"α\";\n  var Amacr = \"Ā\";\n  var amacr = \"ā\";\n  var amalg = \"⨿\";\n  var amp = \"&\";\n  var AMP = \"&\";\n  var andand = \"⩕\";\n  var And = \"⩓\";\n  var and = \"∧\";\n  var andd = \"⩜\";\n  var andslope = \"⩘\";\n  var andv = \"⩚\";\n  var ang = \"∠\";\n  var ange = \"⦤\";\n  var angle = \"∠\";\n  var angmsdaa = \"⦨\";\n  var angmsdab = \"⦩\";\n  var angmsdac = \"⦪\";\n  var angmsdad = \"⦫\";\n  var angmsdae = \"⦬\";\n  var angmsdaf = \"⦭\";\n  var angmsdag = \"⦮\";\n  var angmsdah = \"⦯\";\n  var angmsd = \"∡\";\n  var angrt = \"∟\";\n  var angrtvb = \"⊾\";\n  var angrtvbd = \"⦝\";\n  var angsph = \"∢\";\n  var angst = \"Å\";\n  var angzarr = \"⍼\";\n  var Aogon = \"Ą\";\n  var aogon = \"ą\";\n  var Aopf = \"𝔸\";\n  var aopf = \"𝕒\";\n  var apacir = \"⩯\";\n  var ap = \"≈\";\n  var apE = \"⩰\";\n  var ape = \"≊\";\n  var apid = \"≋\";\n  var apos = \"'\";\n  var ApplyFunction = \"⁡\";\n  var approx = \"≈\";\n  var approxeq = \"≊\";\n  var Aring = \"Å\";\n  var aring = \"å\";\n  var Ascr = \"𝒜\";\n  var ascr = \"𝒶\";\n  var Assign = \"≔\";\n  var ast = \"*\";\n  var asymp = \"≈\";\n  var asympeq = \"≍\";\n  var Atilde = \"Ã\";\n  var atilde = \"ã\";\n  var Auml = \"Ä\";\n  var auml = \"ä\";\n  var awconint = \"∳\";\n  var awint = \"⨑\";\n  var backcong = \"≌\";\n  var backepsilon = \"϶\";\n  var backprime = \"‵\";\n  var backsim = \"∽\";\n  var backsimeq = \"⋍\";\n  var Backslash = \"∖\";\n  var Barv = \"⫧\";\n  var barvee = \"⊽\";\n  var barwed = \"⌅\";\n  var Barwed = \"⌆\";\n  var barwedge = \"⌅\";\n  var bbrk = \"⎵\";\n  var bbrktbrk = \"⎶\";\n  var bcong = \"≌\";\n  var Bcy = \"Б\";\n  var bcy = \"б\";\n  var bdquo = \"„\";\n  var becaus = \"∵\";\n  var because = \"∵\";\n  var Because = \"∵\";\n  var bemptyv = \"⦰\";\n  var bepsi = \"϶\";\n  var bernou = \"ℬ\";\n  var Bernoullis = \"ℬ\";\n  var Beta = \"Β\";\n  var beta = \"β\";\n  var beth = \"ℶ\";\n  var between = \"≬\";\n  var Bfr = \"𝔅\";\n  var bfr = \"𝔟\";\n  var bigcap = \"⋂\";\n  var bigcirc = \"◯\";\n  var bigcup = \"⋃\";\n  var bigodot = \"⨀\";\n  var bigoplus = \"⨁\";\n  var bigotimes = \"⨂\";\n  var bigsqcup = \"⨆\";\n  var bigstar = \"★\";\n  var bigtriangledown = \"▽\";\n  var bigtriangleup = \"△\";\n  var biguplus = \"⨄\";\n  var bigvee = \"⋁\";\n  var bigwedge = \"⋀\";\n  var bkarow = \"⤍\";\n  var blacklozenge = \"⧫\";\n  var blacksquare = \"▪\";\n  var blacktriangle = \"▴\";\n  var blacktriangledown = \"▾\";\n  var blacktriangleleft = \"◂\";\n  var blacktriangleright = \"▸\";\n  var blank = \"␣\";\n  var blk12 = \"▒\";\n  var blk14 = \"░\";\n  var blk34 = \"▓\";\n  var block = \"█\";\n  var bne = \"=⃥\";\n  var bnequiv = \"≡⃥\";\n  var bNot = \"⫭\";\n  var bnot = \"⌐\";\n  var Bopf = \"𝔹\";\n  var bopf = \"𝕓\";\n  var bot = \"⊥\";\n  var bottom = \"⊥\";\n  var bowtie = \"⋈\";\n  var boxbox = \"⧉\";\n  var boxdl = \"┐\";\n  var boxdL = \"╕\";\n  var boxDl = \"╖\";\n  var boxDL = \"╗\";\n  var boxdr = \"┌\";\n  var boxdR = \"╒\";\n  var boxDr = \"╓\";\n  var boxDR = \"╔\";\n  var boxh = \"─\";\n  var boxH = \"═\";\n  var boxhd = \"┬\";\n  var boxHd = \"╤\";\n  var boxhD = \"╥\";\n  var boxHD = \"╦\";\n  var boxhu = \"┴\";\n  var boxHu = \"╧\";\n  var boxhU = \"╨\";\n  var boxHU = \"╩\";\n  var boxminus = \"⊟\";\n  var boxplus = \"⊞\";\n  var boxtimes = \"⊠\";\n  var boxul = \"┘\";\n  var boxuL = \"╛\";\n  var boxUl = \"╜\";\n  var boxUL = \"╝\";\n  var boxur = \"└\";\n  var boxuR = \"╘\";\n  var boxUr = \"╙\";\n  var boxUR = \"╚\";\n  var boxv = \"│\";\n  var boxV = \"║\";\n  var boxvh = \"┼\";\n  var boxvH = \"╪\";\n  var boxVh = \"╫\";\n  var boxVH = \"╬\";\n  var boxvl = \"┤\";\n  var boxvL = \"╡\";\n  var boxVl = \"╢\";\n  var boxVL = \"╣\";\n  var boxvr = \"├\";\n  var boxvR = \"╞\";\n  var boxVr = \"╟\";\n  var boxVR = \"╠\";\n  var bprime = \"‵\";\n  var breve = \"˘\";\n  var Breve = \"˘\";\n  var brvbar = \"¦\";\n  var bscr = \"𝒷\";\n  var Bscr = \"ℬ\";\n  var bsemi = \"⁏\";\n  var bsim = \"∽\";\n  var bsime = \"⋍\";\n  var bsolb = \"⧅\";\n  var bsol = \"\\\\\";\n  var bsolhsub = \"⟈\";\n  var bull = \"•\";\n  var bullet = \"•\";\n  var bump = \"≎\";\n  var bumpE = \"⪮\";\n  var bumpe = \"≏\";\n  var Bumpeq = \"≎\";\n  var bumpeq = \"≏\";\n  var Cacute = \"Ć\";\n  var cacute = \"ć\";\n  var capand = \"⩄\";\n  var capbrcup = \"⩉\";\n  var capcap = \"⩋\";\n  var cap = \"∩\";\n  var Cap = \"⋒\";\n  var capcup = \"⩇\";\n  var capdot = \"⩀\";\n  var CapitalDifferentialD = \"ⅅ\";\n  var caps = \"∩︀\";\n  var caret = \"⁁\";\n  var caron = \"ˇ\";\n  var Cayleys = \"ℭ\";\n  var ccaps = \"⩍\";\n  var Ccaron = \"Č\";\n  var ccaron = \"č\";\n  var Ccedil = \"Ç\";\n  var ccedil = \"ç\";\n  var Ccirc = \"Ĉ\";\n  var ccirc = \"ĉ\";\n  var Cconint = \"∰\";\n  var ccups = \"⩌\";\n  var ccupssm = \"⩐\";\n  var Cdot = \"Ċ\";\n  var cdot = \"ċ\";\n  var cedil = \"¸\";\n  var Cedilla = \"¸\";\n  var cemptyv = \"⦲\";\n  var cent = \"¢\";\n  var centerdot = \"·\";\n  var CenterDot = \"·\";\n  var cfr = \"𝔠\";\n  var Cfr = \"ℭ\";\n  var CHcy = \"Ч\";\n  var chcy = \"ч\";\n  var check = \"✓\";\n  var checkmark = \"✓\";\n  var Chi = \"Χ\";\n  var chi = \"χ\";\n  var circ = \"ˆ\";\n  var circeq = \"≗\";\n  var circlearrowleft = \"↺\";\n  var circlearrowright = \"↻\";\n  var circledast = \"⊛\";\n  var circledcirc = \"⊚\";\n  var circleddash = \"⊝\";\n  var CircleDot = \"⊙\";\n  var circledR = \"®\";\n  var circledS = \"Ⓢ\";\n  var CircleMinus = \"⊖\";\n  var CirclePlus = \"⊕\";\n  var CircleTimes = \"⊗\";\n  var cir = \"○\";\n  var cirE = \"⧃\";\n  var cire = \"≗\";\n  var cirfnint = \"⨐\";\n  var cirmid = \"⫯\";\n  var cirscir = \"⧂\";\n  var ClockwiseContourIntegral = \"∲\";\n  var CloseCurlyDoubleQuote = \"”\";\n  var CloseCurlyQuote = \"’\";\n  var clubs = \"♣\";\n  var clubsuit = \"♣\";\n  var colon = \":\";\n  var Colon = \"∷\";\n  var Colone = \"⩴\";\n  var colone = \"≔\";\n  var coloneq = \"≔\";\n  var comma = \",\";\n  var commat = \"@\";\n  var comp = \"∁\";\n  var compfn = \"∘\";\n  var complement = \"∁\";\n  var complexes = \"ℂ\";\n  var cong = \"≅\";\n  var congdot = \"⩭\";\n  var Congruent = \"≡\";\n  var conint = \"∮\";\n  var Conint = \"∯\";\n  var ContourIntegral = \"∮\";\n  var copf = \"𝕔\";\n  var Copf = \"ℂ\";\n  var coprod = \"∐\";\n  var Coproduct = \"∐\";\n  var copy = \"©\";\n  var COPY = \"©\";\n  var copysr = \"℗\";\n  var CounterClockwiseContourIntegral = \"∳\";\n  var crarr = \"↵\";\n  var cross = \"✗\";\n  var Cross = \"⨯\";\n  var Cscr = \"𝒞\";\n  var cscr = \"𝒸\";\n  var csub = \"⫏\";\n  var csube = \"⫑\";\n  var csup = \"⫐\";\n  var csupe = \"⫒\";\n  var ctdot = \"⋯\";\n  var cudarrl = \"⤸\";\n  var cudarrr = \"⤵\";\n  var cuepr = \"⋞\";\n  var cuesc = \"⋟\";\n  var cularr = \"↶\";\n  var cularrp = \"⤽\";\n  var cupbrcap = \"⩈\";\n  var cupcap = \"⩆\";\n  var CupCap = \"≍\";\n  var cup = \"∪\";\n  var Cup = \"⋓\";\n  var cupcup = \"⩊\";\n  var cupdot = \"⊍\";\n  var cupor = \"⩅\";\n  var cups = \"∪︀\";\n  var curarr = \"↷\";\n  var curarrm = \"⤼\";\n  var curlyeqprec = \"⋞\";\n  var curlyeqsucc = \"⋟\";\n  var curlyvee = \"⋎\";\n  var curlywedge = \"⋏\";\n  var curren = \"¤\";\n  var curvearrowleft = \"↶\";\n  var curvearrowright = \"↷\";\n  var cuvee = \"⋎\";\n  var cuwed = \"⋏\";\n  var cwconint = \"∲\";\n  var cwint = \"∱\";\n  var cylcty = \"⌭\";\n  var dagger = \"†\";\n  var Dagger = \"‡\";\n  var daleth = \"ℸ\";\n  var darr = \"↓\";\n  var Darr = \"↡\";\n  var dArr = \"⇓\";\n  var dash = \"‐\";\n  var Dashv = \"⫤\";\n  var dashv = \"⊣\";\n  var dbkarow = \"⤏\";\n  var dblac = \"˝\";\n  var Dcaron = \"Ď\";\n  var dcaron = \"ď\";\n  var Dcy = \"Д\";\n  var dcy = \"д\";\n  var ddagger = \"‡\";\n  var ddarr = \"⇊\";\n  var DD = \"ⅅ\";\n  var dd = \"ⅆ\";\n  var DDotrahd = \"⤑\";\n  var ddotseq = \"⩷\";\n  var deg = \"°\";\n  var Del = \"∇\";\n  var Delta = \"Δ\";\n  var delta = \"δ\";\n  var demptyv = \"⦱\";\n  var dfisht = \"⥿\";\n  var Dfr = \"𝔇\";\n  var dfr = \"𝔡\";\n  var dHar = \"⥥\";\n  var dharl = \"⇃\";\n  var dharr = \"⇂\";\n  var DiacriticalAcute = \"´\";\n  var DiacriticalDot = \"˙\";\n  var DiacriticalDoubleAcute = \"˝\";\n  var DiacriticalGrave = \"`\";\n  var DiacriticalTilde = \"˜\";\n  var diam = \"⋄\";\n  var diamond = \"⋄\";\n  var Diamond = \"⋄\";\n  var diamondsuit = \"♦\";\n  var diams = \"♦\";\n  var die = \"¨\";\n  var DifferentialD = \"ⅆ\";\n  var digamma = \"ϝ\";\n  var disin = \"⋲\";\n  var div = \"÷\";\n  var divide = \"÷\";\n  var divideontimes = \"⋇\";\n  var divonx = \"⋇\";\n  var DJcy = \"Ђ\";\n  var djcy = \"ђ\";\n  var dlcorn = \"⌞\";\n  var dlcrop = \"⌍\";\n  var dollar = \"$\";\n  var Dopf = \"𝔻\";\n  var dopf = \"𝕕\";\n  var Dot = \"¨\";\n  var dot = \"˙\";\n  var DotDot = \"⃜\";\n  var doteq = \"≐\";\n  var doteqdot = \"≑\";\n  var DotEqual = \"≐\";\n  var dotminus = \"∸\";\n  var dotplus = \"∔\";\n  var dotsquare = \"⊡\";\n  var doublebarwedge = \"⌆\";\n  var DoubleContourIntegral = \"∯\";\n  var DoubleDot = \"¨\";\n  var DoubleDownArrow = \"⇓\";\n  var DoubleLeftArrow = \"⇐\";\n  var DoubleLeftRightArrow = \"⇔\";\n  var DoubleLeftTee = \"⫤\";\n  var DoubleLongLeftArrow = \"⟸\";\n  var DoubleLongLeftRightArrow = \"⟺\";\n  var DoubleLongRightArrow = \"⟹\";\n  var DoubleRightArrow = \"⇒\";\n  var DoubleRightTee = \"⊨\";\n  var DoubleUpArrow = \"⇑\";\n  var DoubleUpDownArrow = \"⇕\";\n  var DoubleVerticalBar = \"∥\";\n  var DownArrowBar = \"⤓\";\n  var downarrow = \"↓\";\n  var DownArrow = \"↓\";\n  var Downarrow = \"⇓\";\n  var DownArrowUpArrow = \"⇵\";\n  var DownBreve = \"̑\";\n  var downdownarrows = \"⇊\";\n  var downharpoonleft = \"⇃\";\n  var downharpoonright = \"⇂\";\n  var DownLeftRightVector = \"⥐\";\n  var DownLeftTeeVector = \"⥞\";\n  var DownLeftVectorBar = \"⥖\";\n  var DownLeftVector = \"↽\";\n  var DownRightTeeVector = \"⥟\";\n  var DownRightVectorBar = \"⥗\";\n  var DownRightVector = \"⇁\";\n  var DownTeeArrow = \"↧\";\n  var DownTee = \"⊤\";\n  var drbkarow = \"⤐\";\n  var drcorn = \"⌟\";\n  var drcrop = \"⌌\";\n  var Dscr = \"𝒟\";\n  var dscr = \"𝒹\";\n  var DScy = \"Ѕ\";\n  var dscy = \"ѕ\";\n  var dsol = \"⧶\";\n  var Dstrok = \"Đ\";\n  var dstrok = \"đ\";\n  var dtdot = \"⋱\";\n  var dtri = \"▿\";\n  var dtrif = \"▾\";\n  var duarr = \"⇵\";\n  var duhar = \"⥯\";\n  var dwangle = \"⦦\";\n  var DZcy = \"Џ\";\n  var dzcy = \"џ\";\n  var dzigrarr = \"⟿\";\n  var Eacute = \"É\";\n  var eacute = \"é\";\n  var easter = \"⩮\";\n  var Ecaron = \"Ě\";\n  var ecaron = \"ě\";\n  var Ecirc = \"Ê\";\n  var ecirc = \"ê\";\n  var ecir = \"≖\";\n  var ecolon = \"≕\";\n  var Ecy = \"Э\";\n  var ecy = \"э\";\n  var eDDot = \"⩷\";\n  var Edot = \"Ė\";\n  var edot = \"ė\";\n  var eDot = \"≑\";\n  var ee = \"ⅇ\";\n  var efDot = \"≒\";\n  var Efr = \"𝔈\";\n  var efr = \"𝔢\";\n  var eg = \"⪚\";\n  var Egrave = \"È\";\n  var egrave = \"è\";\n  var egs = \"⪖\";\n  var egsdot = \"⪘\";\n  var el = \"⪙\";\n  var Element = \"∈\";\n  var elinters = \"⏧\";\n  var ell = \"ℓ\";\n  var els = \"⪕\";\n  var elsdot = \"⪗\";\n  var Emacr = \"Ē\";\n  var emacr = \"ē\";\n  var empty = \"∅\";\n  var emptyset = \"∅\";\n  var EmptySmallSquare = \"◻\";\n  var emptyv = \"∅\";\n  var EmptyVerySmallSquare = \"▫\";\n  var emsp13 = \" \";\n  var emsp14 = \" \";\n  var emsp = \" \";\n  var ENG = \"Ŋ\";\n  var eng = \"ŋ\";\n  var ensp = \" \";\n  var Eogon = \"Ę\";\n  var eogon = \"ę\";\n  var Eopf = \"𝔼\";\n  var eopf = \"𝕖\";\n  var epar = \"⋕\";\n  var eparsl = \"⧣\";\n  var eplus = \"⩱\";\n  var epsi = \"ε\";\n  var Epsilon = \"Ε\";\n  var epsilon = \"ε\";\n  var epsiv = \"ϵ\";\n  var eqcirc = \"≖\";\n  var eqcolon = \"≕\";\n  var eqsim = \"≂\";\n  var eqslantgtr = \"⪖\";\n  var eqslantless = \"⪕\";\n  var Equal = \"⩵\";\n  var equals = \"=\";\n  var EqualTilde = \"≂\";\n  var equest = \"≟\";\n  var Equilibrium = \"⇌\";\n  var equiv = \"≡\";\n  var equivDD = \"⩸\";\n  var eqvparsl = \"⧥\";\n  var erarr = \"⥱\";\n  var erDot = \"≓\";\n  var escr = \"ℯ\";\n  var Escr = \"ℰ\";\n  var esdot = \"≐\";\n  var Esim = \"⩳\";\n  var esim = \"≂\";\n  var Eta = \"Η\";\n  var eta = \"η\";\n  var ETH = \"Ð\";\n  var eth = \"ð\";\n  var Euml = \"Ë\";\n  var euml = \"ë\";\n  var euro = \"€\";\n  var excl = \"!\";\n  var exist = \"∃\";\n  var Exists = \"∃\";\n  var expectation = \"ℰ\";\n  var exponentiale = \"ⅇ\";\n  var ExponentialE = \"ⅇ\";\n  var fallingdotseq = \"≒\";\n  var Fcy = \"Ф\";\n  var fcy = \"ф\";\n  var female = \"♀\";\n  var ffilig = \"ﬃ\";\n  var fflig = \"ﬀ\";\n  var ffllig = \"ﬄ\";\n  var Ffr = \"𝔉\";\n  var ffr = \"𝔣\";\n  var filig = \"ﬁ\";\n  var FilledSmallSquare = \"◼\";\n  var FilledVerySmallSquare = \"▪\";\n  var fjlig = \"fj\";\n  var flat = \"♭\";\n  var fllig = \"ﬂ\";\n  var fltns = \"▱\";\n  var fnof = \"ƒ\";\n  var Fopf = \"𝔽\";\n  var fopf = \"𝕗\";\n  var forall = \"∀\";\n  var ForAll = \"∀\";\n  var fork = \"⋔\";\n  var forkv = \"⫙\";\n  var Fouriertrf = \"ℱ\";\n  var fpartint = \"⨍\";\n  var frac12 = \"½\";\n  var frac13 = \"⅓\";\n  var frac14 = \"¼\";\n  var frac15 = \"⅕\";\n  var frac16 = \"⅙\";\n  var frac18 = \"⅛\";\n  var frac23 = \"⅔\";\n  var frac25 = \"⅖\";\n  var frac34 = \"¾\";\n  var frac35 = \"⅗\";\n  var frac38 = \"⅜\";\n  var frac45 = \"⅘\";\n  var frac56 = \"⅚\";\n  var frac58 = \"⅝\";\n  var frac78 = \"⅞\";\n  var frasl = \"⁄\";\n  var frown = \"⌢\";\n  var fscr = \"𝒻\";\n  var Fscr = \"ℱ\";\n  var gacute = \"ǵ\";\n  var Gamma = \"Γ\";\n  var gamma = \"γ\";\n  var Gammad = \"Ϝ\";\n  var gammad = \"ϝ\";\n  var gap = \"⪆\";\n  var Gbreve = \"Ğ\";\n  var gbreve = \"ğ\";\n  var Gcedil = \"Ģ\";\n  var Gcirc = \"Ĝ\";\n  var gcirc = \"ĝ\";\n  var Gcy = \"Г\";\n  var gcy = \"г\";\n  var Gdot = \"Ġ\";\n  var gdot = \"ġ\";\n  var ge = \"≥\";\n  var gE = \"≧\";\n  var gEl = \"⪌\";\n  var gel = \"⋛\";\n  var geq = \"≥\";\n  var geqq = \"≧\";\n  var geqslant = \"⩾\";\n  var gescc = \"⪩\";\n  var ges = \"⩾\";\n  var gesdot = \"⪀\";\n  var gesdoto = \"⪂\";\n  var gesdotol = \"⪄\";\n  var gesl = \"⋛︀\";\n  var gesles = \"⪔\";\n  var Gfr = \"𝔊\";\n  var gfr = \"𝔤\";\n  var gg = \"≫\";\n  var Gg = \"⋙\";\n  var ggg = \"⋙\";\n  var gimel = \"ℷ\";\n  var GJcy = \"Ѓ\";\n  var gjcy = \"ѓ\";\n  var gla = \"⪥\";\n  var gl = \"≷\";\n  var glE = \"⪒\";\n  var glj = \"⪤\";\n  var gnap = \"⪊\";\n  var gnapprox = \"⪊\";\n  var gne = \"⪈\";\n  var gnE = \"≩\";\n  var gneq = \"⪈\";\n  var gneqq = \"≩\";\n  var gnsim = \"⋧\";\n  var Gopf = \"𝔾\";\n  var gopf = \"𝕘\";\n  var grave = \"`\";\n  var GreaterEqual = \"≥\";\n  var GreaterEqualLess = \"⋛\";\n  var GreaterFullEqual = \"≧\";\n  var GreaterGreater = \"⪢\";\n  var GreaterLess = \"≷\";\n  var GreaterSlantEqual = \"⩾\";\n  var GreaterTilde = \"≳\";\n  var Gscr = \"𝒢\";\n  var gscr = \"ℊ\";\n  var gsim = \"≳\";\n  var gsime = \"⪎\";\n  var gsiml = \"⪐\";\n  var gtcc = \"⪧\";\n  var gtcir = \"⩺\";\n  var gt = \">\";\n  var GT = \">\";\n  var Gt = \"≫\";\n  var gtdot = \"⋗\";\n  var gtlPar = \"⦕\";\n  var gtquest = \"⩼\";\n  var gtrapprox = \"⪆\";\n  var gtrarr = \"⥸\";\n  var gtrdot = \"⋗\";\n  var gtreqless = \"⋛\";\n  var gtreqqless = \"⪌\";\n  var gtrless = \"≷\";\n  var gtrsim = \"≳\";\n  var gvertneqq = \"≩︀\";\n  var gvnE = \"≩︀\";\n  var Hacek = \"ˇ\";\n  var hairsp = \" \";\n  var half = \"½\";\n  var hamilt = \"ℋ\";\n  var HARDcy = \"Ъ\";\n  var hardcy = \"ъ\";\n  var harrcir = \"⥈\";\n  var harr = \"↔\";\n  var hArr = \"⇔\";\n  var harrw = \"↭\";\n  var Hat = \"^\";\n  var hbar = \"ℏ\";\n  var Hcirc = \"Ĥ\";\n  var hcirc = \"ĥ\";\n  var hearts = \"♥\";\n  var heartsuit = \"♥\";\n  var hellip = \"…\";\n  var hercon = \"⊹\";\n  var hfr = \"𝔥\";\n  var Hfr = \"ℌ\";\n  var HilbertSpace = \"ℋ\";\n  var hksearow = \"⤥\";\n  var hkswarow = \"⤦\";\n  var hoarr = \"⇿\";\n  var homtht = \"∻\";\n  var hookleftarrow = \"↩\";\n  var hookrightarrow = \"↪\";\n  var hopf = \"𝕙\";\n  var Hopf = \"ℍ\";\n  var horbar = \"―\";\n  var HorizontalLine = \"─\";\n  var hscr = \"𝒽\";\n  var Hscr = \"ℋ\";\n  var hslash = \"ℏ\";\n  var Hstrok = \"Ħ\";\n  var hstrok = \"ħ\";\n  var HumpDownHump = \"≎\";\n  var HumpEqual = \"≏\";\n  var hybull = \"⁃\";\n  var hyphen = \"‐\";\n  var Iacute = \"Í\";\n  var iacute = \"í\";\n  var ic = \"⁣\";\n  var Icirc = \"Î\";\n  var icirc = \"î\";\n  var Icy = \"И\";\n  var icy = \"и\";\n  var Idot = \"İ\";\n  var IEcy = \"Е\";\n  var iecy = \"е\";\n  var iexcl = \"¡\";\n  var iff = \"⇔\";\n  var ifr = \"𝔦\";\n  var Ifr = \"ℑ\";\n  var Igrave = \"Ì\";\n  var igrave = \"ì\";\n  var ii = \"ⅈ\";\n  var iiiint = \"⨌\";\n  var iiint = \"∭\";\n  var iinfin = \"⧜\";\n  var iiota = \"℩\";\n  var IJlig = \"Ĳ\";\n  var ijlig = \"ĳ\";\n  var Imacr = \"Ī\";\n  var imacr = \"ī\";\n  var image = \"ℑ\";\n  var ImaginaryI = \"ⅈ\";\n  var imagline = \"ℐ\";\n  var imagpart = \"ℑ\";\n  var imath = \"ı\";\n  var Im = \"ℑ\";\n  var imof = \"⊷\";\n  var imped = \"Ƶ\";\n  var Implies = \"⇒\";\n  var incare = \"℅\";\n  var infin = \"∞\";\n  var infintie = \"⧝\";\n  var inodot = \"ı\";\n  var intcal = \"⊺\";\n  var int = \"∫\";\n  var Int = \"∬\";\n  var integers = \"ℤ\";\n  var Integral = \"∫\";\n  var intercal = \"⊺\";\n  var Intersection = \"⋂\";\n  var intlarhk = \"⨗\";\n  var intprod = \"⨼\";\n  var InvisibleComma = \"⁣\";\n  var InvisibleTimes = \"⁢\";\n  var IOcy = \"Ё\";\n  var iocy = \"ё\";\n  var Iogon = \"Į\";\n  var iogon = \"į\";\n  var Iopf = \"𝕀\";\n  var iopf = \"𝕚\";\n  var Iota = \"Ι\";\n  var iota = \"ι\";\n  var iprod = \"⨼\";\n  var iquest = \"¿\";\n  var iscr = \"𝒾\";\n  var Iscr = \"ℐ\";\n  var isin = \"∈\";\n  var isindot = \"⋵\";\n  var isinE = \"⋹\";\n  var isins = \"⋴\";\n  var isinsv = \"⋳\";\n  var isinv = \"∈\";\n  var it = \"⁢\";\n  var Itilde = \"Ĩ\";\n  var itilde = \"ĩ\";\n  var Iukcy = \"І\";\n  var iukcy = \"і\";\n  var Iuml = \"Ï\";\n  var iuml = \"ï\";\n  var Jcirc = \"Ĵ\";\n  var jcirc = \"ĵ\";\n  var Jcy = \"Й\";\n  var jcy = \"й\";\n  var Jfr = \"𝔍\";\n  var jfr = \"𝔧\";\n  var jmath = \"ȷ\";\n  var Jopf = \"𝕁\";\n  var jopf = \"𝕛\";\n  var Jscr = \"𝒥\";\n  var jscr = \"𝒿\";\n  var Jsercy = \"Ј\";\n  var jsercy = \"ј\";\n  var Jukcy = \"Є\";\n  var jukcy = \"є\";\n  var Kappa = \"Κ\";\n  var kappa = \"κ\";\n  var kappav = \"ϰ\";\n  var Kcedil = \"Ķ\";\n  var kcedil = \"ķ\";\n  var Kcy = \"К\";\n  var kcy = \"к\";\n  var Kfr = \"𝔎\";\n  var kfr = \"𝔨\";\n  var kgreen = \"ĸ\";\n  var KHcy = \"Х\";\n  var khcy = \"х\";\n  var KJcy = \"Ќ\";\n  var kjcy = \"ќ\";\n  var Kopf = \"𝕂\";\n  var kopf = \"𝕜\";\n  var Kscr = \"𝒦\";\n  var kscr = \"𝓀\";\n  var lAarr = \"⇚\";\n  var Lacute = \"Ĺ\";\n  var lacute = \"ĺ\";\n  var laemptyv = \"⦴\";\n  var lagran = \"ℒ\";\n  var Lambda = \"Λ\";\n  var lambda = \"λ\";\n  var lang = \"⟨\";\n  var Lang = \"⟪\";\n  var langd = \"⦑\";\n  var langle = \"⟨\";\n  var lap = \"⪅\";\n  var Laplacetrf = \"ℒ\";\n  var laquo = \"«\";\n  var larrb = \"⇤\";\n  var larrbfs = \"⤟\";\n  var larr = \"←\";\n  var Larr = \"↞\";\n  var lArr = \"⇐\";\n  var larrfs = \"⤝\";\n  var larrhk = \"↩\";\n  var larrlp = \"↫\";\n  var larrpl = \"⤹\";\n  var larrsim = \"⥳\";\n  var larrtl = \"↢\";\n  var latail = \"⤙\";\n  var lAtail = \"⤛\";\n  var lat = \"⪫\";\n  var late = \"⪭\";\n  var lates = \"⪭︀\";\n  var lbarr = \"⤌\";\n  var lBarr = \"⤎\";\n  var lbbrk = \"❲\";\n  var lbrace = \"{\";\n  var lbrack = \"[\";\n  var lbrke = \"⦋\";\n  var lbrksld = \"⦏\";\n  var lbrkslu = \"⦍\";\n  var Lcaron = \"Ľ\";\n  var lcaron = \"ľ\";\n  var Lcedil = \"Ļ\";\n  var lcedil = \"ļ\";\n  var lceil = \"⌈\";\n  var lcub = \"{\";\n  var Lcy = \"Л\";\n  var lcy = \"л\";\n  var ldca = \"⤶\";\n  var ldquo = \"“\";\n  var ldquor = \"„\";\n  var ldrdhar = \"⥧\";\n  var ldrushar = \"⥋\";\n  var ldsh = \"↲\";\n  var le = \"≤\";\n  var lE = \"≦\";\n  var LeftAngleBracket = \"⟨\";\n  var LeftArrowBar = \"⇤\";\n  var leftarrow = \"←\";\n  var LeftArrow = \"←\";\n  var Leftarrow = \"⇐\";\n  var LeftArrowRightArrow = \"⇆\";\n  var leftarrowtail = \"↢\";\n  var LeftCeiling = \"⌈\";\n  var LeftDoubleBracket = \"⟦\";\n  var LeftDownTeeVector = \"⥡\";\n  var LeftDownVectorBar = \"⥙\";\n  var LeftDownVector = \"⇃\";\n  var LeftFloor = \"⌊\";\n  var leftharpoondown = \"↽\";\n  var leftharpoonup = \"↼\";\n  var leftleftarrows = \"⇇\";\n  var leftrightarrow = \"↔\";\n  var LeftRightArrow = \"↔\";\n  var Leftrightarrow = \"⇔\";\n  var leftrightarrows = \"⇆\";\n  var leftrightharpoons = \"⇋\";\n  var leftrightsquigarrow = \"↭\";\n  var LeftRightVector = \"⥎\";\n  var LeftTeeArrow = \"↤\";\n  var LeftTee = \"⊣\";\n  var LeftTeeVector = \"⥚\";\n  var leftthreetimes = \"⋋\";\n  var LeftTriangleBar = \"⧏\";\n  var LeftTriangle = \"⊲\";\n  var LeftTriangleEqual = \"⊴\";\n  var LeftUpDownVector = \"⥑\";\n  var LeftUpTeeVector = \"⥠\";\n  var LeftUpVectorBar = \"⥘\";\n  var LeftUpVector = \"↿\";\n  var LeftVectorBar = \"⥒\";\n  var LeftVector = \"↼\";\n  var lEg = \"⪋\";\n  var leg = \"⋚\";\n  var leq = \"≤\";\n  var leqq = \"≦\";\n  var leqslant = \"⩽\";\n  var lescc = \"⪨\";\n  var les = \"⩽\";\n  var lesdot = \"⩿\";\n  var lesdoto = \"⪁\";\n  var lesdotor = \"⪃\";\n  var lesg = \"⋚︀\";\n  var lesges = \"⪓\";\n  var lessapprox = \"⪅\";\n  var lessdot = \"⋖\";\n  var lesseqgtr = \"⋚\";\n  var lesseqqgtr = \"⪋\";\n  var LessEqualGreater = \"⋚\";\n  var LessFullEqual = \"≦\";\n  var LessGreater = \"≶\";\n  var lessgtr = \"≶\";\n  var LessLess = \"⪡\";\n  var lesssim = \"≲\";\n  var LessSlantEqual = \"⩽\";\n  var LessTilde = \"≲\";\n  var lfisht = \"⥼\";\n  var lfloor = \"⌊\";\n  var Lfr = \"𝔏\";\n  var lfr = \"𝔩\";\n  var lg = \"≶\";\n  var lgE = \"⪑\";\n  var lHar = \"⥢\";\n  var lhard = \"↽\";\n  var lharu = \"↼\";\n  var lharul = \"⥪\";\n  var lhblk = \"▄\";\n  var LJcy = \"Љ\";\n  var ljcy = \"љ\";\n  var llarr = \"⇇\";\n  var ll = \"≪\";\n  var Ll = \"⋘\";\n  var llcorner = \"⌞\";\n  var Lleftarrow = \"⇚\";\n  var llhard = \"⥫\";\n  var lltri = \"◺\";\n  var Lmidot = \"Ŀ\";\n  var lmidot = \"ŀ\";\n  var lmoustache = \"⎰\";\n  var lmoust = \"⎰\";\n  var lnap = \"⪉\";\n  var lnapprox = \"⪉\";\n  var lne = \"⪇\";\n  var lnE = \"≨\";\n  var lneq = \"⪇\";\n  var lneqq = \"≨\";\n  var lnsim = \"⋦\";\n  var loang = \"⟬\";\n  var loarr = \"⇽\";\n  var lobrk = \"⟦\";\n  var longleftarrow = \"⟵\";\n  var LongLeftArrow = \"⟵\";\n  var Longleftarrow = \"⟸\";\n  var longleftrightarrow = \"⟷\";\n  var LongLeftRightArrow = \"⟷\";\n  var Longleftrightarrow = \"⟺\";\n  var longmapsto = \"⟼\";\n  var longrightarrow = \"⟶\";\n  var LongRightArrow = \"⟶\";\n  var Longrightarrow = \"⟹\";\n  var looparrowleft = \"↫\";\n  var looparrowright = \"↬\";\n  var lopar = \"⦅\";\n  var Lopf = \"𝕃\";\n  var lopf = \"𝕝\";\n  var loplus = \"⨭\";\n  var lotimes = \"⨴\";\n  var lowast = \"∗\";\n  var lowbar = \"_\";\n  var LowerLeftArrow = \"↙\";\n  var LowerRightArrow = \"↘\";\n  var loz = \"◊\";\n  var lozenge = \"◊\";\n  var lozf = \"⧫\";\n  var lpar = \"(\";\n  var lparlt = \"⦓\";\n  var lrarr = \"⇆\";\n  var lrcorner = \"⌟\";\n  var lrhar = \"⇋\";\n  var lrhard = \"⥭\";\n  var lrm = \"‎\";\n  var lrtri = \"⊿\";\n  var lsaquo = \"‹\";\n  var lscr = \"𝓁\";\n  var Lscr = \"ℒ\";\n  var lsh = \"↰\";\n  var Lsh = \"↰\";\n  var lsim = \"≲\";\n  var lsime = \"⪍\";\n  var lsimg = \"⪏\";\n  var lsqb = \"[\";\n  var lsquo = \"‘\";\n  var lsquor = \"‚\";\n  var Lstrok = \"Ł\";\n  var lstrok = \"ł\";\n  var ltcc = \"⪦\";\n  var ltcir = \"⩹\";\n  var lt = \"<\";\n  var LT = \"<\";\n  var Lt = \"≪\";\n  var ltdot = \"⋖\";\n  var lthree = \"⋋\";\n  var ltimes = \"⋉\";\n  var ltlarr = \"⥶\";\n  var ltquest = \"⩻\";\n  var ltri = \"◃\";\n  var ltrie = \"⊴\";\n  var ltrif = \"◂\";\n  var ltrPar = \"⦖\";\n  var lurdshar = \"⥊\";\n  var luruhar = \"⥦\";\n  var lvertneqq = \"≨︀\";\n  var lvnE = \"≨︀\";\n  var macr = \"¯\";\n  var male = \"♂\";\n  var malt = \"✠\";\n  var maltese = \"✠\";\n  var map = \"↦\";\n  var mapsto = \"↦\";\n  var mapstodown = \"↧\";\n  var mapstoleft = \"↤\";\n  var mapstoup = \"↥\";\n  var marker = \"▮\";\n  var mcomma = \"⨩\";\n  var Mcy = \"М\";\n  var mcy = \"м\";\n  var mdash = \"—\";\n  var mDDot = \"∺\";\n  var measuredangle = \"∡\";\n  var MediumSpace = \" \";\n  var Mellintrf = \"ℳ\";\n  var Mfr = \"𝔐\";\n  var mfr = \"𝔪\";\n  var mho = \"℧\";\n  var micro = \"µ\";\n  var midast = \"*\";\n  var midcir = \"⫰\";\n  var mid = \"∣\";\n  var middot = \"·\";\n  var minusb = \"⊟\";\n  var minus = \"−\";\n  var minusd = \"∸\";\n  var minusdu = \"⨪\";\n  var MinusPlus = \"∓\";\n  var mlcp = \"⫛\";\n  var mldr = \"…\";\n  var mnplus = \"∓\";\n  var models = \"⊧\";\n  var Mopf = \"𝕄\";\n  var mopf = \"𝕞\";\n  var mp = \"∓\";\n  var mscr = \"𝓂\";\n  var Mscr = \"ℳ\";\n  var mstpos = \"∾\";\n  var Mu = \"Μ\";\n  var mu = \"μ\";\n  var multimap = \"⊸\";\n  var mumap = \"⊸\";\n  var nabla = \"∇\";\n  var Nacute = \"Ń\";\n  var nacute = \"ń\";\n  var nang = \"∠⃒\";\n  var nap = \"≉\";\n  var napE = \"⩰̸\";\n  var napid = \"≋̸\";\n  var napos = \"ŉ\";\n  var napprox = \"≉\";\n  var natural = \"♮\";\n  var naturals = \"ℕ\";\n  var natur = \"♮\";\n  var nbsp = \" \";\n  var nbump = \"≎̸\";\n  var nbumpe = \"≏̸\";\n  var ncap = \"⩃\";\n  var Ncaron = \"Ň\";\n  var ncaron = \"ň\";\n  var Ncedil = \"Ņ\";\n  var ncedil = \"ņ\";\n  var ncong = \"≇\";\n  var ncongdot = \"⩭̸\";\n  var ncup = \"⩂\";\n  var Ncy = \"Н\";\n  var ncy = \"н\";\n  var ndash = \"–\";\n  var nearhk = \"⤤\";\n  var nearr = \"↗\";\n  var neArr = \"⇗\";\n  var nearrow = \"↗\";\n  var ne = \"≠\";\n  var nedot = \"≐̸\";\n  var NegativeMediumSpace = \"​\";\n  var NegativeThickSpace = \"​\";\n  var NegativeThinSpace = \"​\";\n  var NegativeVeryThinSpace = \"​\";\n  var nequiv = \"≢\";\n  var nesear = \"⤨\";\n  var nesim = \"≂̸\";\n  var NestedGreaterGreater = \"≫\";\n  var NestedLessLess = \"≪\";\n  var NewLine = \"\\n\";\n  var nexist = \"∄\";\n  var nexists = \"∄\";\n  var Nfr = \"𝔑\";\n  var nfr = \"𝔫\";\n  var ngE = \"≧̸\";\n  var nge = \"≱\";\n  var ngeq = \"≱\";\n  var ngeqq = \"≧̸\";\n  var ngeqslant = \"⩾̸\";\n  var nges = \"⩾̸\";\n  var nGg = \"⋙̸\";\n  var ngsim = \"≵\";\n  var nGt = \"≫⃒\";\n  var ngt = \"≯\";\n  var ngtr = \"≯\";\n  var nGtv = \"≫̸\";\n  var nharr = \"↮\";\n  var nhArr = \"⇎\";\n  var nhpar = \"⫲\";\n  var ni = \"∋\";\n  var nis = \"⋼\";\n  var nisd = \"⋺\";\n  var niv = \"∋\";\n  var NJcy = \"Њ\";\n  var njcy = \"њ\";\n  var nlarr = \"↚\";\n  var nlArr = \"⇍\";\n  var nldr = \"‥\";\n  var nlE = \"≦̸\";\n  var nle = \"≰\";\n  var nleftarrow = \"↚\";\n  var nLeftarrow = \"⇍\";\n  var nleftrightarrow = \"↮\";\n  var nLeftrightarrow = \"⇎\";\n  var nleq = \"≰\";\n  var nleqq = \"≦̸\";\n  var nleqslant = \"⩽̸\";\n  var nles = \"⩽̸\";\n  var nless = \"≮\";\n  var nLl = \"⋘̸\";\n  var nlsim = \"≴\";\n  var nLt = \"≪⃒\";\n  var nlt = \"≮\";\n  var nltri = \"⋪\";\n  var nltrie = \"⋬\";\n  var nLtv = \"≪̸\";\n  var nmid = \"∤\";\n  var NoBreak = \"⁠\";\n  var NonBreakingSpace = \" \";\n  var nopf = \"𝕟\";\n  var Nopf = \"ℕ\";\n  var Not = \"⫬\";\n  var not = \"¬\";\n  var NotCongruent = \"≢\";\n  var NotCupCap = \"≭\";\n  var NotDoubleVerticalBar = \"∦\";\n  var NotElement = \"∉\";\n  var NotEqual = \"≠\";\n  var NotEqualTilde = \"≂̸\";\n  var NotExists = \"∄\";\n  var NotGreater = \"≯\";\n  var NotGreaterEqual = \"≱\";\n  var NotGreaterFullEqual = \"≧̸\";\n  var NotGreaterGreater = \"≫̸\";\n  var NotGreaterLess = \"≹\";\n  var NotGreaterSlantEqual = \"⩾̸\";\n  var NotGreaterTilde = \"≵\";\n  var NotHumpDownHump = \"≎̸\";\n  var NotHumpEqual = \"≏̸\";\n  var notin = \"∉\";\n  var notindot = \"⋵̸\";\n  var notinE = \"⋹̸\";\n  var notinva = \"∉\";\n  var notinvb = \"⋷\";\n  var notinvc = \"⋶\";\n  var NotLeftTriangleBar = \"⧏̸\";\n  var NotLeftTriangle = \"⋪\";\n  var NotLeftTriangleEqual = \"⋬\";\n  var NotLess = \"≮\";\n  var NotLessEqual = \"≰\";\n  var NotLessGreater = \"≸\";\n  var NotLessLess = \"≪̸\";\n  var NotLessSlantEqual = \"⩽̸\";\n  var NotLessTilde = \"≴\";\n  var NotNestedGreaterGreater = \"⪢̸\";\n  var NotNestedLessLess = \"⪡̸\";\n  var notni = \"∌\";\n  var notniva = \"∌\";\n  var notnivb = \"⋾\";\n  var notnivc = \"⋽\";\n  var NotPrecedes = \"⊀\";\n  var NotPrecedesEqual = \"⪯̸\";\n  var NotPrecedesSlantEqual = \"⋠\";\n  var NotReverseElement = \"∌\";\n  var NotRightTriangleBar = \"⧐̸\";\n  var NotRightTriangle = \"⋫\";\n  var NotRightTriangleEqual = \"⋭\";\n  var NotSquareSubset = \"⊏̸\";\n  var NotSquareSubsetEqual = \"⋢\";\n  var NotSquareSuperset = \"⊐̸\";\n  var NotSquareSupersetEqual = \"⋣\";\n  var NotSubset = \"⊂⃒\";\n  var NotSubsetEqual = \"⊈\";\n  var NotSucceeds = \"⊁\";\n  var NotSucceedsEqual = \"⪰̸\";\n  var NotSucceedsSlantEqual = \"⋡\";\n  var NotSucceedsTilde = \"≿̸\";\n  var NotSuperset = \"⊃⃒\";\n  var NotSupersetEqual = \"⊉\";\n  var NotTilde = \"≁\";\n  var NotTildeEqual = \"≄\";\n  var NotTildeFullEqual = \"≇\";\n  var NotTildeTilde = \"≉\";\n  var NotVerticalBar = \"∤\";\n  var nparallel = \"∦\";\n  var npar = \"∦\";\n  var nparsl = \"⫽⃥\";\n  var npart = \"∂̸\";\n  var npolint = \"⨔\";\n  var npr = \"⊀\";\n  var nprcue = \"⋠\";\n  var nprec = \"⊀\";\n  var npreceq = \"⪯̸\";\n  var npre = \"⪯̸\";\n  var nrarrc = \"⤳̸\";\n  var nrarr = \"↛\";\n  var nrArr = \"⇏\";\n  var nrarrw = \"↝̸\";\n  var nrightarrow = \"↛\";\n  var nRightarrow = \"⇏\";\n  var nrtri = \"⋫\";\n  var nrtrie = \"⋭\";\n  var nsc = \"⊁\";\n  var nsccue = \"⋡\";\n  var nsce = \"⪰̸\";\n  var Nscr = \"𝒩\";\n  var nscr = \"𝓃\";\n  var nshortmid = \"∤\";\n  var nshortparallel = \"∦\";\n  var nsim = \"≁\";\n  var nsime = \"≄\";\n  var nsimeq = \"≄\";\n  var nsmid = \"∤\";\n  var nspar = \"∦\";\n  var nsqsube = \"⋢\";\n  var nsqsupe = \"⋣\";\n  var nsub = \"⊄\";\n  var nsubE = \"⫅̸\";\n  var nsube = \"⊈\";\n  var nsubset = \"⊂⃒\";\n  var nsubseteq = \"⊈\";\n  var nsubseteqq = \"⫅̸\";\n  var nsucc = \"⊁\";\n  var nsucceq = \"⪰̸\";\n  var nsup = \"⊅\";\n  var nsupE = \"⫆̸\";\n  var nsupe = \"⊉\";\n  var nsupset = \"⊃⃒\";\n  var nsupseteq = \"⊉\";\n  var nsupseteqq = \"⫆̸\";\n  var ntgl = \"≹\";\n  var Ntilde = \"Ñ\";\n  var ntilde = \"ñ\";\n  var ntlg = \"≸\";\n  var ntriangleleft = \"⋪\";\n  var ntrianglelefteq = \"⋬\";\n  var ntriangleright = \"⋫\";\n  var ntrianglerighteq = \"⋭\";\n  var Nu = \"Ν\";\n  var nu = \"ν\";\n  var num = \"#\";\n  var numero = \"№\";\n  var numsp = \" \";\n  var nvap = \"≍⃒\";\n  var nvdash = \"⊬\";\n  var nvDash = \"⊭\";\n  var nVdash = \"⊮\";\n  var nVDash = \"⊯\";\n  var nvge = \"≥⃒\";\n  var nvgt = \">⃒\";\n  var nvHarr = \"⤄\";\n  var nvinfin = \"⧞\";\n  var nvlArr = \"⤂\";\n  var nvle = \"≤⃒\";\n  var nvlt = \"<⃒\";\n  var nvltrie = \"⊴⃒\";\n  var nvrArr = \"⤃\";\n  var nvrtrie = \"⊵⃒\";\n  var nvsim = \"∼⃒\";\n  var nwarhk = \"⤣\";\n  var nwarr = \"↖\";\n  var nwArr = \"⇖\";\n  var nwarrow = \"↖\";\n  var nwnear = \"⤧\";\n  var Oacute = \"Ó\";\n  var oacute = \"ó\";\n  var oast = \"⊛\";\n  var Ocirc = \"Ô\";\n  var ocirc = \"ô\";\n  var ocir = \"⊚\";\n  var Ocy = \"О\";\n  var ocy = \"о\";\n  var odash = \"⊝\";\n  var Odblac = \"Ő\";\n  var odblac = \"ő\";\n  var odiv = \"⨸\";\n  var odot = \"⊙\";\n  var odsold = \"⦼\";\n  var OElig = \"Œ\";\n  var oelig = \"œ\";\n  var ofcir = \"⦿\";\n  var Ofr = \"𝔒\";\n  var ofr = \"𝔬\";\n  var ogon = \"˛\";\n  var Ograve = \"Ò\";\n  var ograve = \"ò\";\n  var ogt = \"⧁\";\n  var ohbar = \"⦵\";\n  var ohm = \"Ω\";\n  var oint = \"∮\";\n  var olarr = \"↺\";\n  var olcir = \"⦾\";\n  var olcross = \"⦻\";\n  var oline = \"‾\";\n  var olt = \"⧀\";\n  var Omacr = \"Ō\";\n  var omacr = \"ō\";\n  var Omega = \"Ω\";\n  var omega = \"ω\";\n  var Omicron = \"Ο\";\n  var omicron = \"ο\";\n  var omid = \"⦶\";\n  var ominus = \"⊖\";\n  var Oopf = \"𝕆\";\n  var oopf = \"𝕠\";\n  var opar = \"⦷\";\n  var OpenCurlyDoubleQuote = \"“\";\n  var OpenCurlyQuote = \"‘\";\n  var operp = \"⦹\";\n  var oplus = \"⊕\";\n  var orarr = \"↻\";\n  var Or = \"⩔\";\n  var or = \"∨\";\n  var ord = \"⩝\";\n  var order = \"ℴ\";\n  var orderof = \"ℴ\";\n  var ordf = \"ª\";\n  var ordm = \"º\";\n  var origof = \"⊶\";\n  var oror = \"⩖\";\n  var orslope = \"⩗\";\n  var orv = \"⩛\";\n  var oS = \"Ⓢ\";\n  var Oscr = \"𝒪\";\n  var oscr = \"ℴ\";\n  var Oslash = \"Ø\";\n  var oslash = \"ø\";\n  var osol = \"⊘\";\n  var Otilde = \"Õ\";\n  var otilde = \"õ\";\n  var otimesas = \"⨶\";\n  var Otimes = \"⨷\";\n  var otimes = \"⊗\";\n  var Ouml = \"Ö\";\n  var ouml = \"ö\";\n  var ovbar = \"⌽\";\n  var OverBar = \"‾\";\n  var OverBrace = \"⏞\";\n  var OverBracket = \"⎴\";\n  var OverParenthesis = \"⏜\";\n  var para = \"¶\";\n  var parallel = \"∥\";\n  var par = \"∥\";\n  var parsim = \"⫳\";\n  var parsl = \"⫽\";\n  var part = \"∂\";\n  var PartialD = \"∂\";\n  var Pcy = \"П\";\n  var pcy = \"п\";\n  var percnt = \"%\";\n  var period = \".\";\n  var permil = \"‰\";\n  var perp = \"⊥\";\n  var pertenk = \"‱\";\n  var Pfr = \"𝔓\";\n  var pfr = \"𝔭\";\n  var Phi = \"Φ\";\n  var phi = \"φ\";\n  var phiv = \"ϕ\";\n  var phmmat = \"ℳ\";\n  var phone = \"☎\";\n  var Pi = \"Π\";\n  var pi = \"π\";\n  var pitchfork = \"⋔\";\n  var piv = \"ϖ\";\n  var planck = \"ℏ\";\n  var planckh = \"ℎ\";\n  var plankv = \"ℏ\";\n  var plusacir = \"⨣\";\n  var plusb = \"⊞\";\n  var pluscir = \"⨢\";\n  var plus = \"+\";\n  var plusdo = \"∔\";\n  var plusdu = \"⨥\";\n  var pluse = \"⩲\";\n  var PlusMinus = \"±\";\n  var plusmn = \"±\";\n  var plussim = \"⨦\";\n  var plustwo = \"⨧\";\n  var pm = \"±\";\n  var Poincareplane = \"ℌ\";\n  var pointint = \"⨕\";\n  var popf = \"𝕡\";\n  var Popf = \"ℙ\";\n  var pound = \"£\";\n  var prap = \"⪷\";\n  var Pr = \"⪻\";\n  var pr = \"≺\";\n  var prcue = \"≼\";\n  var precapprox = \"⪷\";\n  var prec = \"≺\";\n  var preccurlyeq = \"≼\";\n  var Precedes = \"≺\";\n  var PrecedesEqual = \"⪯\";\n  var PrecedesSlantEqual = \"≼\";\n  var PrecedesTilde = \"≾\";\n  var preceq = \"⪯\";\n  var precnapprox = \"⪹\";\n  var precneqq = \"⪵\";\n  var precnsim = \"⋨\";\n  var pre = \"⪯\";\n  var prE = \"⪳\";\n  var precsim = \"≾\";\n  var prime = \"′\";\n  var Prime = \"″\";\n  var primes = \"ℙ\";\n  var prnap = \"⪹\";\n  var prnE = \"⪵\";\n  var prnsim = \"⋨\";\n  var prod = \"∏\";\n  var Product = \"∏\";\n  var profalar = \"⌮\";\n  var profline = \"⌒\";\n  var profsurf = \"⌓\";\n  var prop = \"∝\";\n  var Proportional = \"∝\";\n  var Proportion = \"∷\";\n  var propto = \"∝\";\n  var prsim = \"≾\";\n  var prurel = \"⊰\";\n  var Pscr = \"𝒫\";\n  var pscr = \"𝓅\";\n  var Psi = \"Ψ\";\n  var psi = \"ψ\";\n  var puncsp = \" \";\n  var Qfr = \"𝔔\";\n  var qfr = \"𝔮\";\n  var qint = \"⨌\";\n  var qopf = \"𝕢\";\n  var Qopf = \"ℚ\";\n  var qprime = \"⁗\";\n  var Qscr = \"𝒬\";\n  var qscr = \"𝓆\";\n  var quaternions = \"ℍ\";\n  var quatint = \"⨖\";\n  var quest = \"?\";\n  var questeq = \"≟\";\n  var quot = \"\\\"\";\n  var QUOT = \"\\\"\";\n  var rAarr = \"⇛\";\n  var race = \"∽̱\";\n  var Racute = \"Ŕ\";\n  var racute = \"ŕ\";\n  var radic = \"√\";\n  var raemptyv = \"⦳\";\n  var rang = \"⟩\";\n  var Rang = \"⟫\";\n  var rangd = \"⦒\";\n  var range = \"⦥\";\n  var rangle = \"⟩\";\n  var raquo = \"»\";\n  var rarrap = \"⥵\";\n  var rarrb = \"⇥\";\n  var rarrbfs = \"⤠\";\n  var rarrc = \"⤳\";\n  var rarr = \"→\";\n  var Rarr = \"↠\";\n  var rArr = \"⇒\";\n  var rarrfs = \"⤞\";\n  var rarrhk = \"↪\";\n  var rarrlp = \"↬\";\n  var rarrpl = \"⥅\";\n  var rarrsim = \"⥴\";\n  var Rarrtl = \"⤖\";\n  var rarrtl = \"↣\";\n  var rarrw = \"↝\";\n  var ratail = \"⤚\";\n  var rAtail = \"⤜\";\n  var ratio = \"∶\";\n  var rationals = \"ℚ\";\n  var rbarr = \"⤍\";\n  var rBarr = \"⤏\";\n  var RBarr = \"⤐\";\n  var rbbrk = \"❳\";\n  var rbrace = \"}\";\n  var rbrack = \"]\";\n  var rbrke = \"⦌\";\n  var rbrksld = \"⦎\";\n  var rbrkslu = \"⦐\";\n  var Rcaron = \"Ř\";\n  var rcaron = \"ř\";\n  var Rcedil = \"Ŗ\";\n  var rcedil = \"ŗ\";\n  var rceil = \"⌉\";\n  var rcub = \"}\";\n  var Rcy = \"Р\";\n  var rcy = \"р\";\n  var rdca = \"⤷\";\n  var rdldhar = \"⥩\";\n  var rdquo = \"”\";\n  var rdquor = \"”\";\n  var rdsh = \"↳\";\n  var real = \"ℜ\";\n  var realine = \"ℛ\";\n  var realpart = \"ℜ\";\n  var reals = \"ℝ\";\n  var Re = \"ℜ\";\n  var rect = \"▭\";\n  var reg = \"®\";\n  var REG = \"®\";\n  var ReverseElement = \"∋\";\n  var ReverseEquilibrium = \"⇋\";\n  var ReverseUpEquilibrium = \"⥯\";\n  var rfisht = \"⥽\";\n  var rfloor = \"⌋\";\n  var rfr = \"𝔯\";\n  var Rfr = \"ℜ\";\n  var rHar = \"⥤\";\n  var rhard = \"⇁\";\n  var rharu = \"⇀\";\n  var rharul = \"⥬\";\n  var Rho = \"Ρ\";\n  var rho = \"ρ\";\n  var rhov = \"ϱ\";\n  var RightAngleBracket = \"⟩\";\n  var RightArrowBar = \"⇥\";\n  var rightarrow = \"→\";\n  var RightArrow = \"→\";\n  var Rightarrow = \"⇒\";\n  var RightArrowLeftArrow = \"⇄\";\n  var rightarrowtail = \"↣\";\n  var RightCeiling = \"⌉\";\n  var RightDoubleBracket = \"⟧\";\n  var RightDownTeeVector = \"⥝\";\n  var RightDownVectorBar = \"⥕\";\n  var RightDownVector = \"⇂\";\n  var RightFloor = \"⌋\";\n  var rightharpoondown = \"⇁\";\n  var rightharpoonup = \"⇀\";\n  var rightleftarrows = \"⇄\";\n  var rightleftharpoons = \"⇌\";\n  var rightrightarrows = \"⇉\";\n  var rightsquigarrow = \"↝\";\n  var RightTeeArrow = \"↦\";\n  var RightTee = \"⊢\";\n  var RightTeeVector = \"⥛\";\n  var rightthreetimes = \"⋌\";\n  var RightTriangleBar = \"⧐\";\n  var RightTriangle = \"⊳\";\n  var RightTriangleEqual = \"⊵\";\n  var RightUpDownVector = \"⥏\";\n  var RightUpTeeVector = \"⥜\";\n  var RightUpVectorBar = \"⥔\";\n  var RightUpVector = \"↾\";\n  var RightVectorBar = \"⥓\";\n  var RightVector = \"⇀\";\n  var ring = \"˚\";\n  var risingdotseq = \"≓\";\n  var rlarr = \"⇄\";\n  var rlhar = \"⇌\";\n  var rlm = \"‏\";\n  var rmoustache = \"⎱\";\n  var rmoust = \"⎱\";\n  var rnmid = \"⫮\";\n  var roang = \"⟭\";\n  var roarr = \"⇾\";\n  var robrk = \"⟧\";\n  var ropar = \"⦆\";\n  var ropf = \"𝕣\";\n  var Ropf = \"ℝ\";\n  var roplus = \"⨮\";\n  var rotimes = \"⨵\";\n  var RoundImplies = \"⥰\";\n  var rpar = \")\";\n  var rpargt = \"⦔\";\n  var rppolint = \"⨒\";\n  var rrarr = \"⇉\";\n  var Rrightarrow = \"⇛\";\n  var rsaquo = \"›\";\n  var rscr = \"𝓇\";\n  var Rscr = \"ℛ\";\n  var rsh = \"↱\";\n  var Rsh = \"↱\";\n  var rsqb = \"]\";\n  var rsquo = \"’\";\n  var rsquor = \"’\";\n  var rthree = \"⋌\";\n  var rtimes = \"⋊\";\n  var rtri = \"▹\";\n  var rtrie = \"⊵\";\n  var rtrif = \"▸\";\n  var rtriltri = \"⧎\";\n  var RuleDelayed = \"⧴\";\n  var ruluhar = \"⥨\";\n  var rx = \"℞\";\n  var Sacute = \"Ś\";\n  var sacute = \"ś\";\n  var sbquo = \"‚\";\n  var scap = \"⪸\";\n  var Scaron = \"Š\";\n  var scaron = \"š\";\n  var Sc = \"⪼\";\n  var sc = \"≻\";\n  var sccue = \"≽\";\n  var sce = \"⪰\";\n  var scE = \"⪴\";\n  var Scedil = \"Ş\";\n  var scedil = \"ş\";\n  var Scirc = \"Ŝ\";\n  var scirc = \"ŝ\";\n  var scnap = \"⪺\";\n  var scnE = \"⪶\";\n  var scnsim = \"⋩\";\n  var scpolint = \"⨓\";\n  var scsim = \"≿\";\n  var Scy = \"С\";\n  var scy = \"с\";\n  var sdotb = \"⊡\";\n  var sdot = \"⋅\";\n  var sdote = \"⩦\";\n  var searhk = \"⤥\";\n  var searr = \"↘\";\n  var seArr = \"⇘\";\n  var searrow = \"↘\";\n  var sect = \"§\";\n  var semi = \";\";\n  var seswar = \"⤩\";\n  var setminus = \"∖\";\n  var setmn = \"∖\";\n  var sext = \"✶\";\n  var Sfr = \"𝔖\";\n  var sfr = \"𝔰\";\n  var sfrown = \"⌢\";\n  var sharp = \"♯\";\n  var SHCHcy = \"Щ\";\n  var shchcy = \"щ\";\n  var SHcy = \"Ш\";\n  var shcy = \"ш\";\n  var ShortDownArrow = \"↓\";\n  var ShortLeftArrow = \"←\";\n  var shortmid = \"∣\";\n  var shortparallel = \"∥\";\n  var ShortRightArrow = \"→\";\n  var ShortUpArrow = \"↑\";\n  var shy = \"­\";\n  var Sigma = \"Σ\";\n  var sigma = \"σ\";\n  var sigmaf = \"ς\";\n  var sigmav = \"ς\";\n  var sim = \"∼\";\n  var simdot = \"⩪\";\n  var sime = \"≃\";\n  var simeq = \"≃\";\n  var simg = \"⪞\";\n  var simgE = \"⪠\";\n  var siml = \"⪝\";\n  var simlE = \"⪟\";\n  var simne = \"≆\";\n  var simplus = \"⨤\";\n  var simrarr = \"⥲\";\n  var slarr = \"←\";\n  var SmallCircle = \"∘\";\n  var smallsetminus = \"∖\";\n  var smashp = \"⨳\";\n  var smeparsl = \"⧤\";\n  var smid = \"∣\";\n  var smile = \"⌣\";\n  var smt = \"⪪\";\n  var smte = \"⪬\";\n  var smtes = \"⪬︀\";\n  var SOFTcy = \"Ь\";\n  var softcy = \"ь\";\n  var solbar = \"⌿\";\n  var solb = \"⧄\";\n  var sol = \"/\";\n  var Sopf = \"𝕊\";\n  var sopf = \"𝕤\";\n  var spades = \"♠\";\n  var spadesuit = \"♠\";\n  var spar = \"∥\";\n  var sqcap = \"⊓\";\n  var sqcaps = \"⊓︀\";\n  var sqcup = \"⊔\";\n  var sqcups = \"⊔︀\";\n  var Sqrt = \"√\";\n  var sqsub = \"⊏\";\n  var sqsube = \"⊑\";\n  var sqsubset = \"⊏\";\n  var sqsubseteq = \"⊑\";\n  var sqsup = \"⊐\";\n  var sqsupe = \"⊒\";\n  var sqsupset = \"⊐\";\n  var sqsupseteq = \"⊒\";\n  var square = \"□\";\n  var Square = \"□\";\n  var SquareIntersection = \"⊓\";\n  var SquareSubset = \"⊏\";\n  var SquareSubsetEqual = \"⊑\";\n  var SquareSuperset = \"⊐\";\n  var SquareSupersetEqual = \"⊒\";\n  var SquareUnion = \"⊔\";\n  var squarf = \"▪\";\n  var squ = \"□\";\n  var squf = \"▪\";\n  var srarr = \"→\";\n  var Sscr = \"𝒮\";\n  var sscr = \"𝓈\";\n  var ssetmn = \"∖\";\n  var ssmile = \"⌣\";\n  var sstarf = \"⋆\";\n  var Star = \"⋆\";\n  var star = \"☆\";\n  var starf = \"★\";\n  var straightepsilon = \"ϵ\";\n  var straightphi = \"ϕ\";\n  var strns = \"¯\";\n  var sub = \"⊂\";\n  var Sub = \"⋐\";\n  var subdot = \"⪽\";\n  var subE = \"⫅\";\n  var sube = \"⊆\";\n  var subedot = \"⫃\";\n  var submult = \"⫁\";\n  var subnE = \"⫋\";\n  var subne = \"⊊\";\n  var subplus = \"⪿\";\n  var subrarr = \"⥹\";\n  var subset = \"⊂\";\n  var Subset = \"⋐\";\n  var subseteq = \"⊆\";\n  var subseteqq = \"⫅\";\n  var SubsetEqual = \"⊆\";\n  var subsetneq = \"⊊\";\n  var subsetneqq = \"⫋\";\n  var subsim = \"⫇\";\n  var subsub = \"⫕\";\n  var subsup = \"⫓\";\n  var succapprox = \"⪸\";\n  var succ = \"≻\";\n  var succcurlyeq = \"≽\";\n  var Succeeds = \"≻\";\n  var SucceedsEqual = \"⪰\";\n  var SucceedsSlantEqual = \"≽\";\n  var SucceedsTilde = \"≿\";\n  var succeq = \"⪰\";\n  var succnapprox = \"⪺\";\n  var succneqq = \"⪶\";\n  var succnsim = \"⋩\";\n  var succsim = \"≿\";\n  var SuchThat = \"∋\";\n  var sum = \"∑\";\n  var Sum = \"∑\";\n  var sung = \"♪\";\n  var sup1 = \"¹\";\n  var sup2 = \"²\";\n  var sup3 = \"³\";\n  var sup = \"⊃\";\n  var Sup = \"⋑\";\n  var supdot = \"⪾\";\n  var supdsub = \"⫘\";\n  var supE = \"⫆\";\n  var supe = \"⊇\";\n  var supedot = \"⫄\";\n  var Superset = \"⊃\";\n  var SupersetEqual = \"⊇\";\n  var suphsol = \"⟉\";\n  var suphsub = \"⫗\";\n  var suplarr = \"⥻\";\n  var supmult = \"⫂\";\n  var supnE = \"⫌\";\n  var supne = \"⊋\";\n  var supplus = \"⫀\";\n  var supset = \"⊃\";\n  var Supset = \"⋑\";\n  var supseteq = \"⊇\";\n  var supseteqq = \"⫆\";\n  var supsetneq = \"⊋\";\n  var supsetneqq = \"⫌\";\n  var supsim = \"⫈\";\n  var supsub = \"⫔\";\n  var supsup = \"⫖\";\n  var swarhk = \"⤦\";\n  var swarr = \"↙\";\n  var swArr = \"⇙\";\n  var swarrow = \"↙\";\n  var swnwar = \"⤪\";\n  var szlig = \"ß\";\n  var Tab = \"\\t\";\n  var target = \"⌖\";\n  var Tau = \"Τ\";\n  var tau = \"τ\";\n  var tbrk = \"⎴\";\n  var Tcaron = \"Ť\";\n  var tcaron = \"ť\";\n  var Tcedil = \"Ţ\";\n  var tcedil = \"ţ\";\n  var Tcy = \"Т\";\n  var tcy = \"т\";\n  var tdot = \"⃛\";\n  var telrec = \"⌕\";\n  var Tfr = \"𝔗\";\n  var tfr = \"𝔱\";\n  var there4 = \"∴\";\n  var therefore = \"∴\";\n  var Therefore = \"∴\";\n  var Theta = \"Θ\";\n  var theta = \"θ\";\n  var thetasym = \"ϑ\";\n  var thetav = \"ϑ\";\n  var thickapprox = \"≈\";\n  var thicksim = \"∼\";\n  var ThickSpace = \"  \";\n  var ThinSpace = \" \";\n  var thinsp = \" \";\n  var thkap = \"≈\";\n  var thksim = \"∼\";\n  var THORN = \"Þ\";\n  var thorn = \"þ\";\n  var tilde = \"˜\";\n  var Tilde = \"∼\";\n  var TildeEqual = \"≃\";\n  var TildeFullEqual = \"≅\";\n  var TildeTilde = \"≈\";\n  var timesbar = \"⨱\";\n  var timesb = \"⊠\";\n  var times = \"×\";\n  var timesd = \"⨰\";\n  var tint = \"∭\";\n  var toea = \"⤨\";\n  var topbot = \"⌶\";\n  var topcir = \"⫱\";\n  var top = \"⊤\";\n  var Topf = \"𝕋\";\n  var topf = \"𝕥\";\n  var topfork = \"⫚\";\n  var tosa = \"⤩\";\n  var tprime = \"‴\";\n  var trade = \"™\";\n  var TRADE = \"™\";\n  var triangle = \"▵\";\n  var triangledown = \"▿\";\n  var triangleleft = \"◃\";\n  var trianglelefteq = \"⊴\";\n  var triangleq = \"≜\";\n  var triangleright = \"▹\";\n  var trianglerighteq = \"⊵\";\n  var tridot = \"◬\";\n  var trie = \"≜\";\n  var triminus = \"⨺\";\n  var TripleDot = \"⃛\";\n  var triplus = \"⨹\";\n  var trisb = \"⧍\";\n  var tritime = \"⨻\";\n  var trpezium = \"⏢\";\n  var Tscr = \"𝒯\";\n  var tscr = \"𝓉\";\n  var TScy = \"Ц\";\n  var tscy = \"ц\";\n  var TSHcy = \"Ћ\";\n  var tshcy = \"ћ\";\n  var Tstrok = \"Ŧ\";\n  var tstrok = \"ŧ\";\n  var twixt = \"≬\";\n  var twoheadleftarrow = \"↞\";\n  var twoheadrightarrow = \"↠\";\n  var Uacute = \"Ú\";\n  var uacute = \"ú\";\n  var uarr = \"↑\";\n  var Uarr = \"↟\";\n  var uArr = \"⇑\";\n  var Uarrocir = \"⥉\";\n  var Ubrcy = \"Ў\";\n  var ubrcy = \"ў\";\n  var Ubreve = \"Ŭ\";\n  var ubreve = \"ŭ\";\n  var Ucirc = \"Û\";\n  var ucirc = \"û\";\n  var Ucy = \"У\";\n  var ucy = \"у\";\n  var udarr = \"⇅\";\n  var Udblac = \"Ű\";\n  var udblac = \"ű\";\n  var udhar = \"⥮\";\n  var ufisht = \"⥾\";\n  var Ufr = \"𝔘\";\n  var ufr = \"𝔲\";\n  var Ugrave = \"Ù\";\n  var ugrave = \"ù\";\n  var uHar = \"⥣\";\n  var uharl = \"↿\";\n  var uharr = \"↾\";\n  var uhblk = \"▀\";\n  var ulcorn = \"⌜\";\n  var ulcorner = \"⌜\";\n  var ulcrop = \"⌏\";\n  var ultri = \"◸\";\n  var Umacr = \"Ū\";\n  var umacr = \"ū\";\n  var uml = \"¨\";\n  var UnderBar = \"_\";\n  var UnderBrace = \"⏟\";\n  var UnderBracket = \"⎵\";\n  var UnderParenthesis = \"⏝\";\n  var Union = \"⋃\";\n  var UnionPlus = \"⊎\";\n  var Uogon = \"Ų\";\n  var uogon = \"ų\";\n  var Uopf = \"𝕌\";\n  var uopf = \"𝕦\";\n  var UpArrowBar = \"⤒\";\n  var uparrow = \"↑\";\n  var UpArrow = \"↑\";\n  var Uparrow = \"⇑\";\n  var UpArrowDownArrow = \"⇅\";\n  var updownarrow = \"↕\";\n  var UpDownArrow = \"↕\";\n  var Updownarrow = \"⇕\";\n  var UpEquilibrium = \"⥮\";\n  var upharpoonleft = \"↿\";\n  var upharpoonright = \"↾\";\n  var uplus = \"⊎\";\n  var UpperLeftArrow = \"↖\";\n  var UpperRightArrow = \"↗\";\n  var upsi = \"υ\";\n  var Upsi = \"ϒ\";\n  var upsih = \"ϒ\";\n  var Upsilon = \"Υ\";\n  var upsilon = \"υ\";\n  var UpTeeArrow = \"↥\";\n  var UpTee = \"⊥\";\n  var upuparrows = \"⇈\";\n  var urcorn = \"⌝\";\n  var urcorner = \"⌝\";\n  var urcrop = \"⌎\";\n  var Uring = \"Ů\";\n  var uring = \"ů\";\n  var urtri = \"◹\";\n  var Uscr = \"𝒰\";\n  var uscr = \"𝓊\";\n  var utdot = \"⋰\";\n  var Utilde = \"Ũ\";\n  var utilde = \"ũ\";\n  var utri = \"▵\";\n  var utrif = \"▴\";\n  var uuarr = \"⇈\";\n  var Uuml = \"Ü\";\n  var uuml = \"ü\";\n  var uwangle = \"⦧\";\n  var vangrt = \"⦜\";\n  var varepsilon = \"ϵ\";\n  var varkappa = \"ϰ\";\n  var varnothing = \"∅\";\n  var varphi = \"ϕ\";\n  var varpi = \"ϖ\";\n  var varpropto = \"∝\";\n  var varr = \"↕\";\n  var vArr = \"⇕\";\n  var varrho = \"ϱ\";\n  var varsigma = \"ς\";\n  var varsubsetneq = \"⊊︀\";\n  var varsubsetneqq = \"⫋︀\";\n  var varsupsetneq = \"⊋︀\";\n  var varsupsetneqq = \"⫌︀\";\n  var vartheta = \"ϑ\";\n  var vartriangleleft = \"⊲\";\n  var vartriangleright = \"⊳\";\n  var vBar = \"⫨\";\n  var Vbar = \"⫫\";\n  var vBarv = \"⫩\";\n  var Vcy = \"В\";\n  var vcy = \"в\";\n  var vdash = \"⊢\";\n  var vDash = \"⊨\";\n  var Vdash = \"⊩\";\n  var VDash = \"⊫\";\n  var Vdashl = \"⫦\";\n  var veebar = \"⊻\";\n  var vee = \"∨\";\n  var Vee = \"⋁\";\n  var veeeq = \"≚\";\n  var vellip = \"⋮\";\n  var verbar = \"|\";\n  var Verbar = \"‖\";\n  var vert = \"|\";\n  var Vert = \"‖\";\n  var VerticalBar = \"∣\";\n  var VerticalLine = \"|\";\n  var VerticalSeparator = \"❘\";\n  var VerticalTilde = \"≀\";\n  var VeryThinSpace = \" \";\n  var Vfr = \"𝔙\";\n  var vfr = \"𝔳\";\n  var vltri = \"⊲\";\n  var vnsub = \"⊂⃒\";\n  var vnsup = \"⊃⃒\";\n  var Vopf = \"𝕍\";\n  var vopf = \"𝕧\";\n  var vprop = \"∝\";\n  var vrtri = \"⊳\";\n  var Vscr = \"𝒱\";\n  var vscr = \"𝓋\";\n  var vsubnE = \"⫋︀\";\n  var vsubne = \"⊊︀\";\n  var vsupnE = \"⫌︀\";\n  var vsupne = \"⊋︀\";\n  var Vvdash = \"⊪\";\n  var vzigzag = \"⦚\";\n  var Wcirc = \"Ŵ\";\n  var wcirc = \"ŵ\";\n  var wedbar = \"⩟\";\n  var wedge = \"∧\";\n  var Wedge = \"⋀\";\n  var wedgeq = \"≙\";\n  var weierp = \"℘\";\n  var Wfr = \"𝔚\";\n  var wfr = \"𝔴\";\n  var Wopf = \"𝕎\";\n  var wopf = \"𝕨\";\n  var wp = \"℘\";\n  var wr = \"≀\";\n  var wreath = \"≀\";\n  var Wscr = \"𝒲\";\n  var wscr = \"𝓌\";\n  var xcap = \"⋂\";\n  var xcirc = \"◯\";\n  var xcup = \"⋃\";\n  var xdtri = \"▽\";\n  var Xfr = \"𝔛\";\n  var xfr = \"𝔵\";\n  var xharr = \"⟷\";\n  var xhArr = \"⟺\";\n  var Xi = \"Ξ\";\n  var xi = \"ξ\";\n  var xlarr = \"⟵\";\n  var xlArr = \"⟸\";\n  var xmap = \"⟼\";\n  var xnis = \"⋻\";\n  var xodot = \"⨀\";\n  var Xopf = \"𝕏\";\n  var xopf = \"𝕩\";\n  var xoplus = \"⨁\";\n  var xotime = \"⨂\";\n  var xrarr = \"⟶\";\n  var xrArr = \"⟹\";\n  var Xscr = \"𝒳\";\n  var xscr = \"𝓍\";\n  var xsqcup = \"⨆\";\n  var xuplus = \"⨄\";\n  var xutri = \"△\";\n  var xvee = \"⋁\";\n  var xwedge = \"⋀\";\n  var Yacute = \"Ý\";\n  var yacute = \"ý\";\n  var YAcy = \"Я\";\n  var yacy = \"я\";\n  var Ycirc = \"Ŷ\";\n  var ycirc = \"ŷ\";\n  var Ycy = \"Ы\";\n  var ycy = \"ы\";\n  var yen = \"¥\";\n  var Yfr = \"𝔜\";\n  var yfr = \"𝔶\";\n  var YIcy = \"Ї\";\n  var yicy = \"ї\";\n  var Yopf = \"𝕐\";\n  var yopf = \"𝕪\";\n  var Yscr = \"𝒴\";\n  var yscr = \"𝓎\";\n  var YUcy = \"Ю\";\n  var yucy = \"ю\";\n  var yuml = \"ÿ\";\n  var Yuml = \"Ÿ\";\n  var Zacute = \"Ź\";\n  var zacute = \"ź\";\n  var Zcaron = \"Ž\";\n  var zcaron = \"ž\";\n  var Zcy = \"З\";\n  var zcy = \"з\";\n  var Zdot = \"Ż\";\n  var zdot = \"ż\";\n  var zeetrf = \"ℨ\";\n  var ZeroWidthSpace = \"​\";\n  var Zeta = \"Ζ\";\n  var zeta = \"ζ\";\n  var zfr = \"𝔷\";\n  var Zfr = \"ℨ\";\n  var ZHcy = \"Ж\";\n  var zhcy = \"ж\";\n  var zigrarr = \"⇝\";\n  var zopf = \"𝕫\";\n  var Zopf = \"ℤ\";\n  var Zscr = \"𝒵\";\n  var zscr = \"𝓏\";\n  var zwj = \"‍\";\n  var zwnj = \"‌\";\n  var entities = {\n    Aacute: Aacute,\n    aacute: aacute,\n    Abreve: Abreve,\n    abreve: abreve,\n    ac: ac,\n    acd: acd,\n    acE: acE,\n    Acirc: Acirc,\n    acirc: acirc,\n    acute: acute,\n    Acy: Acy,\n    acy: acy,\n    AElig: AElig,\n    aelig: aelig,\n    af: af,\n    Afr: Afr,\n    afr: afr,\n    Agrave: Agrave,\n    agrave: agrave,\n    alefsym: alefsym,\n    aleph: aleph,\n    Alpha: Alpha,\n    alpha: alpha,\n    Amacr: Amacr,\n    amacr: amacr,\n    amalg: amalg,\n    amp: amp,\n    AMP: AMP,\n    andand: andand,\n    And: And,\n    and: and,\n    andd: andd,\n    andslope: andslope,\n    andv: andv,\n    ang: ang,\n    ange: ange,\n    angle: angle,\n    angmsdaa: angmsdaa,\n    angmsdab: angmsdab,\n    angmsdac: angmsdac,\n    angmsdad: angmsdad,\n    angmsdae: angmsdae,\n    angmsdaf: angmsdaf,\n    angmsdag: angmsdag,\n    angmsdah: angmsdah,\n    angmsd: angmsd,\n    angrt: angrt,\n    angrtvb: angrtvb,\n    angrtvbd: angrtvbd,\n    angsph: angsph,\n    angst: angst,\n    angzarr: angzarr,\n    Aogon: Aogon,\n    aogon: aogon,\n    Aopf: Aopf,\n    aopf: aopf,\n    apacir: apacir,\n    ap: ap,\n    apE: apE,\n    ape: ape,\n    apid: apid,\n    apos: apos,\n    ApplyFunction: ApplyFunction,\n    approx: approx,\n    approxeq: approxeq,\n    Aring: Aring,\n    aring: aring,\n    Ascr: Ascr,\n    ascr: ascr,\n    Assign: Assign,\n    ast: ast,\n    asymp: asymp,\n    asympeq: asympeq,\n    Atilde: Atilde,\n    atilde: atilde,\n    Auml: Auml,\n    auml: auml,\n    awconint: awconint,\n    awint: awint,\n    backcong: backcong,\n    backepsilon: backepsilon,\n    backprime: backprime,\n    backsim: backsim,\n    backsimeq: backsimeq,\n    Backslash: Backslash,\n    Barv: Barv,\n    barvee: barvee,\n    barwed: barwed,\n    Barwed: Barwed,\n    barwedge: barwedge,\n    bbrk: bbrk,\n    bbrktbrk: bbrktbrk,\n    bcong: bcong,\n    Bcy: Bcy,\n    bcy: bcy,\n    bdquo: bdquo,\n    becaus: becaus,\n    because: because,\n    Because: Because,\n    bemptyv: bemptyv,\n    bepsi: bepsi,\n    bernou: bernou,\n    Bernoullis: Bernoullis,\n    Beta: Beta,\n    beta: beta,\n    beth: beth,\n    between: between,\n    Bfr: Bfr,\n    bfr: bfr,\n    bigcap: bigcap,\n    bigcirc: bigcirc,\n    bigcup: bigcup,\n    bigodot: bigodot,\n    bigoplus: bigoplus,\n    bigotimes: bigotimes,\n    bigsqcup: bigsqcup,\n    bigstar: bigstar,\n    bigtriangledown: bigtriangledown,\n    bigtriangleup: bigtriangleup,\n    biguplus: biguplus,\n    bigvee: bigvee,\n    bigwedge: bigwedge,\n    bkarow: bkarow,\n    blacklozenge: blacklozenge,\n    blacksquare: blacksquare,\n    blacktriangle: blacktriangle,\n    blacktriangledown: blacktriangledown,\n    blacktriangleleft: blacktriangleleft,\n    blacktriangleright: blacktriangleright,\n    blank: blank,\n    blk12: blk12,\n    blk14: blk14,\n    blk34: blk34,\n    block: block,\n    bne: bne,\n    bnequiv: bnequiv,\n    bNot: bNot,\n    bnot: bnot,\n    Bopf: Bopf,\n    bopf: bopf,\n    bot: bot,\n    bottom: bottom,\n    bowtie: bowtie,\n    boxbox: boxbox,\n    boxdl: boxdl,\n    boxdL: boxdL,\n    boxDl: boxDl,\n    boxDL: boxDL,\n    boxdr: boxdr,\n    boxdR: boxdR,\n    boxDr: boxDr,\n    boxDR: boxDR,\n    boxh: boxh,\n    boxH: boxH,\n    boxhd: boxhd,\n    boxHd: boxHd,\n    boxhD: boxhD,\n    boxHD: boxHD,\n    boxhu: boxhu,\n    boxHu: boxHu,\n    boxhU: boxhU,\n    boxHU: boxHU,\n    boxminus: boxminus,\n    boxplus: boxplus,\n    boxtimes: boxtimes,\n    boxul: boxul,\n    boxuL: boxuL,\n    boxUl: boxUl,\n    boxUL: boxUL,\n    boxur: boxur,\n    boxuR: boxuR,\n    boxUr: boxUr,\n    boxUR: boxUR,\n    boxv: boxv,\n    boxV: boxV,\n    boxvh: boxvh,\n    boxvH: boxvH,\n    boxVh: boxVh,\n    boxVH: boxVH,\n    boxvl: boxvl,\n    boxvL: boxvL,\n    boxVl: boxVl,\n    boxVL: boxVL,\n    boxvr: boxvr,\n    boxvR: boxvR,\n    boxVr: boxVr,\n    boxVR: boxVR,\n    bprime: bprime,\n    breve: breve,\n    Breve: Breve,\n    brvbar: brvbar,\n    bscr: bscr,\n    Bscr: Bscr,\n    bsemi: bsemi,\n    bsim: bsim,\n    bsime: bsime,\n    bsolb: bsolb,\n    bsol: bsol,\n    bsolhsub: bsolhsub,\n    bull: bull,\n    bullet: bullet,\n    bump: bump,\n    bumpE: bumpE,\n    bumpe: bumpe,\n    Bumpeq: Bumpeq,\n    bumpeq: bumpeq,\n    Cacute: Cacute,\n    cacute: cacute,\n    capand: capand,\n    capbrcup: capbrcup,\n    capcap: capcap,\n    cap: cap,\n    Cap: Cap,\n    capcup: capcup,\n    capdot: capdot,\n    CapitalDifferentialD: CapitalDifferentialD,\n    caps: caps,\n    caret: caret,\n    caron: caron,\n    Cayleys: Cayleys,\n    ccaps: ccaps,\n    Ccaron: Ccaron,\n    ccaron: ccaron,\n    Ccedil: Ccedil,\n    ccedil: ccedil,\n    Ccirc: Ccirc,\n    ccirc: ccirc,\n    Cconint: Cconint,\n    ccups: ccups,\n    ccupssm: ccupssm,\n    Cdot: Cdot,\n    cdot: cdot,\n    cedil: cedil,\n    Cedilla: Cedilla,\n    cemptyv: cemptyv,\n    cent: cent,\n    centerdot: centerdot,\n    CenterDot: CenterDot,\n    cfr: cfr,\n    Cfr: Cfr,\n    CHcy: CHcy,\n    chcy: chcy,\n    check: check,\n    checkmark: checkmark,\n    Chi: Chi,\n    chi: chi,\n    circ: circ,\n    circeq: circeq,\n    circlearrowleft: circlearrowleft,\n    circlearrowright: circlearrowright,\n    circledast: circledast,\n    circledcirc: circledcirc,\n    circleddash: circleddash,\n    CircleDot: CircleDot,\n    circledR: circledR,\n    circledS: circledS,\n    CircleMinus: CircleMinus,\n    CirclePlus: CirclePlus,\n    CircleTimes: CircleTimes,\n    cir: cir,\n    cirE: cirE,\n    cire: cire,\n    cirfnint: cirfnint,\n    cirmid: cirmid,\n    cirscir: cirscir,\n    ClockwiseContourIntegral: ClockwiseContourIntegral,\n    CloseCurlyDoubleQuote: CloseCurlyDoubleQuote,\n    CloseCurlyQuote: CloseCurlyQuote,\n    clubs: clubs,\n    clubsuit: clubsuit,\n    colon: colon,\n    Colon: Colon,\n    Colone: Colone,\n    colone: colone,\n    coloneq: coloneq,\n    comma: comma,\n    commat: commat,\n    comp: comp,\n    compfn: compfn,\n    complement: complement,\n    complexes: complexes,\n    cong: cong,\n    congdot: congdot,\n    Congruent: Congruent,\n    conint: conint,\n    Conint: Conint,\n    ContourIntegral: ContourIntegral,\n    copf: copf,\n    Copf: Copf,\n    coprod: coprod,\n    Coproduct: Coproduct,\n    copy: copy,\n    COPY: COPY,\n    copysr: copysr,\n    CounterClockwiseContourIntegral: CounterClockwiseContourIntegral,\n    crarr: crarr,\n    cross: cross,\n    Cross: Cross,\n    Cscr: Cscr,\n    cscr: cscr,\n    csub: csub,\n    csube: csube,\n    csup: csup,\n    csupe: csupe,\n    ctdot: ctdot,\n    cudarrl: cudarrl,\n    cudarrr: cudarrr,\n    cuepr: cuepr,\n    cuesc: cuesc,\n    cularr: cularr,\n    cularrp: cularrp,\n    cupbrcap: cupbrcap,\n    cupcap: cupcap,\n    CupCap: CupCap,\n    cup: cup,\n    Cup: Cup,\n    cupcup: cupcup,\n    cupdot: cupdot,\n    cupor: cupor,\n    cups: cups,\n    curarr: curarr,\n    curarrm: curarrm,\n    curlyeqprec: curlyeqprec,\n    curlyeqsucc: curlyeqsucc,\n    curlyvee: curlyvee,\n    curlywedge: curlywedge,\n    curren: curren,\n    curvearrowleft: curvearrowleft,\n    curvearrowright: curvearrowright,\n    cuvee: cuvee,\n    cuwed: cuwed,\n    cwconint: cwconint,\n    cwint: cwint,\n    cylcty: cylcty,\n    dagger: dagger,\n    Dagger: Dagger,\n    daleth: daleth,\n    darr: darr,\n    Darr: Darr,\n    dArr: dArr,\n    dash: dash,\n    Dashv: Dashv,\n    dashv: dashv,\n    dbkarow: dbkarow,\n    dblac: dblac,\n    Dcaron: Dcaron,\n    dcaron: dcaron,\n    Dcy: Dcy,\n    dcy: dcy,\n    ddagger: ddagger,\n    ddarr: ddarr,\n    DD: DD,\n    dd: dd,\n    DDotrahd: DDotrahd,\n    ddotseq: ddotseq,\n    deg: deg,\n    Del: Del,\n    Delta: Delta,\n    delta: delta,\n    demptyv: demptyv,\n    dfisht: dfisht,\n    Dfr: Dfr,\n    dfr: dfr,\n    dHar: dHar,\n    dharl: dharl,\n    dharr: dharr,\n    DiacriticalAcute: DiacriticalAcute,\n    DiacriticalDot: DiacriticalDot,\n    DiacriticalDoubleAcute: DiacriticalDoubleAcute,\n    DiacriticalGrave: DiacriticalGrave,\n    DiacriticalTilde: DiacriticalTilde,\n    diam: diam,\n    diamond: diamond,\n    Diamond: Diamond,\n    diamondsuit: diamondsuit,\n    diams: diams,\n    die: die,\n    DifferentialD: DifferentialD,\n    digamma: digamma,\n    disin: disin,\n    div: div,\n    divide: divide,\n    divideontimes: divideontimes,\n    divonx: divonx,\n    DJcy: DJcy,\n    djcy: djcy,\n    dlcorn: dlcorn,\n    dlcrop: dlcrop,\n    dollar: dollar,\n    Dopf: Dopf,\n    dopf: dopf,\n    Dot: Dot,\n    dot: dot,\n    DotDot: DotDot,\n    doteq: doteq,\n    doteqdot: doteqdot,\n    DotEqual: DotEqual,\n    dotminus: dotminus,\n    dotplus: dotplus,\n    dotsquare: dotsquare,\n    doublebarwedge: doublebarwedge,\n    DoubleContourIntegral: DoubleContourIntegral,\n    DoubleDot: DoubleDot,\n    DoubleDownArrow: DoubleDownArrow,\n    DoubleLeftArrow: DoubleLeftArrow,\n    DoubleLeftRightArrow: DoubleLeftRightArrow,\n    DoubleLeftTee: DoubleLeftTee,\n    DoubleLongLeftArrow: DoubleLongLeftArrow,\n    DoubleLongLeftRightArrow: DoubleLongLeftRightArrow,\n    DoubleLongRightArrow: DoubleLongRightArrow,\n    DoubleRightArrow: DoubleRightArrow,\n    DoubleRightTee: DoubleRightTee,\n    DoubleUpArrow: DoubleUpArrow,\n    DoubleUpDownArrow: DoubleUpDownArrow,\n    DoubleVerticalBar: DoubleVerticalBar,\n    DownArrowBar: DownArrowBar,\n    downarrow: downarrow,\n    DownArrow: DownArrow,\n    Downarrow: Downarrow,\n    DownArrowUpArrow: DownArrowUpArrow,\n    DownBreve: DownBreve,\n    downdownarrows: downdownarrows,\n    downharpoonleft: downharpoonleft,\n    downharpoonright: downharpoonright,\n    DownLeftRightVector: DownLeftRightVector,\n    DownLeftTeeVector: DownLeftTeeVector,\n    DownLeftVectorBar: DownLeftVectorBar,\n    DownLeftVector: DownLeftVector,\n    DownRightTeeVector: DownRightTeeVector,\n    DownRightVectorBar: DownRightVectorBar,\n    DownRightVector: DownRightVector,\n    DownTeeArrow: DownTeeArrow,\n    DownTee: DownTee,\n    drbkarow: drbkarow,\n    drcorn: drcorn,\n    drcrop: drcrop,\n    Dscr: Dscr,\n    dscr: dscr,\n    DScy: DScy,\n    dscy: dscy,\n    dsol: dsol,\n    Dstrok: Dstrok,\n    dstrok: dstrok,\n    dtdot: dtdot,\n    dtri: dtri,\n    dtrif: dtrif,\n    duarr: duarr,\n    duhar: duhar,\n    dwangle: dwangle,\n    DZcy: DZcy,\n    dzcy: dzcy,\n    dzigrarr: dzigrarr,\n    Eacute: Eacute,\n    eacute: eacute,\n    easter: easter,\n    Ecaron: Ecaron,\n    ecaron: ecaron,\n    Ecirc: Ecirc,\n    ecirc: ecirc,\n    ecir: ecir,\n    ecolon: ecolon,\n    Ecy: Ecy,\n    ecy: ecy,\n    eDDot: eDDot,\n    Edot: Edot,\n    edot: edot,\n    eDot: eDot,\n    ee: ee,\n    efDot: efDot,\n    Efr: Efr,\n    efr: efr,\n    eg: eg,\n    Egrave: Egrave,\n    egrave: egrave,\n    egs: egs,\n    egsdot: egsdot,\n    el: el,\n    Element: Element,\n    elinters: elinters,\n    ell: ell,\n    els: els,\n    elsdot: elsdot,\n    Emacr: Emacr,\n    emacr: emacr,\n    empty: empty,\n    emptyset: emptyset,\n    EmptySmallSquare: EmptySmallSquare,\n    emptyv: emptyv,\n    EmptyVerySmallSquare: EmptyVerySmallSquare,\n    emsp13: emsp13,\n    emsp14: emsp14,\n    emsp: emsp,\n    ENG: ENG,\n    eng: eng,\n    ensp: ensp,\n    Eogon: Eogon,\n    eogon: eogon,\n    Eopf: Eopf,\n    eopf: eopf,\n    epar: epar,\n    eparsl: eparsl,\n    eplus: eplus,\n    epsi: epsi,\n    Epsilon: Epsilon,\n    epsilon: epsilon,\n    epsiv: epsiv,\n    eqcirc: eqcirc,\n    eqcolon: eqcolon,\n    eqsim: eqsim,\n    eqslantgtr: eqslantgtr,\n    eqslantless: eqslantless,\n    Equal: Equal,\n    equals: equals,\n    EqualTilde: EqualTilde,\n    equest: equest,\n    Equilibrium: Equilibrium,\n    equiv: equiv,\n    equivDD: equivDD,\n    eqvparsl: eqvparsl,\n    erarr: erarr,\n    erDot: erDot,\n    escr: escr,\n    Escr: Escr,\n    esdot: esdot,\n    Esim: Esim,\n    esim: esim,\n    Eta: Eta,\n    eta: eta,\n    ETH: ETH,\n    eth: eth,\n    Euml: Euml,\n    euml: euml,\n    euro: euro,\n    excl: excl,\n    exist: exist,\n    Exists: Exists,\n    expectation: expectation,\n    exponentiale: exponentiale,\n    ExponentialE: ExponentialE,\n    fallingdotseq: fallingdotseq,\n    Fcy: Fcy,\n    fcy: fcy,\n    female: female,\n    ffilig: ffilig,\n    fflig: fflig,\n    ffllig: ffllig,\n    Ffr: Ffr,\n    ffr: ffr,\n    filig: filig,\n    FilledSmallSquare: FilledSmallSquare,\n    FilledVerySmallSquare: FilledVerySmallSquare,\n    fjlig: fjlig,\n    flat: flat,\n    fllig: fllig,\n    fltns: fltns,\n    fnof: fnof,\n    Fopf: Fopf,\n    fopf: fopf,\n    forall: forall,\n    ForAll: ForAll,\n    fork: fork,\n    forkv: forkv,\n    Fouriertrf: Fouriertrf,\n    fpartint: fpartint,\n    frac12: frac12,\n    frac13: frac13,\n    frac14: frac14,\n    frac15: frac15,\n    frac16: frac16,\n    frac18: frac18,\n    frac23: frac23,\n    frac25: frac25,\n    frac34: frac34,\n    frac35: frac35,\n    frac38: frac38,\n    frac45: frac45,\n    frac56: frac56,\n    frac58: frac58,\n    frac78: frac78,\n    frasl: frasl,\n    frown: frown,\n    fscr: fscr,\n    Fscr: Fscr,\n    gacute: gacute,\n    Gamma: Gamma,\n    gamma: gamma,\n    Gammad: Gammad,\n    gammad: gammad,\n    gap: gap,\n    Gbreve: Gbreve,\n    gbreve: gbreve,\n    Gcedil: Gcedil,\n    Gcirc: Gcirc,\n    gcirc: gcirc,\n    Gcy: Gcy,\n    gcy: gcy,\n    Gdot: Gdot,\n    gdot: gdot,\n    ge: ge,\n    gE: gE,\n    gEl: gEl,\n    gel: gel,\n    geq: geq,\n    geqq: geqq,\n    geqslant: geqslant,\n    gescc: gescc,\n    ges: ges,\n    gesdot: gesdot,\n    gesdoto: gesdoto,\n    gesdotol: gesdotol,\n    gesl: gesl,\n    gesles: gesles,\n    Gfr: Gfr,\n    gfr: gfr,\n    gg: gg,\n    Gg: Gg,\n    ggg: ggg,\n    gimel: gimel,\n    GJcy: GJcy,\n    gjcy: gjcy,\n    gla: gla,\n    gl: gl,\n    glE: glE,\n    glj: glj,\n    gnap: gnap,\n    gnapprox: gnapprox,\n    gne: gne,\n    gnE: gnE,\n    gneq: gneq,\n    gneqq: gneqq,\n    gnsim: gnsim,\n    Gopf: Gopf,\n    gopf: gopf,\n    grave: grave,\n    GreaterEqual: GreaterEqual,\n    GreaterEqualLess: GreaterEqualLess,\n    GreaterFullEqual: GreaterFullEqual,\n    GreaterGreater: GreaterGreater,\n    GreaterLess: GreaterLess,\n    GreaterSlantEqual: GreaterSlantEqual,\n    GreaterTilde: GreaterTilde,\n    Gscr: Gscr,\n    gscr: gscr,\n    gsim: gsim,\n    gsime: gsime,\n    gsiml: gsiml,\n    gtcc: gtcc,\n    gtcir: gtcir,\n    gt: gt,\n    GT: GT,\n    Gt: Gt,\n    gtdot: gtdot,\n    gtlPar: gtlPar,\n    gtquest: gtquest,\n    gtrapprox: gtrapprox,\n    gtrarr: gtrarr,\n    gtrdot: gtrdot,\n    gtreqless: gtreqless,\n    gtreqqless: gtreqqless,\n    gtrless: gtrless,\n    gtrsim: gtrsim,\n    gvertneqq: gvertneqq,\n    gvnE: gvnE,\n    Hacek: Hacek,\n    hairsp: hairsp,\n    half: half,\n    hamilt: hamilt,\n    HARDcy: HARDcy,\n    hardcy: hardcy,\n    harrcir: harrcir,\n    harr: harr,\n    hArr: hArr,\n    harrw: harrw,\n    Hat: Hat,\n    hbar: hbar,\n    Hcirc: Hcirc,\n    hcirc: hcirc,\n    hearts: hearts,\n    heartsuit: heartsuit,\n    hellip: hellip,\n    hercon: hercon,\n    hfr: hfr,\n    Hfr: Hfr,\n    HilbertSpace: HilbertSpace,\n    hksearow: hksearow,\n    hkswarow: hkswarow,\n    hoarr: hoarr,\n    homtht: homtht,\n    hookleftarrow: hookleftarrow,\n    hookrightarrow: hookrightarrow,\n    hopf: hopf,\n    Hopf: Hopf,\n    horbar: horbar,\n    HorizontalLine: HorizontalLine,\n    hscr: hscr,\n    Hscr: Hscr,\n    hslash: hslash,\n    Hstrok: Hstrok,\n    hstrok: hstrok,\n    HumpDownHump: HumpDownHump,\n    HumpEqual: HumpEqual,\n    hybull: hybull,\n    hyphen: hyphen,\n    Iacute: Iacute,\n    iacute: iacute,\n    ic: ic,\n    Icirc: Icirc,\n    icirc: icirc,\n    Icy: Icy,\n    icy: icy,\n    Idot: Idot,\n    IEcy: IEcy,\n    iecy: iecy,\n    iexcl: iexcl,\n    iff: iff,\n    ifr: ifr,\n    Ifr: Ifr,\n    Igrave: Igrave,\n    igrave: igrave,\n    ii: ii,\n    iiiint: iiiint,\n    iiint: iiint,\n    iinfin: iinfin,\n    iiota: iiota,\n    IJlig: IJlig,\n    ijlig: ijlig,\n    Imacr: Imacr,\n    imacr: imacr,\n    image: image,\n    ImaginaryI: ImaginaryI,\n    imagline: imagline,\n    imagpart: imagpart,\n    imath: imath,\n    Im: Im,\n    imof: imof,\n    imped: imped,\n    Implies: Implies,\n    incare: incare,\n    \"in\": \"∈\",\n    infin: infin,\n    infintie: infintie,\n    inodot: inodot,\n    intcal: intcal,\n    int: int,\n    Int: Int,\n    integers: integers,\n    Integral: Integral,\n    intercal: intercal,\n    Intersection: Intersection,\n    intlarhk: intlarhk,\n    intprod: intprod,\n    InvisibleComma: InvisibleComma,\n    InvisibleTimes: InvisibleTimes,\n    IOcy: IOcy,\n    iocy: iocy,\n    Iogon: Iogon,\n    iogon: iogon,\n    Iopf: Iopf,\n    iopf: iopf,\n    Iota: Iota,\n    iota: iota,\n    iprod: iprod,\n    iquest: iquest,\n    iscr: iscr,\n    Iscr: Iscr,\n    isin: isin,\n    isindot: isindot,\n    isinE: isinE,\n    isins: isins,\n    isinsv: isinsv,\n    isinv: isinv,\n    it: it,\n    Itilde: Itilde,\n    itilde: itilde,\n    Iukcy: Iukcy,\n    iukcy: iukcy,\n    Iuml: Iuml,\n    iuml: iuml,\n    Jcirc: Jcirc,\n    jcirc: jcirc,\n    Jcy: Jcy,\n    jcy: jcy,\n    Jfr: Jfr,\n    jfr: jfr,\n    jmath: jmath,\n    Jopf: Jopf,\n    jopf: jopf,\n    Jscr: Jscr,\n    jscr: jscr,\n    Jsercy: Jsercy,\n    jsercy: jsercy,\n    Jukcy: Jukcy,\n    jukcy: jukcy,\n    Kappa: Kappa,\n    kappa: kappa,\n    kappav: kappav,\n    Kcedil: Kcedil,\n    kcedil: kcedil,\n    Kcy: Kcy,\n    kcy: kcy,\n    Kfr: Kfr,\n    kfr: kfr,\n    kgreen: kgreen,\n    KHcy: KHcy,\n    khcy: khcy,\n    KJcy: KJcy,\n    kjcy: kjcy,\n    Kopf: Kopf,\n    kopf: kopf,\n    Kscr: Kscr,\n    kscr: kscr,\n    lAarr: lAarr,\n    Lacute: Lacute,\n    lacute: lacute,\n    laemptyv: laemptyv,\n    lagran: lagran,\n    Lambda: Lambda,\n    lambda: lambda,\n    lang: lang,\n    Lang: Lang,\n    langd: langd,\n    langle: langle,\n    lap: lap,\n    Laplacetrf: Laplacetrf,\n    laquo: laquo,\n    larrb: larrb,\n    larrbfs: larrbfs,\n    larr: larr,\n    Larr: Larr,\n    lArr: lArr,\n    larrfs: larrfs,\n    larrhk: larrhk,\n    larrlp: larrlp,\n    larrpl: larrpl,\n    larrsim: larrsim,\n    larrtl: larrtl,\n    latail: latail,\n    lAtail: lAtail,\n    lat: lat,\n    late: late,\n    lates: lates,\n    lbarr: lbarr,\n    lBarr: lBarr,\n    lbbrk: lbbrk,\n    lbrace: lbrace,\n    lbrack: lbrack,\n    lbrke: lbrke,\n    lbrksld: lbrksld,\n    lbrkslu: lbrkslu,\n    Lcaron: Lcaron,\n    lcaron: lcaron,\n    Lcedil: Lcedil,\n    lcedil: lcedil,\n    lceil: lceil,\n    lcub: lcub,\n    Lcy: Lcy,\n    lcy: lcy,\n    ldca: ldca,\n    ldquo: ldquo,\n    ldquor: ldquor,\n    ldrdhar: ldrdhar,\n    ldrushar: ldrushar,\n    ldsh: ldsh,\n    le: le,\n    lE: lE,\n    LeftAngleBracket: LeftAngleBracket,\n    LeftArrowBar: LeftArrowBar,\n    leftarrow: leftarrow,\n    LeftArrow: LeftArrow,\n    Leftarrow: Leftarrow,\n    LeftArrowRightArrow: LeftArrowRightArrow,\n    leftarrowtail: leftarrowtail,\n    LeftCeiling: LeftCeiling,\n    LeftDoubleBracket: LeftDoubleBracket,\n    LeftDownTeeVector: LeftDownTeeVector,\n    LeftDownVectorBar: LeftDownVectorBar,\n    LeftDownVector: LeftDownVector,\n    LeftFloor: LeftFloor,\n    leftharpoondown: leftharpoondown,\n    leftharpoonup: leftharpoonup,\n    leftleftarrows: leftleftarrows,\n    leftrightarrow: leftrightarrow,\n    LeftRightArrow: LeftRightArrow,\n    Leftrightarrow: Leftrightarrow,\n    leftrightarrows: leftrightarrows,\n    leftrightharpoons: leftrightharpoons,\n    leftrightsquigarrow: leftrightsquigarrow,\n    LeftRightVector: LeftRightVector,\n    LeftTeeArrow: LeftTeeArrow,\n    LeftTee: LeftTee,\n    LeftTeeVector: LeftTeeVector,\n    leftthreetimes: leftthreetimes,\n    LeftTriangleBar: LeftTriangleBar,\n    LeftTriangle: LeftTriangle,\n    LeftTriangleEqual: LeftTriangleEqual,\n    LeftUpDownVector: LeftUpDownVector,\n    LeftUpTeeVector: LeftUpTeeVector,\n    LeftUpVectorBar: LeftUpVectorBar,\n    LeftUpVector: LeftUpVector,\n    LeftVectorBar: LeftVectorBar,\n    LeftVector: LeftVector,\n    lEg: lEg,\n    leg: leg,\n    leq: leq,\n    leqq: leqq,\n    leqslant: leqslant,\n    lescc: lescc,\n    les: les,\n    lesdot: lesdot,\n    lesdoto: lesdoto,\n    lesdotor: lesdotor,\n    lesg: lesg,\n    lesges: lesges,\n    lessapprox: lessapprox,\n    lessdot: lessdot,\n    lesseqgtr: lesseqgtr,\n    lesseqqgtr: lesseqqgtr,\n    LessEqualGreater: LessEqualGreater,\n    LessFullEqual: LessFullEqual,\n    LessGreater: LessGreater,\n    lessgtr: lessgtr,\n    LessLess: LessLess,\n    lesssim: lesssim,\n    LessSlantEqual: LessSlantEqual,\n    LessTilde: LessTilde,\n    lfisht: lfisht,\n    lfloor: lfloor,\n    Lfr: Lfr,\n    lfr: lfr,\n    lg: lg,\n    lgE: lgE,\n    lHar: lHar,\n    lhard: lhard,\n    lharu: lharu,\n    lharul: lharul,\n    lhblk: lhblk,\n    LJcy: LJcy,\n    ljcy: ljcy,\n    llarr: llarr,\n    ll: ll,\n    Ll: Ll,\n    llcorner: llcorner,\n    Lleftarrow: Lleftarrow,\n    llhard: llhard,\n    lltri: lltri,\n    Lmidot: Lmidot,\n    lmidot: lmidot,\n    lmoustache: lmoustache,\n    lmoust: lmoust,\n    lnap: lnap,\n    lnapprox: lnapprox,\n    lne: lne,\n    lnE: lnE,\n    lneq: lneq,\n    lneqq: lneqq,\n    lnsim: lnsim,\n    loang: loang,\n    loarr: loarr,\n    lobrk: lobrk,\n    longleftarrow: longleftarrow,\n    LongLeftArrow: LongLeftArrow,\n    Longleftarrow: Longleftarrow,\n    longleftrightarrow: longleftrightarrow,\n    LongLeftRightArrow: LongLeftRightArrow,\n    Longleftrightarrow: Longleftrightarrow,\n    longmapsto: longmapsto,\n    longrightarrow: longrightarrow,\n    LongRightArrow: LongRightArrow,\n    Longrightarrow: Longrightarrow,\n    looparrowleft: looparrowleft,\n    looparrowright: looparrowright,\n    lopar: lopar,\n    Lopf: Lopf,\n    lopf: lopf,\n    loplus: loplus,\n    lotimes: lotimes,\n    lowast: lowast,\n    lowbar: lowbar,\n    LowerLeftArrow: LowerLeftArrow,\n    LowerRightArrow: LowerRightArrow,\n    loz: loz,\n    lozenge: lozenge,\n    lozf: lozf,\n    lpar: lpar,\n    lparlt: lparlt,\n    lrarr: lrarr,\n    lrcorner: lrcorner,\n    lrhar: lrhar,\n    lrhard: lrhard,\n    lrm: lrm,\n    lrtri: lrtri,\n    lsaquo: lsaquo,\n    lscr: lscr,\n    Lscr: Lscr,\n    lsh: lsh,\n    Lsh: Lsh,\n    lsim: lsim,\n    lsime: lsime,\n    lsimg: lsimg,\n    lsqb: lsqb,\n    lsquo: lsquo,\n    lsquor: lsquor,\n    Lstrok: Lstrok,\n    lstrok: lstrok,\n    ltcc: ltcc,\n    ltcir: ltcir,\n    lt: lt,\n    LT: LT,\n    Lt: Lt,\n    ltdot: ltdot,\n    lthree: lthree,\n    ltimes: ltimes,\n    ltlarr: ltlarr,\n    ltquest: ltquest,\n    ltri: ltri,\n    ltrie: ltrie,\n    ltrif: ltrif,\n    ltrPar: ltrPar,\n    lurdshar: lurdshar,\n    luruhar: luruhar,\n    lvertneqq: lvertneqq,\n    lvnE: lvnE,\n    macr: macr,\n    male: male,\n    malt: malt,\n    maltese: maltese,\n    \"Map\": \"⤅\",\n    map: map,\n    mapsto: mapsto,\n    mapstodown: mapstodown,\n    mapstoleft: mapstoleft,\n    mapstoup: mapstoup,\n    marker: marker,\n    mcomma: mcomma,\n    Mcy: Mcy,\n    mcy: mcy,\n    mdash: mdash,\n    mDDot: mDDot,\n    measuredangle: measuredangle,\n    MediumSpace: MediumSpace,\n    Mellintrf: Mellintrf,\n    Mfr: Mfr,\n    mfr: mfr,\n    mho: mho,\n    micro: micro,\n    midast: midast,\n    midcir: midcir,\n    mid: mid,\n    middot: middot,\n    minusb: minusb,\n    minus: minus,\n    minusd: minusd,\n    minusdu: minusdu,\n    MinusPlus: MinusPlus,\n    mlcp: mlcp,\n    mldr: mldr,\n    mnplus: mnplus,\n    models: models,\n    Mopf: Mopf,\n    mopf: mopf,\n    mp: mp,\n    mscr: mscr,\n    Mscr: Mscr,\n    mstpos: mstpos,\n    Mu: Mu,\n    mu: mu,\n    multimap: multimap,\n    mumap: mumap,\n    nabla: nabla,\n    Nacute: Nacute,\n    nacute: nacute,\n    nang: nang,\n    nap: nap,\n    napE: napE,\n    napid: napid,\n    napos: napos,\n    napprox: napprox,\n    natural: natural,\n    naturals: naturals,\n    natur: natur,\n    nbsp: nbsp,\n    nbump: nbump,\n    nbumpe: nbumpe,\n    ncap: ncap,\n    Ncaron: Ncaron,\n    ncaron: ncaron,\n    Ncedil: Ncedil,\n    ncedil: ncedil,\n    ncong: ncong,\n    ncongdot: ncongdot,\n    ncup: ncup,\n    Ncy: Ncy,\n    ncy: ncy,\n    ndash: ndash,\n    nearhk: nearhk,\n    nearr: nearr,\n    neArr: neArr,\n    nearrow: nearrow,\n    ne: ne,\n    nedot: nedot,\n    NegativeMediumSpace: NegativeMediumSpace,\n    NegativeThickSpace: NegativeThickSpace,\n    NegativeThinSpace: NegativeThinSpace,\n    NegativeVeryThinSpace: NegativeVeryThinSpace,\n    nequiv: nequiv,\n    nesear: nesear,\n    nesim: nesim,\n    NestedGreaterGreater: NestedGreaterGreater,\n    NestedLessLess: NestedLessLess,\n    NewLine: NewLine,\n    nexist: nexist,\n    nexists: nexists,\n    Nfr: Nfr,\n    nfr: nfr,\n    ngE: ngE,\n    nge: nge,\n    ngeq: ngeq,\n    ngeqq: ngeqq,\n    ngeqslant: ngeqslant,\n    nges: nges,\n    nGg: nGg,\n    ngsim: ngsim,\n    nGt: nGt,\n    ngt: ngt,\n    ngtr: ngtr,\n    nGtv: nGtv,\n    nharr: nharr,\n    nhArr: nhArr,\n    nhpar: nhpar,\n    ni: ni,\n    nis: nis,\n    nisd: nisd,\n    niv: niv,\n    NJcy: NJcy,\n    njcy: njcy,\n    nlarr: nlarr,\n    nlArr: nlArr,\n    nldr: nldr,\n    nlE: nlE,\n    nle: nle,\n    nleftarrow: nleftarrow,\n    nLeftarrow: nLeftarrow,\n    nleftrightarrow: nleftrightarrow,\n    nLeftrightarrow: nLeftrightarrow,\n    nleq: nleq,\n    nleqq: nleqq,\n    nleqslant: nleqslant,\n    nles: nles,\n    nless: nless,\n    nLl: nLl,\n    nlsim: nlsim,\n    nLt: nLt,\n    nlt: nlt,\n    nltri: nltri,\n    nltrie: nltrie,\n    nLtv: nLtv,\n    nmid: nmid,\n    NoBreak: NoBreak,\n    NonBreakingSpace: NonBreakingSpace,\n    nopf: nopf,\n    Nopf: Nopf,\n    Not: Not,\n    not: not,\n    NotCongruent: NotCongruent,\n    NotCupCap: NotCupCap,\n    NotDoubleVerticalBar: NotDoubleVerticalBar,\n    NotElement: NotElement,\n    NotEqual: NotEqual,\n    NotEqualTilde: NotEqualTilde,\n    NotExists: NotExists,\n    NotGreater: NotGreater,\n    NotGreaterEqual: NotGreaterEqual,\n    NotGreaterFullEqual: NotGreaterFullEqual,\n    NotGreaterGreater: NotGreaterGreater,\n    NotGreaterLess: NotGreaterLess,\n    NotGreaterSlantEqual: NotGreaterSlantEqual,\n    NotGreaterTilde: NotGreaterTilde,\n    NotHumpDownHump: NotHumpDownHump,\n    NotHumpEqual: NotHumpEqual,\n    notin: notin,\n    notindot: notindot,\n    notinE: notinE,\n    notinva: notinva,\n    notinvb: notinvb,\n    notinvc: notinvc,\n    NotLeftTriangleBar: NotLeftTriangleBar,\n    NotLeftTriangle: NotLeftTriangle,\n    NotLeftTriangleEqual: NotLeftTriangleEqual,\n    NotLess: NotLess,\n    NotLessEqual: NotLessEqual,\n    NotLessGreater: NotLessGreater,\n    NotLessLess: NotLessLess,\n    NotLessSlantEqual: NotLessSlantEqual,\n    NotLessTilde: NotLessTilde,\n    NotNestedGreaterGreater: NotNestedGreaterGreater,\n    NotNestedLessLess: NotNestedLessLess,\n    notni: notni,\n    notniva: notniva,\n    notnivb: notnivb,\n    notnivc: notnivc,\n    NotPrecedes: NotPrecedes,\n    NotPrecedesEqual: NotPrecedesEqual,\n    NotPrecedesSlantEqual: NotPrecedesSlantEqual,\n    NotReverseElement: NotReverseElement,\n    NotRightTriangleBar: NotRightTriangleBar,\n    NotRightTriangle: NotRightTriangle,\n    NotRightTriangleEqual: NotRightTriangleEqual,\n    NotSquareSubset: NotSquareSubset,\n    NotSquareSubsetEqual: NotSquareSubsetEqual,\n    NotSquareSuperset: NotSquareSuperset,\n    NotSquareSupersetEqual: NotSquareSupersetEqual,\n    NotSubset: NotSubset,\n    NotSubsetEqual: NotSubsetEqual,\n    NotSucceeds: NotSucceeds,\n    NotSucceedsEqual: NotSucceedsEqual,\n    NotSucceedsSlantEqual: NotSucceedsSlantEqual,\n    NotSucceedsTilde: NotSucceedsTilde,\n    NotSuperset: NotSuperset,\n    NotSupersetEqual: NotSupersetEqual,\n    NotTilde: NotTilde,\n    NotTildeEqual: NotTildeEqual,\n    NotTildeFullEqual: NotTildeFullEqual,\n    NotTildeTilde: NotTildeTilde,\n    NotVerticalBar: NotVerticalBar,\n    nparallel: nparallel,\n    npar: npar,\n    nparsl: nparsl,\n    npart: npart,\n    npolint: npolint,\n    npr: npr,\n    nprcue: nprcue,\n    nprec: nprec,\n    npreceq: npreceq,\n    npre: npre,\n    nrarrc: nrarrc,\n    nrarr: nrarr,\n    nrArr: nrArr,\n    nrarrw: nrarrw,\n    nrightarrow: nrightarrow,\n    nRightarrow: nRightarrow,\n    nrtri: nrtri,\n    nrtrie: nrtrie,\n    nsc: nsc,\n    nsccue: nsccue,\n    nsce: nsce,\n    Nscr: Nscr,\n    nscr: nscr,\n    nshortmid: nshortmid,\n    nshortparallel: nshortparallel,\n    nsim: nsim,\n    nsime: nsime,\n    nsimeq: nsimeq,\n    nsmid: nsmid,\n    nspar: nspar,\n    nsqsube: nsqsube,\n    nsqsupe: nsqsupe,\n    nsub: nsub,\n    nsubE: nsubE,\n    nsube: nsube,\n    nsubset: nsubset,\n    nsubseteq: nsubseteq,\n    nsubseteqq: nsubseteqq,\n    nsucc: nsucc,\n    nsucceq: nsucceq,\n    nsup: nsup,\n    nsupE: nsupE,\n    nsupe: nsupe,\n    nsupset: nsupset,\n    nsupseteq: nsupseteq,\n    nsupseteqq: nsupseteqq,\n    ntgl: ntgl,\n    Ntilde: Ntilde,\n    ntilde: ntilde,\n    ntlg: ntlg,\n    ntriangleleft: ntriangleleft,\n    ntrianglelefteq: ntrianglelefteq,\n    ntriangleright: ntriangleright,\n    ntrianglerighteq: ntrianglerighteq,\n    Nu: Nu,\n    nu: nu,\n    num: num,\n    numero: numero,\n    numsp: numsp,\n    nvap: nvap,\n    nvdash: nvdash,\n    nvDash: nvDash,\n    nVdash: nVdash,\n    nVDash: nVDash,\n    nvge: nvge,\n    nvgt: nvgt,\n    nvHarr: nvHarr,\n    nvinfin: nvinfin,\n    nvlArr: nvlArr,\n    nvle: nvle,\n    nvlt: nvlt,\n    nvltrie: nvltrie,\n    nvrArr: nvrArr,\n    nvrtrie: nvrtrie,\n    nvsim: nvsim,\n    nwarhk: nwarhk,\n    nwarr: nwarr,\n    nwArr: nwArr,\n    nwarrow: nwarrow,\n    nwnear: nwnear,\n    Oacute: Oacute,\n    oacute: oacute,\n    oast: oast,\n    Ocirc: Ocirc,\n    ocirc: ocirc,\n    ocir: ocir,\n    Ocy: Ocy,\n    ocy: ocy,\n    odash: odash,\n    Odblac: Odblac,\n    odblac: odblac,\n    odiv: odiv,\n    odot: odot,\n    odsold: odsold,\n    OElig: OElig,\n    oelig: oelig,\n    ofcir: ofcir,\n    Ofr: Ofr,\n    ofr: ofr,\n    ogon: ogon,\n    Ograve: Ograve,\n    ograve: ograve,\n    ogt: ogt,\n    ohbar: ohbar,\n    ohm: ohm,\n    oint: oint,\n    olarr: olarr,\n    olcir: olcir,\n    olcross: olcross,\n    oline: oline,\n    olt: olt,\n    Omacr: Omacr,\n    omacr: omacr,\n    Omega: Omega,\n    omega: omega,\n    Omicron: Omicron,\n    omicron: omicron,\n    omid: omid,\n    ominus: ominus,\n    Oopf: Oopf,\n    oopf: oopf,\n    opar: opar,\n    OpenCurlyDoubleQuote: OpenCurlyDoubleQuote,\n    OpenCurlyQuote: OpenCurlyQuote,\n    operp: operp,\n    oplus: oplus,\n    orarr: orarr,\n    Or: Or,\n    or: or,\n    ord: ord,\n    order: order,\n    orderof: orderof,\n    ordf: ordf,\n    ordm: ordm,\n    origof: origof,\n    oror: oror,\n    orslope: orslope,\n    orv: orv,\n    oS: oS,\n    Oscr: Oscr,\n    oscr: oscr,\n    Oslash: Oslash,\n    oslash: oslash,\n    osol: osol,\n    Otilde: Otilde,\n    otilde: otilde,\n    otimesas: otimesas,\n    Otimes: Otimes,\n    otimes: otimes,\n    Ouml: Ouml,\n    ouml: ouml,\n    ovbar: ovbar,\n    OverBar: OverBar,\n    OverBrace: OverBrace,\n    OverBracket: OverBracket,\n    OverParenthesis: OverParenthesis,\n    para: para,\n    parallel: parallel,\n    par: par,\n    parsim: parsim,\n    parsl: parsl,\n    part: part,\n    PartialD: PartialD,\n    Pcy: Pcy,\n    pcy: pcy,\n    percnt: percnt,\n    period: period,\n    permil: permil,\n    perp: perp,\n    pertenk: pertenk,\n    Pfr: Pfr,\n    pfr: pfr,\n    Phi: Phi,\n    phi: phi,\n    phiv: phiv,\n    phmmat: phmmat,\n    phone: phone,\n    Pi: Pi,\n    pi: pi,\n    pitchfork: pitchfork,\n    piv: piv,\n    planck: planck,\n    planckh: planckh,\n    plankv: plankv,\n    plusacir: plusacir,\n    plusb: plusb,\n    pluscir: pluscir,\n    plus: plus,\n    plusdo: plusdo,\n    plusdu: plusdu,\n    pluse: pluse,\n    PlusMinus: PlusMinus,\n    plusmn: plusmn,\n    plussim: plussim,\n    plustwo: plustwo,\n    pm: pm,\n    Poincareplane: Poincareplane,\n    pointint: pointint,\n    popf: popf,\n    Popf: Popf,\n    pound: pound,\n    prap: prap,\n    Pr: Pr,\n    pr: pr,\n    prcue: prcue,\n    precapprox: precapprox,\n    prec: prec,\n    preccurlyeq: preccurlyeq,\n    Precedes: Precedes,\n    PrecedesEqual: PrecedesEqual,\n    PrecedesSlantEqual: PrecedesSlantEqual,\n    PrecedesTilde: PrecedesTilde,\n    preceq: preceq,\n    precnapprox: precnapprox,\n    precneqq: precneqq,\n    precnsim: precnsim,\n    pre: pre,\n    prE: prE,\n    precsim: precsim,\n    prime: prime,\n    Prime: Prime,\n    primes: primes,\n    prnap: prnap,\n    prnE: prnE,\n    prnsim: prnsim,\n    prod: prod,\n    Product: Product,\n    profalar: profalar,\n    profline: profline,\n    profsurf: profsurf,\n    prop: prop,\n    Proportional: Proportional,\n    Proportion: Proportion,\n    propto: propto,\n    prsim: prsim,\n    prurel: prurel,\n    Pscr: Pscr,\n    pscr: pscr,\n    Psi: Psi,\n    psi: psi,\n    puncsp: puncsp,\n    Qfr: Qfr,\n    qfr: qfr,\n    qint: qint,\n    qopf: qopf,\n    Qopf: Qopf,\n    qprime: qprime,\n    Qscr: Qscr,\n    qscr: qscr,\n    quaternions: quaternions,\n    quatint: quatint,\n    quest: quest,\n    questeq: questeq,\n    quot: quot,\n    QUOT: QUOT,\n    rAarr: rAarr,\n    race: race,\n    Racute: Racute,\n    racute: racute,\n    radic: radic,\n    raemptyv: raemptyv,\n    rang: rang,\n    Rang: Rang,\n    rangd: rangd,\n    range: range,\n    rangle: rangle,\n    raquo: raquo,\n    rarrap: rarrap,\n    rarrb: rarrb,\n    rarrbfs: rarrbfs,\n    rarrc: rarrc,\n    rarr: rarr,\n    Rarr: Rarr,\n    rArr: rArr,\n    rarrfs: rarrfs,\n    rarrhk: rarrhk,\n    rarrlp: rarrlp,\n    rarrpl: rarrpl,\n    rarrsim: rarrsim,\n    Rarrtl: Rarrtl,\n    rarrtl: rarrtl,\n    rarrw: rarrw,\n    ratail: ratail,\n    rAtail: rAtail,\n    ratio: ratio,\n    rationals: rationals,\n    rbarr: rbarr,\n    rBarr: rBarr,\n    RBarr: RBarr,\n    rbbrk: rbbrk,\n    rbrace: rbrace,\n    rbrack: rbrack,\n    rbrke: rbrke,\n    rbrksld: rbrksld,\n    rbrkslu: rbrkslu,\n    Rcaron: Rcaron,\n    rcaron: rcaron,\n    Rcedil: Rcedil,\n    rcedil: rcedil,\n    rceil: rceil,\n    rcub: rcub,\n    Rcy: Rcy,\n    rcy: rcy,\n    rdca: rdca,\n    rdldhar: rdldhar,\n    rdquo: rdquo,\n    rdquor: rdquor,\n    rdsh: rdsh,\n    real: real,\n    realine: realine,\n    realpart: realpart,\n    reals: reals,\n    Re: Re,\n    rect: rect,\n    reg: reg,\n    REG: REG,\n    ReverseElement: ReverseElement,\n    ReverseEquilibrium: ReverseEquilibrium,\n    ReverseUpEquilibrium: ReverseUpEquilibrium,\n    rfisht: rfisht,\n    rfloor: rfloor,\n    rfr: rfr,\n    Rfr: Rfr,\n    rHar: rHar,\n    rhard: rhard,\n    rharu: rharu,\n    rharul: rharul,\n    Rho: Rho,\n    rho: rho,\n    rhov: rhov,\n    RightAngleBracket: RightAngleBracket,\n    RightArrowBar: RightArrowBar,\n    rightarrow: rightarrow,\n    RightArrow: RightArrow,\n    Rightarrow: Rightarrow,\n    RightArrowLeftArrow: RightArrowLeftArrow,\n    rightarrowtail: rightarrowtail,\n    RightCeiling: RightCeiling,\n    RightDoubleBracket: RightDoubleBracket,\n    RightDownTeeVector: RightDownTeeVector,\n    RightDownVectorBar: RightDownVectorBar,\n    RightDownVector: RightDownVector,\n    RightFloor: RightFloor,\n    rightharpoondown: rightharpoondown,\n    rightharpoonup: rightharpoonup,\n    rightleftarrows: rightleftarrows,\n    rightleftharpoons: rightleftharpoons,\n    rightrightarrows: rightrightarrows,\n    rightsquigarrow: rightsquigarrow,\n    RightTeeArrow: RightTeeArrow,\n    RightTee: RightTee,\n    RightTeeVector: RightTeeVector,\n    rightthreetimes: rightthreetimes,\n    RightTriangleBar: RightTriangleBar,\n    RightTriangle: RightTriangle,\n    RightTriangleEqual: RightTriangleEqual,\n    RightUpDownVector: RightUpDownVector,\n    RightUpTeeVector: RightUpTeeVector,\n    RightUpVectorBar: RightUpVectorBar,\n    RightUpVector: RightUpVector,\n    RightVectorBar: RightVectorBar,\n    RightVector: RightVector,\n    ring: ring,\n    risingdotseq: risingdotseq,\n    rlarr: rlarr,\n    rlhar: rlhar,\n    rlm: rlm,\n    rmoustache: rmoustache,\n    rmoust: rmoust,\n    rnmid: rnmid,\n    roang: roang,\n    roarr: roarr,\n    robrk: robrk,\n    ropar: ropar,\n    ropf: ropf,\n    Ropf: Ropf,\n    roplus: roplus,\n    rotimes: rotimes,\n    RoundImplies: RoundImplies,\n    rpar: rpar,\n    rpargt: rpargt,\n    rppolint: rppolint,\n    rrarr: rrarr,\n    Rrightarrow: Rrightarrow,\n    rsaquo: rsaquo,\n    rscr: rscr,\n    Rscr: Rscr,\n    rsh: rsh,\n    Rsh: Rsh,\n    rsqb: rsqb,\n    rsquo: rsquo,\n    rsquor: rsquor,\n    rthree: rthree,\n    rtimes: rtimes,\n    rtri: rtri,\n    rtrie: rtrie,\n    rtrif: rtrif,\n    rtriltri: rtriltri,\n    RuleDelayed: RuleDelayed,\n    ruluhar: ruluhar,\n    rx: rx,\n    Sacute: Sacute,\n    sacute: sacute,\n    sbquo: sbquo,\n    scap: scap,\n    Scaron: Scaron,\n    scaron: scaron,\n    Sc: Sc,\n    sc: sc,\n    sccue: sccue,\n    sce: sce,\n    scE: scE,\n    Scedil: Scedil,\n    scedil: scedil,\n    Scirc: Scirc,\n    scirc: scirc,\n    scnap: scnap,\n    scnE: scnE,\n    scnsim: scnsim,\n    scpolint: scpolint,\n    scsim: scsim,\n    Scy: Scy,\n    scy: scy,\n    sdotb: sdotb,\n    sdot: sdot,\n    sdote: sdote,\n    searhk: searhk,\n    searr: searr,\n    seArr: seArr,\n    searrow: searrow,\n    sect: sect,\n    semi: semi,\n    seswar: seswar,\n    setminus: setminus,\n    setmn: setmn,\n    sext: sext,\n    Sfr: Sfr,\n    sfr: sfr,\n    sfrown: sfrown,\n    sharp: sharp,\n    SHCHcy: SHCHcy,\n    shchcy: shchcy,\n    SHcy: SHcy,\n    shcy: shcy,\n    ShortDownArrow: ShortDownArrow,\n    ShortLeftArrow: ShortLeftArrow,\n    shortmid: shortmid,\n    shortparallel: shortparallel,\n    ShortRightArrow: ShortRightArrow,\n    ShortUpArrow: ShortUpArrow,\n    shy: shy,\n    Sigma: Sigma,\n    sigma: sigma,\n    sigmaf: sigmaf,\n    sigmav: sigmav,\n    sim: sim,\n    simdot: simdot,\n    sime: sime,\n    simeq: simeq,\n    simg: simg,\n    simgE: simgE,\n    siml: siml,\n    simlE: simlE,\n    simne: simne,\n    simplus: simplus,\n    simrarr: simrarr,\n    slarr: slarr,\n    SmallCircle: SmallCircle,\n    smallsetminus: smallsetminus,\n    smashp: smashp,\n    smeparsl: smeparsl,\n    smid: smid,\n    smile: smile,\n    smt: smt,\n    smte: smte,\n    smtes: smtes,\n    SOFTcy: SOFTcy,\n    softcy: softcy,\n    solbar: solbar,\n    solb: solb,\n    sol: sol,\n    Sopf: Sopf,\n    sopf: sopf,\n    spades: spades,\n    spadesuit: spadesuit,\n    spar: spar,\n    sqcap: sqcap,\n    sqcaps: sqcaps,\n    sqcup: sqcup,\n    sqcups: sqcups,\n    Sqrt: Sqrt,\n    sqsub: sqsub,\n    sqsube: sqsube,\n    sqsubset: sqsubset,\n    sqsubseteq: sqsubseteq,\n    sqsup: sqsup,\n    sqsupe: sqsupe,\n    sqsupset: sqsupset,\n    sqsupseteq: sqsupseteq,\n    square: square,\n    Square: Square,\n    SquareIntersection: SquareIntersection,\n    SquareSubset: SquareSubset,\n    SquareSubsetEqual: SquareSubsetEqual,\n    SquareSuperset: SquareSuperset,\n    SquareSupersetEqual: SquareSupersetEqual,\n    SquareUnion: SquareUnion,\n    squarf: squarf,\n    squ: squ,\n    squf: squf,\n    srarr: srarr,\n    Sscr: Sscr,\n    sscr: sscr,\n    ssetmn: ssetmn,\n    ssmile: ssmile,\n    sstarf: sstarf,\n    Star: Star,\n    star: star,\n    starf: starf,\n    straightepsilon: straightepsilon,\n    straightphi: straightphi,\n    strns: strns,\n    sub: sub,\n    Sub: Sub,\n    subdot: subdot,\n    subE: subE,\n    sube: sube,\n    subedot: subedot,\n    submult: submult,\n    subnE: subnE,\n    subne: subne,\n    subplus: subplus,\n    subrarr: subrarr,\n    subset: subset,\n    Subset: Subset,\n    subseteq: subseteq,\n    subseteqq: subseteqq,\n    SubsetEqual: SubsetEqual,\n    subsetneq: subsetneq,\n    subsetneqq: subsetneqq,\n    subsim: subsim,\n    subsub: subsub,\n    subsup: subsup,\n    succapprox: succapprox,\n    succ: succ,\n    succcurlyeq: succcurlyeq,\n    Succeeds: Succeeds,\n    SucceedsEqual: SucceedsEqual,\n    SucceedsSlantEqual: SucceedsSlantEqual,\n    SucceedsTilde: SucceedsTilde,\n    succeq: succeq,\n    succnapprox: succnapprox,\n    succneqq: succneqq,\n    succnsim: succnsim,\n    succsim: succsim,\n    SuchThat: SuchThat,\n    sum: sum,\n    Sum: Sum,\n    sung: sung,\n    sup1: sup1,\n    sup2: sup2,\n    sup3: sup3,\n    sup: sup,\n    Sup: Sup,\n    supdot: supdot,\n    supdsub: supdsub,\n    supE: supE,\n    supe: supe,\n    supedot: supedot,\n    Superset: Superset,\n    SupersetEqual: SupersetEqual,\n    suphsol: suphsol,\n    suphsub: suphsub,\n    suplarr: suplarr,\n    supmult: supmult,\n    supnE: supnE,\n    supne: supne,\n    supplus: supplus,\n    supset: supset,\n    Supset: Supset,\n    supseteq: supseteq,\n    supseteqq: supseteqq,\n    supsetneq: supsetneq,\n    supsetneqq: supsetneqq,\n    supsim: supsim,\n    supsub: supsub,\n    supsup: supsup,\n    swarhk: swarhk,\n    swarr: swarr,\n    swArr: swArr,\n    swarrow: swarrow,\n    swnwar: swnwar,\n    szlig: szlig,\n    Tab: Tab,\n    target: target,\n    Tau: Tau,\n    tau: tau,\n    tbrk: tbrk,\n    Tcaron: Tcaron,\n    tcaron: tcaron,\n    Tcedil: Tcedil,\n    tcedil: tcedil,\n    Tcy: Tcy,\n    tcy: tcy,\n    tdot: tdot,\n    telrec: telrec,\n    Tfr: Tfr,\n    tfr: tfr,\n    there4: there4,\n    therefore: therefore,\n    Therefore: Therefore,\n    Theta: Theta,\n    theta: theta,\n    thetasym: thetasym,\n    thetav: thetav,\n    thickapprox: thickapprox,\n    thicksim: thicksim,\n    ThickSpace: ThickSpace,\n    ThinSpace: ThinSpace,\n    thinsp: thinsp,\n    thkap: thkap,\n    thksim: thksim,\n    THORN: THORN,\n    thorn: thorn,\n    tilde: tilde,\n    Tilde: Tilde,\n    TildeEqual: TildeEqual,\n    TildeFullEqual: TildeFullEqual,\n    TildeTilde: TildeTilde,\n    timesbar: timesbar,\n    timesb: timesb,\n    times: times,\n    timesd: timesd,\n    tint: tint,\n    toea: toea,\n    topbot: topbot,\n    topcir: topcir,\n    top: top,\n    Topf: Topf,\n    topf: topf,\n    topfork: topfork,\n    tosa: tosa,\n    tprime: tprime,\n    trade: trade,\n    TRADE: TRADE,\n    triangle: triangle,\n    triangledown: triangledown,\n    triangleleft: triangleleft,\n    trianglelefteq: trianglelefteq,\n    triangleq: triangleq,\n    triangleright: triangleright,\n    trianglerighteq: trianglerighteq,\n    tridot: tridot,\n    trie: trie,\n    triminus: triminus,\n    TripleDot: TripleDot,\n    triplus: triplus,\n    trisb: trisb,\n    tritime: tritime,\n    trpezium: trpezium,\n    Tscr: Tscr,\n    tscr: tscr,\n    TScy: TScy,\n    tscy: tscy,\n    TSHcy: TSHcy,\n    tshcy: tshcy,\n    Tstrok: Tstrok,\n    tstrok: tstrok,\n    twixt: twixt,\n    twoheadleftarrow: twoheadleftarrow,\n    twoheadrightarrow: twoheadrightarrow,\n    Uacute: Uacute,\n    uacute: uacute,\n    uarr: uarr,\n    Uarr: Uarr,\n    uArr: uArr,\n    Uarrocir: Uarrocir,\n    Ubrcy: Ubrcy,\n    ubrcy: ubrcy,\n    Ubreve: Ubreve,\n    ubreve: ubreve,\n    Ucirc: Ucirc,\n    ucirc: ucirc,\n    Ucy: Ucy,\n    ucy: ucy,\n    udarr: udarr,\n    Udblac: Udblac,\n    udblac: udblac,\n    udhar: udhar,\n    ufisht: ufisht,\n    Ufr: Ufr,\n    ufr: ufr,\n    Ugrave: Ugrave,\n    ugrave: ugrave,\n    uHar: uHar,\n    uharl: uharl,\n    uharr: uharr,\n    uhblk: uhblk,\n    ulcorn: ulcorn,\n    ulcorner: ulcorner,\n    ulcrop: ulcrop,\n    ultri: ultri,\n    Umacr: Umacr,\n    umacr: umacr,\n    uml: uml,\n    UnderBar: UnderBar,\n    UnderBrace: UnderBrace,\n    UnderBracket: UnderBracket,\n    UnderParenthesis: UnderParenthesis,\n    Union: Union,\n    UnionPlus: UnionPlus,\n    Uogon: Uogon,\n    uogon: uogon,\n    Uopf: Uopf,\n    uopf: uopf,\n    UpArrowBar: UpArrowBar,\n    uparrow: uparrow,\n    UpArrow: UpArrow,\n    Uparrow: Uparrow,\n    UpArrowDownArrow: UpArrowDownArrow,\n    updownarrow: updownarrow,\n    UpDownArrow: UpDownArrow,\n    Updownarrow: Updownarrow,\n    UpEquilibrium: UpEquilibrium,\n    upharpoonleft: upharpoonleft,\n    upharpoonright: upharpoonright,\n    uplus: uplus,\n    UpperLeftArrow: UpperLeftArrow,\n    UpperRightArrow: UpperRightArrow,\n    upsi: upsi,\n    Upsi: Upsi,\n    upsih: upsih,\n    Upsilon: Upsilon,\n    upsilon: upsilon,\n    UpTeeArrow: UpTeeArrow,\n    UpTee: UpTee,\n    upuparrows: upuparrows,\n    urcorn: urcorn,\n    urcorner: urcorner,\n    urcrop: urcrop,\n    Uring: Uring,\n    uring: uring,\n    urtri: urtri,\n    Uscr: Uscr,\n    uscr: uscr,\n    utdot: utdot,\n    Utilde: Utilde,\n    utilde: utilde,\n    utri: utri,\n    utrif: utrif,\n    uuarr: uuarr,\n    Uuml: Uuml,\n    uuml: uuml,\n    uwangle: uwangle,\n    vangrt: vangrt,\n    varepsilon: varepsilon,\n    varkappa: varkappa,\n    varnothing: varnothing,\n    varphi: varphi,\n    varpi: varpi,\n    varpropto: varpropto,\n    varr: varr,\n    vArr: vArr,\n    varrho: varrho,\n    varsigma: varsigma,\n    varsubsetneq: varsubsetneq,\n    varsubsetneqq: varsubsetneqq,\n    varsupsetneq: varsupsetneq,\n    varsupsetneqq: varsupsetneqq,\n    vartheta: vartheta,\n    vartriangleleft: vartriangleleft,\n    vartriangleright: vartriangleright,\n    vBar: vBar,\n    Vbar: Vbar,\n    vBarv: vBarv,\n    Vcy: Vcy,\n    vcy: vcy,\n    vdash: vdash,\n    vDash: vDash,\n    Vdash: Vdash,\n    VDash: VDash,\n    Vdashl: Vdashl,\n    veebar: veebar,\n    vee: vee,\n    Vee: Vee,\n    veeeq: veeeq,\n    vellip: vellip,\n    verbar: verbar,\n    Verbar: Verbar,\n    vert: vert,\n    Vert: Vert,\n    VerticalBar: VerticalBar,\n    VerticalLine: VerticalLine,\n    VerticalSeparator: VerticalSeparator,\n    VerticalTilde: VerticalTilde,\n    VeryThinSpace: VeryThinSpace,\n    Vfr: Vfr,\n    vfr: vfr,\n    vltri: vltri,\n    vnsub: vnsub,\n    vnsup: vnsup,\n    Vopf: Vopf,\n    vopf: vopf,\n    vprop: vprop,\n    vrtri: vrtri,\n    Vscr: Vscr,\n    vscr: vscr,\n    vsubnE: vsubnE,\n    vsubne: vsubne,\n    vsupnE: vsupnE,\n    vsupne: vsupne,\n    Vvdash: Vvdash,\n    vzigzag: vzigzag,\n    Wcirc: Wcirc,\n    wcirc: wcirc,\n    wedbar: wedbar,\n    wedge: wedge,\n    Wedge: Wedge,\n    wedgeq: wedgeq,\n    weierp: weierp,\n    Wfr: Wfr,\n    wfr: wfr,\n    Wopf: Wopf,\n    wopf: wopf,\n    wp: wp,\n    wr: wr,\n    wreath: wreath,\n    Wscr: Wscr,\n    wscr: wscr,\n    xcap: xcap,\n    xcirc: xcirc,\n    xcup: xcup,\n    xdtri: xdtri,\n    Xfr: Xfr,\n    xfr: xfr,\n    xharr: xharr,\n    xhArr: xhArr,\n    Xi: Xi,\n    xi: xi,\n    xlarr: xlarr,\n    xlArr: xlArr,\n    xmap: xmap,\n    xnis: xnis,\n    xodot: xodot,\n    Xopf: Xopf,\n    xopf: xopf,\n    xoplus: xoplus,\n    xotime: xotime,\n    xrarr: xrarr,\n    xrArr: xrArr,\n    Xscr: Xscr,\n    xscr: xscr,\n    xsqcup: xsqcup,\n    xuplus: xuplus,\n    xutri: xutri,\n    xvee: xvee,\n    xwedge: xwedge,\n    Yacute: Yacute,\n    yacute: yacute,\n    YAcy: YAcy,\n    yacy: yacy,\n    Ycirc: Ycirc,\n    ycirc: ycirc,\n    Ycy: Ycy,\n    ycy: ycy,\n    yen: yen,\n    Yfr: Yfr,\n    yfr: yfr,\n    YIcy: YIcy,\n    yicy: yicy,\n    Yopf: Yopf,\n    yopf: yopf,\n    Yscr: Yscr,\n    yscr: yscr,\n    YUcy: YUcy,\n    yucy: yucy,\n    yuml: yuml,\n    Yuml: Yuml,\n    Zacute: Zacute,\n    zacute: zacute,\n    Zcaron: Zcaron,\n    zcaron: zcaron,\n    Zcy: Zcy,\n    zcy: zcy,\n    Zdot: Zdot,\n    zdot: zdot,\n    zeetrf: zeetrf,\n    ZeroWidthSpace: ZeroWidthSpace,\n    Zeta: Zeta,\n    zeta: zeta,\n    zfr: zfr,\n    Zfr: Zfr,\n    ZHcy: ZHcy,\n    zhcy: zhcy,\n    zigrarr: zigrarr,\n    zopf: zopf,\n    Zopf: Zopf,\n    Zscr: Zscr,\n    zscr: zscr,\n    zwj: zwj,\n    zwnj: zwnj\n  };\n  var entities$1 = {\n    __proto__: null,\n    Aacute: Aacute,\n    aacute: aacute,\n    Abreve: Abreve,\n    abreve: abreve,\n    ac: ac,\n    acd: acd,\n    acE: acE,\n    Acirc: Acirc,\n    acirc: acirc,\n    acute: acute,\n    Acy: Acy,\n    acy: acy,\n    AElig: AElig,\n    aelig: aelig,\n    af: af,\n    Afr: Afr,\n    afr: afr,\n    Agrave: Agrave,\n    agrave: agrave,\n    alefsym: alefsym,\n    aleph: aleph,\n    Alpha: Alpha,\n    alpha: alpha,\n    Amacr: Amacr,\n    amacr: amacr,\n    amalg: amalg,\n    amp: amp,\n    AMP: AMP,\n    andand: andand,\n    And: And,\n    and: and,\n    andd: andd,\n    andslope: andslope,\n    andv: andv,\n    ang: ang,\n    ange: ange,\n    angle: angle,\n    angmsdaa: angmsdaa,\n    angmsdab: angmsdab,\n    angmsdac: angmsdac,\n    angmsdad: angmsdad,\n    angmsdae: angmsdae,\n    angmsdaf: angmsdaf,\n    angmsdag: angmsdag,\n    angmsdah: angmsdah,\n    angmsd: angmsd,\n    angrt: angrt,\n    angrtvb: angrtvb,\n    angrtvbd: angrtvbd,\n    angsph: angsph,\n    angst: angst,\n    angzarr: angzarr,\n    Aogon: Aogon,\n    aogon: aogon,\n    Aopf: Aopf,\n    aopf: aopf,\n    apacir: apacir,\n    ap: ap,\n    apE: apE,\n    ape: ape,\n    apid: apid,\n    apos: apos,\n    ApplyFunction: ApplyFunction,\n    approx: approx,\n    approxeq: approxeq,\n    Aring: Aring,\n    aring: aring,\n    Ascr: Ascr,\n    ascr: ascr,\n    Assign: Assign,\n    ast: ast,\n    asymp: asymp,\n    asympeq: asympeq,\n    Atilde: Atilde,\n    atilde: atilde,\n    Auml: Auml,\n    auml: auml,\n    awconint: awconint,\n    awint: awint,\n    backcong: backcong,\n    backepsilon: backepsilon,\n    backprime: backprime,\n    backsim: backsim,\n    backsimeq: backsimeq,\n    Backslash: Backslash,\n    Barv: Barv,\n    barvee: barvee,\n    barwed: barwed,\n    Barwed: Barwed,\n    barwedge: barwedge,\n    bbrk: bbrk,\n    bbrktbrk: bbrktbrk,\n    bcong: bcong,\n    Bcy: Bcy,\n    bcy: bcy,\n    bdquo: bdquo,\n    becaus: becaus,\n    because: because,\n    Because: Because,\n    bemptyv: bemptyv,\n    bepsi: bepsi,\n    bernou: bernou,\n    Bernoullis: Bernoullis,\n    Beta: Beta,\n    beta: beta,\n    beth: beth,\n    between: between,\n    Bfr: Bfr,\n    bfr: bfr,\n    bigcap: bigcap,\n    bigcirc: bigcirc,\n    bigcup: bigcup,\n    bigodot: bigodot,\n    bigoplus: bigoplus,\n    bigotimes: bigotimes,\n    bigsqcup: bigsqcup,\n    bigstar: bigstar,\n    bigtriangledown: bigtriangledown,\n    bigtriangleup: bigtriangleup,\n    biguplus: biguplus,\n    bigvee: bigvee,\n    bigwedge: bigwedge,\n    bkarow: bkarow,\n    blacklozenge: blacklozenge,\n    blacksquare: blacksquare,\n    blacktriangle: blacktriangle,\n    blacktriangledown: blacktriangledown,\n    blacktriangleleft: blacktriangleleft,\n    blacktriangleright: blacktriangleright,\n    blank: blank,\n    blk12: blk12,\n    blk14: blk14,\n    blk34: blk34,\n    block: block,\n    bne: bne,\n    bnequiv: bnequiv,\n    bNot: bNot,\n    bnot: bnot,\n    Bopf: Bopf,\n    bopf: bopf,\n    bot: bot,\n    bottom: bottom,\n    bowtie: bowtie,\n    boxbox: boxbox,\n    boxdl: boxdl,\n    boxdL: boxdL,\n    boxDl: boxDl,\n    boxDL: boxDL,\n    boxdr: boxdr,\n    boxdR: boxdR,\n    boxDr: boxDr,\n    boxDR: boxDR,\n    boxh: boxh,\n    boxH: boxH,\n    boxhd: boxhd,\n    boxHd: boxHd,\n    boxhD: boxhD,\n    boxHD: boxHD,\n    boxhu: boxhu,\n    boxHu: boxHu,\n    boxhU: boxhU,\n    boxHU: boxHU,\n    boxminus: boxminus,\n    boxplus: boxplus,\n    boxtimes: boxtimes,\n    boxul: boxul,\n    boxuL: boxuL,\n    boxUl: boxUl,\n    boxUL: boxUL,\n    boxur: boxur,\n    boxuR: boxuR,\n    boxUr: boxUr,\n    boxUR: boxUR,\n    boxv: boxv,\n    boxV: boxV,\n    boxvh: boxvh,\n    boxvH: boxvH,\n    boxVh: boxVh,\n    boxVH: boxVH,\n    boxvl: boxvl,\n    boxvL: boxvL,\n    boxVl: boxVl,\n    boxVL: boxVL,\n    boxvr: boxvr,\n    boxvR: boxvR,\n    boxVr: boxVr,\n    boxVR: boxVR,\n    bprime: bprime,\n    breve: breve,\n    Breve: Breve,\n    brvbar: brvbar,\n    bscr: bscr,\n    Bscr: Bscr,\n    bsemi: bsemi,\n    bsim: bsim,\n    bsime: bsime,\n    bsolb: bsolb,\n    bsol: bsol,\n    bsolhsub: bsolhsub,\n    bull: bull,\n    bullet: bullet,\n    bump: bump,\n    bumpE: bumpE,\n    bumpe: bumpe,\n    Bumpeq: Bumpeq,\n    bumpeq: bumpeq,\n    Cacute: Cacute,\n    cacute: cacute,\n    capand: capand,\n    capbrcup: capbrcup,\n    capcap: capcap,\n    cap: cap,\n    Cap: Cap,\n    capcup: capcup,\n    capdot: capdot,\n    CapitalDifferentialD: CapitalDifferentialD,\n    caps: caps,\n    caret: caret,\n    caron: caron,\n    Cayleys: Cayleys,\n    ccaps: ccaps,\n    Ccaron: Ccaron,\n    ccaron: ccaron,\n    Ccedil: Ccedil,\n    ccedil: ccedil,\n    Ccirc: Ccirc,\n    ccirc: ccirc,\n    Cconint: Cconint,\n    ccups: ccups,\n    ccupssm: ccupssm,\n    Cdot: Cdot,\n    cdot: cdot,\n    cedil: cedil,\n    Cedilla: Cedilla,\n    cemptyv: cemptyv,\n    cent: cent,\n    centerdot: centerdot,\n    CenterDot: CenterDot,\n    cfr: cfr,\n    Cfr: Cfr,\n    CHcy: CHcy,\n    chcy: chcy,\n    check: check,\n    checkmark: checkmark,\n    Chi: Chi,\n    chi: chi,\n    circ: circ,\n    circeq: circeq,\n    circlearrowleft: circlearrowleft,\n    circlearrowright: circlearrowright,\n    circledast: circledast,\n    circledcirc: circledcirc,\n    circleddash: circleddash,\n    CircleDot: CircleDot,\n    circledR: circledR,\n    circledS: circledS,\n    CircleMinus: CircleMinus,\n    CirclePlus: CirclePlus,\n    CircleTimes: CircleTimes,\n    cir: cir,\n    cirE: cirE,\n    cire: cire,\n    cirfnint: cirfnint,\n    cirmid: cirmid,\n    cirscir: cirscir,\n    ClockwiseContourIntegral: ClockwiseContourIntegral,\n    CloseCurlyDoubleQuote: CloseCurlyDoubleQuote,\n    CloseCurlyQuote: CloseCurlyQuote,\n    clubs: clubs,\n    clubsuit: clubsuit,\n    colon: colon,\n    Colon: Colon,\n    Colone: Colone,\n    colone: colone,\n    coloneq: coloneq,\n    comma: comma,\n    commat: commat,\n    comp: comp,\n    compfn: compfn,\n    complement: complement,\n    complexes: complexes,\n    cong: cong,\n    congdot: congdot,\n    Congruent: Congruent,\n    conint: conint,\n    Conint: Conint,\n    ContourIntegral: ContourIntegral,\n    copf: copf,\n    Copf: Copf,\n    coprod: coprod,\n    Coproduct: Coproduct,\n    copy: copy,\n    COPY: COPY,\n    copysr: copysr,\n    CounterClockwiseContourIntegral: CounterClockwiseContourIntegral,\n    crarr: crarr,\n    cross: cross,\n    Cross: Cross,\n    Cscr: Cscr,\n    cscr: cscr,\n    csub: csub,\n    csube: csube,\n    csup: csup,\n    csupe: csupe,\n    ctdot: ctdot,\n    cudarrl: cudarrl,\n    cudarrr: cudarrr,\n    cuepr: cuepr,\n    cuesc: cuesc,\n    cularr: cularr,\n    cularrp: cularrp,\n    cupbrcap: cupbrcap,\n    cupcap: cupcap,\n    CupCap: CupCap,\n    cup: cup,\n    Cup: Cup,\n    cupcup: cupcup,\n    cupdot: cupdot,\n    cupor: cupor,\n    cups: cups,\n    curarr: curarr,\n    curarrm: curarrm,\n    curlyeqprec: curlyeqprec,\n    curlyeqsucc: curlyeqsucc,\n    curlyvee: curlyvee,\n    curlywedge: curlywedge,\n    curren: curren,\n    curvearrowleft: curvearrowleft,\n    curvearrowright: curvearrowright,\n    cuvee: cuvee,\n    cuwed: cuwed,\n    cwconint: cwconint,\n    cwint: cwint,\n    cylcty: cylcty,\n    dagger: dagger,\n    Dagger: Dagger,\n    daleth: daleth,\n    darr: darr,\n    Darr: Darr,\n    dArr: dArr,\n    dash: dash,\n    Dashv: Dashv,\n    dashv: dashv,\n    dbkarow: dbkarow,\n    dblac: dblac,\n    Dcaron: Dcaron,\n    dcaron: dcaron,\n    Dcy: Dcy,\n    dcy: dcy,\n    ddagger: ddagger,\n    ddarr: ddarr,\n    DD: DD,\n    dd: dd,\n    DDotrahd: DDotrahd,\n    ddotseq: ddotseq,\n    deg: deg,\n    Del: Del,\n    Delta: Delta,\n    delta: delta,\n    demptyv: demptyv,\n    dfisht: dfisht,\n    Dfr: Dfr,\n    dfr: dfr,\n    dHar: dHar,\n    dharl: dharl,\n    dharr: dharr,\n    DiacriticalAcute: DiacriticalAcute,\n    DiacriticalDot: DiacriticalDot,\n    DiacriticalDoubleAcute: DiacriticalDoubleAcute,\n    DiacriticalGrave: DiacriticalGrave,\n    DiacriticalTilde: DiacriticalTilde,\n    diam: diam,\n    diamond: diamond,\n    Diamond: Diamond,\n    diamondsuit: diamondsuit,\n    diams: diams,\n    die: die,\n    DifferentialD: DifferentialD,\n    digamma: digamma,\n    disin: disin,\n    div: div,\n    divide: divide,\n    divideontimes: divideontimes,\n    divonx: divonx,\n    DJcy: DJcy,\n    djcy: djcy,\n    dlcorn: dlcorn,\n    dlcrop: dlcrop,\n    dollar: dollar,\n    Dopf: Dopf,\n    dopf: dopf,\n    Dot: Dot,\n    dot: dot,\n    DotDot: DotDot,\n    doteq: doteq,\n    doteqdot: doteqdot,\n    DotEqual: DotEqual,\n    dotminus: dotminus,\n    dotplus: dotplus,\n    dotsquare: dotsquare,\n    doublebarwedge: doublebarwedge,\n    DoubleContourIntegral: DoubleContourIntegral,\n    DoubleDot: DoubleDot,\n    DoubleDownArrow: DoubleDownArrow,\n    DoubleLeftArrow: DoubleLeftArrow,\n    DoubleLeftRightArrow: DoubleLeftRightArrow,\n    DoubleLeftTee: DoubleLeftTee,\n    DoubleLongLeftArrow: DoubleLongLeftArrow,\n    DoubleLongLeftRightArrow: DoubleLongLeftRightArrow,\n    DoubleLongRightArrow: DoubleLongRightArrow,\n    DoubleRightArrow: DoubleRightArrow,\n    DoubleRightTee: DoubleRightTee,\n    DoubleUpArrow: DoubleUpArrow,\n    DoubleUpDownArrow: DoubleUpDownArrow,\n    DoubleVerticalBar: DoubleVerticalBar,\n    DownArrowBar: DownArrowBar,\n    downarrow: downarrow,\n    DownArrow: DownArrow,\n    Downarrow: Downarrow,\n    DownArrowUpArrow: DownArrowUpArrow,\n    DownBreve: DownBreve,\n    downdownarrows: downdownarrows,\n    downharpoonleft: downharpoonleft,\n    downharpoonright: downharpoonright,\n    DownLeftRightVector: DownLeftRightVector,\n    DownLeftTeeVector: DownLeftTeeVector,\n    DownLeftVectorBar: DownLeftVectorBar,\n    DownLeftVector: DownLeftVector,\n    DownRightTeeVector: DownRightTeeVector,\n    DownRightVectorBar: DownRightVectorBar,\n    DownRightVector: DownRightVector,\n    DownTeeArrow: DownTeeArrow,\n    DownTee: DownTee,\n    drbkarow: drbkarow,\n    drcorn: drcorn,\n    drcrop: drcrop,\n    Dscr: Dscr,\n    dscr: dscr,\n    DScy: DScy,\n    dscy: dscy,\n    dsol: dsol,\n    Dstrok: Dstrok,\n    dstrok: dstrok,\n    dtdot: dtdot,\n    dtri: dtri,\n    dtrif: dtrif,\n    duarr: duarr,\n    duhar: duhar,\n    dwangle: dwangle,\n    DZcy: DZcy,\n    dzcy: dzcy,\n    dzigrarr: dzigrarr,\n    Eacute: Eacute,\n    eacute: eacute,\n    easter: easter,\n    Ecaron: Ecaron,\n    ecaron: ecaron,\n    Ecirc: Ecirc,\n    ecirc: ecirc,\n    ecir: ecir,\n    ecolon: ecolon,\n    Ecy: Ecy,\n    ecy: ecy,\n    eDDot: eDDot,\n    Edot: Edot,\n    edot: edot,\n    eDot: eDot,\n    ee: ee,\n    efDot: efDot,\n    Efr: Efr,\n    efr: efr,\n    eg: eg,\n    Egrave: Egrave,\n    egrave: egrave,\n    egs: egs,\n    egsdot: egsdot,\n    el: el,\n    Element: Element,\n    elinters: elinters,\n    ell: ell,\n    els: els,\n    elsdot: elsdot,\n    Emacr: Emacr,\n    emacr: emacr,\n    empty: empty,\n    emptyset: emptyset,\n    EmptySmallSquare: EmptySmallSquare,\n    emptyv: emptyv,\n    EmptyVerySmallSquare: EmptyVerySmallSquare,\n    emsp13: emsp13,\n    emsp14: emsp14,\n    emsp: emsp,\n    ENG: ENG,\n    eng: eng,\n    ensp: ensp,\n    Eogon: Eogon,\n    eogon: eogon,\n    Eopf: Eopf,\n    eopf: eopf,\n    epar: epar,\n    eparsl: eparsl,\n    eplus: eplus,\n    epsi: epsi,\n    Epsilon: Epsilon,\n    epsilon: epsilon,\n    epsiv: epsiv,\n    eqcirc: eqcirc,\n    eqcolon: eqcolon,\n    eqsim: eqsim,\n    eqslantgtr: eqslantgtr,\n    eqslantless: eqslantless,\n    Equal: Equal,\n    equals: equals,\n    EqualTilde: EqualTilde,\n    equest: equest,\n    Equilibrium: Equilibrium,\n    equiv: equiv,\n    equivDD: equivDD,\n    eqvparsl: eqvparsl,\n    erarr: erarr,\n    erDot: erDot,\n    escr: escr,\n    Escr: Escr,\n    esdot: esdot,\n    Esim: Esim,\n    esim: esim,\n    Eta: Eta,\n    eta: eta,\n    ETH: ETH,\n    eth: eth,\n    Euml: Euml,\n    euml: euml,\n    euro: euro,\n    excl: excl,\n    exist: exist,\n    Exists: Exists,\n    expectation: expectation,\n    exponentiale: exponentiale,\n    ExponentialE: ExponentialE,\n    fallingdotseq: fallingdotseq,\n    Fcy: Fcy,\n    fcy: fcy,\n    female: female,\n    ffilig: ffilig,\n    fflig: fflig,\n    ffllig: ffllig,\n    Ffr: Ffr,\n    ffr: ffr,\n    filig: filig,\n    FilledSmallSquare: FilledSmallSquare,\n    FilledVerySmallSquare: FilledVerySmallSquare,\n    fjlig: fjlig,\n    flat: flat,\n    fllig: fllig,\n    fltns: fltns,\n    fnof: fnof,\n    Fopf: Fopf,\n    fopf: fopf,\n    forall: forall,\n    ForAll: ForAll,\n    fork: fork,\n    forkv: forkv,\n    Fouriertrf: Fouriertrf,\n    fpartint: fpartint,\n    frac12: frac12,\n    frac13: frac13,\n    frac14: frac14,\n    frac15: frac15,\n    frac16: frac16,\n    frac18: frac18,\n    frac23: frac23,\n    frac25: frac25,\n    frac34: frac34,\n    frac35: frac35,\n    frac38: frac38,\n    frac45: frac45,\n    frac56: frac56,\n    frac58: frac58,\n    frac78: frac78,\n    frasl: frasl,\n    frown: frown,\n    fscr: fscr,\n    Fscr: Fscr,\n    gacute: gacute,\n    Gamma: Gamma,\n    gamma: gamma,\n    Gammad: Gammad,\n    gammad: gammad,\n    gap: gap,\n    Gbreve: Gbreve,\n    gbreve: gbreve,\n    Gcedil: Gcedil,\n    Gcirc: Gcirc,\n    gcirc: gcirc,\n    Gcy: Gcy,\n    gcy: gcy,\n    Gdot: Gdot,\n    gdot: gdot,\n    ge: ge,\n    gE: gE,\n    gEl: gEl,\n    gel: gel,\n    geq: geq,\n    geqq: geqq,\n    geqslant: geqslant,\n    gescc: gescc,\n    ges: ges,\n    gesdot: gesdot,\n    gesdoto: gesdoto,\n    gesdotol: gesdotol,\n    gesl: gesl,\n    gesles: gesles,\n    Gfr: Gfr,\n    gfr: gfr,\n    gg: gg,\n    Gg: Gg,\n    ggg: ggg,\n    gimel: gimel,\n    GJcy: GJcy,\n    gjcy: gjcy,\n    gla: gla,\n    gl: gl,\n    glE: glE,\n    glj: glj,\n    gnap: gnap,\n    gnapprox: gnapprox,\n    gne: gne,\n    gnE: gnE,\n    gneq: gneq,\n    gneqq: gneqq,\n    gnsim: gnsim,\n    Gopf: Gopf,\n    gopf: gopf,\n    grave: grave,\n    GreaterEqual: GreaterEqual,\n    GreaterEqualLess: GreaterEqualLess,\n    GreaterFullEqual: GreaterFullEqual,\n    GreaterGreater: GreaterGreater,\n    GreaterLess: GreaterLess,\n    GreaterSlantEqual: GreaterSlantEqual,\n    GreaterTilde: GreaterTilde,\n    Gscr: Gscr,\n    gscr: gscr,\n    gsim: gsim,\n    gsime: gsime,\n    gsiml: gsiml,\n    gtcc: gtcc,\n    gtcir: gtcir,\n    gt: gt,\n    GT: GT,\n    Gt: Gt,\n    gtdot: gtdot,\n    gtlPar: gtlPar,\n    gtquest: gtquest,\n    gtrapprox: gtrapprox,\n    gtrarr: gtrarr,\n    gtrdot: gtrdot,\n    gtreqless: gtreqless,\n    gtreqqless: gtreqqless,\n    gtrless: gtrless,\n    gtrsim: gtrsim,\n    gvertneqq: gvertneqq,\n    gvnE: gvnE,\n    Hacek: Hacek,\n    hairsp: hairsp,\n    half: half,\n    hamilt: hamilt,\n    HARDcy: HARDcy,\n    hardcy: hardcy,\n    harrcir: harrcir,\n    harr: harr,\n    hArr: hArr,\n    harrw: harrw,\n    Hat: Hat,\n    hbar: hbar,\n    Hcirc: Hcirc,\n    hcirc: hcirc,\n    hearts: hearts,\n    heartsuit: heartsuit,\n    hellip: hellip,\n    hercon: hercon,\n    hfr: hfr,\n    Hfr: Hfr,\n    HilbertSpace: HilbertSpace,\n    hksearow: hksearow,\n    hkswarow: hkswarow,\n    hoarr: hoarr,\n    homtht: homtht,\n    hookleftarrow: hookleftarrow,\n    hookrightarrow: hookrightarrow,\n    hopf: hopf,\n    Hopf: Hopf,\n    horbar: horbar,\n    HorizontalLine: HorizontalLine,\n    hscr: hscr,\n    Hscr: Hscr,\n    hslash: hslash,\n    Hstrok: Hstrok,\n    hstrok: hstrok,\n    HumpDownHump: HumpDownHump,\n    HumpEqual: HumpEqual,\n    hybull: hybull,\n    hyphen: hyphen,\n    Iacute: Iacute,\n    iacute: iacute,\n    ic: ic,\n    Icirc: Icirc,\n    icirc: icirc,\n    Icy: Icy,\n    icy: icy,\n    Idot: Idot,\n    IEcy: IEcy,\n    iecy: iecy,\n    iexcl: iexcl,\n    iff: iff,\n    ifr: ifr,\n    Ifr: Ifr,\n    Igrave: Igrave,\n    igrave: igrave,\n    ii: ii,\n    iiiint: iiiint,\n    iiint: iiint,\n    iinfin: iinfin,\n    iiota: iiota,\n    IJlig: IJlig,\n    ijlig: ijlig,\n    Imacr: Imacr,\n    imacr: imacr,\n    image: image,\n    ImaginaryI: ImaginaryI,\n    imagline: imagline,\n    imagpart: imagpart,\n    imath: imath,\n    Im: Im,\n    imof: imof,\n    imped: imped,\n    Implies: Implies,\n    incare: incare,\n    infin: infin,\n    infintie: infintie,\n    inodot: inodot,\n    intcal: intcal,\n    int: int,\n    Int: Int,\n    integers: integers,\n    Integral: Integral,\n    intercal: intercal,\n    Intersection: Intersection,\n    intlarhk: intlarhk,\n    intprod: intprod,\n    InvisibleComma: InvisibleComma,\n    InvisibleTimes: InvisibleTimes,\n    IOcy: IOcy,\n    iocy: iocy,\n    Iogon: Iogon,\n    iogon: iogon,\n    Iopf: Iopf,\n    iopf: iopf,\n    Iota: Iota,\n    iota: iota,\n    iprod: iprod,\n    iquest: iquest,\n    iscr: iscr,\n    Iscr: Iscr,\n    isin: isin,\n    isindot: isindot,\n    isinE: isinE,\n    isins: isins,\n    isinsv: isinsv,\n    isinv: isinv,\n    it: it,\n    Itilde: Itilde,\n    itilde: itilde,\n    Iukcy: Iukcy,\n    iukcy: iukcy,\n    Iuml: Iuml,\n    iuml: iuml,\n    Jcirc: Jcirc,\n    jcirc: jcirc,\n    Jcy: Jcy,\n    jcy: jcy,\n    Jfr: Jfr,\n    jfr: jfr,\n    jmath: jmath,\n    Jopf: Jopf,\n    jopf: jopf,\n    Jscr: Jscr,\n    jscr: jscr,\n    Jsercy: Jsercy,\n    jsercy: jsercy,\n    Jukcy: Jukcy,\n    jukcy: jukcy,\n    Kappa: Kappa,\n    kappa: kappa,\n    kappav: kappav,\n    Kcedil: Kcedil,\n    kcedil: kcedil,\n    Kcy: Kcy,\n    kcy: kcy,\n    Kfr: Kfr,\n    kfr: kfr,\n    kgreen: kgreen,\n    KHcy: KHcy,\n    khcy: khcy,\n    KJcy: KJcy,\n    kjcy: kjcy,\n    Kopf: Kopf,\n    kopf: kopf,\n    Kscr: Kscr,\n    kscr: kscr,\n    lAarr: lAarr,\n    Lacute: Lacute,\n    lacute: lacute,\n    laemptyv: laemptyv,\n    lagran: lagran,\n    Lambda: Lambda,\n    lambda: lambda,\n    lang: lang,\n    Lang: Lang,\n    langd: langd,\n    langle: langle,\n    lap: lap,\n    Laplacetrf: Laplacetrf,\n    laquo: laquo,\n    larrb: larrb,\n    larrbfs: larrbfs,\n    larr: larr,\n    Larr: Larr,\n    lArr: lArr,\n    larrfs: larrfs,\n    larrhk: larrhk,\n    larrlp: larrlp,\n    larrpl: larrpl,\n    larrsim: larrsim,\n    larrtl: larrtl,\n    latail: latail,\n    lAtail: lAtail,\n    lat: lat,\n    late: late,\n    lates: lates,\n    lbarr: lbarr,\n    lBarr: lBarr,\n    lbbrk: lbbrk,\n    lbrace: lbrace,\n    lbrack: lbrack,\n    lbrke: lbrke,\n    lbrksld: lbrksld,\n    lbrkslu: lbrkslu,\n    Lcaron: Lcaron,\n    lcaron: lcaron,\n    Lcedil: Lcedil,\n    lcedil: lcedil,\n    lceil: lceil,\n    lcub: lcub,\n    Lcy: Lcy,\n    lcy: lcy,\n    ldca: ldca,\n    ldquo: ldquo,\n    ldquor: ldquor,\n    ldrdhar: ldrdhar,\n    ldrushar: ldrushar,\n    ldsh: ldsh,\n    le: le,\n    lE: lE,\n    LeftAngleBracket: LeftAngleBracket,\n    LeftArrowBar: LeftArrowBar,\n    leftarrow: leftarrow,\n    LeftArrow: LeftArrow,\n    Leftarrow: Leftarrow,\n    LeftArrowRightArrow: LeftArrowRightArrow,\n    leftarrowtail: leftarrowtail,\n    LeftCeiling: LeftCeiling,\n    LeftDoubleBracket: LeftDoubleBracket,\n    LeftDownTeeVector: LeftDownTeeVector,\n    LeftDownVectorBar: LeftDownVectorBar,\n    LeftDownVector: LeftDownVector,\n    LeftFloor: LeftFloor,\n    leftharpoondown: leftharpoondown,\n    leftharpoonup: leftharpoonup,\n    leftleftarrows: leftleftarrows,\n    leftrightarrow: leftrightarrow,\n    LeftRightArrow: LeftRightArrow,\n    Leftrightarrow: Leftrightarrow,\n    leftrightarrows: leftrightarrows,\n    leftrightharpoons: leftrightharpoons,\n    leftrightsquigarrow: leftrightsquigarrow,\n    LeftRightVector: LeftRightVector,\n    LeftTeeArrow: LeftTeeArrow,\n    LeftTee: LeftTee,\n    LeftTeeVector: LeftTeeVector,\n    leftthreetimes: leftthreetimes,\n    LeftTriangleBar: LeftTriangleBar,\n    LeftTriangle: LeftTriangle,\n    LeftTriangleEqual: LeftTriangleEqual,\n    LeftUpDownVector: LeftUpDownVector,\n    LeftUpTeeVector: LeftUpTeeVector,\n    LeftUpVectorBar: LeftUpVectorBar,\n    LeftUpVector: LeftUpVector,\n    LeftVectorBar: LeftVectorBar,\n    LeftVector: LeftVector,\n    lEg: lEg,\n    leg: leg,\n    leq: leq,\n    leqq: leqq,\n    leqslant: leqslant,\n    lescc: lescc,\n    les: les,\n    lesdot: lesdot,\n    lesdoto: lesdoto,\n    lesdotor: lesdotor,\n    lesg: lesg,\n    lesges: lesges,\n    lessapprox: lessapprox,\n    lessdot: lessdot,\n    lesseqgtr: lesseqgtr,\n    lesseqqgtr: lesseqqgtr,\n    LessEqualGreater: LessEqualGreater,\n    LessFullEqual: LessFullEqual,\n    LessGreater: LessGreater,\n    lessgtr: lessgtr,\n    LessLess: LessLess,\n    lesssim: lesssim,\n    LessSlantEqual: LessSlantEqual,\n    LessTilde: LessTilde,\n    lfisht: lfisht,\n    lfloor: lfloor,\n    Lfr: Lfr,\n    lfr: lfr,\n    lg: lg,\n    lgE: lgE,\n    lHar: lHar,\n    lhard: lhard,\n    lharu: lharu,\n    lharul: lharul,\n    lhblk: lhblk,\n    LJcy: LJcy,\n    ljcy: ljcy,\n    llarr: llarr,\n    ll: ll,\n    Ll: Ll,\n    llcorner: llcorner,\n    Lleftarrow: Lleftarrow,\n    llhard: llhard,\n    lltri: lltri,\n    Lmidot: Lmidot,\n    lmidot: lmidot,\n    lmoustache: lmoustache,\n    lmoust: lmoust,\n    lnap: lnap,\n    lnapprox: lnapprox,\n    lne: lne,\n    lnE: lnE,\n    lneq: lneq,\n    lneqq: lneqq,\n    lnsim: lnsim,\n    loang: loang,\n    loarr: loarr,\n    lobrk: lobrk,\n    longleftarrow: longleftarrow,\n    LongLeftArrow: LongLeftArrow,\n    Longleftarrow: Longleftarrow,\n    longleftrightarrow: longleftrightarrow,\n    LongLeftRightArrow: LongLeftRightArrow,\n    Longleftrightarrow: Longleftrightarrow,\n    longmapsto: longmapsto,\n    longrightarrow: longrightarrow,\n    LongRightArrow: LongRightArrow,\n    Longrightarrow: Longrightarrow,\n    looparrowleft: looparrowleft,\n    looparrowright: looparrowright,\n    lopar: lopar,\n    Lopf: Lopf,\n    lopf: lopf,\n    loplus: loplus,\n    lotimes: lotimes,\n    lowast: lowast,\n    lowbar: lowbar,\n    LowerLeftArrow: LowerLeftArrow,\n    LowerRightArrow: LowerRightArrow,\n    loz: loz,\n    lozenge: lozenge,\n    lozf: lozf,\n    lpar: lpar,\n    lparlt: lparlt,\n    lrarr: lrarr,\n    lrcorner: lrcorner,\n    lrhar: lrhar,\n    lrhard: lrhard,\n    lrm: lrm,\n    lrtri: lrtri,\n    lsaquo: lsaquo,\n    lscr: lscr,\n    Lscr: Lscr,\n    lsh: lsh,\n    Lsh: Lsh,\n    lsim: lsim,\n    lsime: lsime,\n    lsimg: lsimg,\n    lsqb: lsqb,\n    lsquo: lsquo,\n    lsquor: lsquor,\n    Lstrok: Lstrok,\n    lstrok: lstrok,\n    ltcc: ltcc,\n    ltcir: ltcir,\n    lt: lt,\n    LT: LT,\n    Lt: Lt,\n    ltdot: ltdot,\n    lthree: lthree,\n    ltimes: ltimes,\n    ltlarr: ltlarr,\n    ltquest: ltquest,\n    ltri: ltri,\n    ltrie: ltrie,\n    ltrif: ltrif,\n    ltrPar: ltrPar,\n    lurdshar: lurdshar,\n    luruhar: luruhar,\n    lvertneqq: lvertneqq,\n    lvnE: lvnE,\n    macr: macr,\n    male: male,\n    malt: malt,\n    maltese: maltese,\n    map: map,\n    mapsto: mapsto,\n    mapstodown: mapstodown,\n    mapstoleft: mapstoleft,\n    mapstoup: mapstoup,\n    marker: marker,\n    mcomma: mcomma,\n    Mcy: Mcy,\n    mcy: mcy,\n    mdash: mdash,\n    mDDot: mDDot,\n    measuredangle: measuredangle,\n    MediumSpace: MediumSpace,\n    Mellintrf: Mellintrf,\n    Mfr: Mfr,\n    mfr: mfr,\n    mho: mho,\n    micro: micro,\n    midast: midast,\n    midcir: midcir,\n    mid: mid,\n    middot: middot,\n    minusb: minusb,\n    minus: minus,\n    minusd: minusd,\n    minusdu: minusdu,\n    MinusPlus: MinusPlus,\n    mlcp: mlcp,\n    mldr: mldr,\n    mnplus: mnplus,\n    models: models,\n    Mopf: Mopf,\n    mopf: mopf,\n    mp: mp,\n    mscr: mscr,\n    Mscr: Mscr,\n    mstpos: mstpos,\n    Mu: Mu,\n    mu: mu,\n    multimap: multimap,\n    mumap: mumap,\n    nabla: nabla,\n    Nacute: Nacute,\n    nacute: nacute,\n    nang: nang,\n    nap: nap,\n    napE: napE,\n    napid: napid,\n    napos: napos,\n    napprox: napprox,\n    natural: natural,\n    naturals: naturals,\n    natur: natur,\n    nbsp: nbsp,\n    nbump: nbump,\n    nbumpe: nbumpe,\n    ncap: ncap,\n    Ncaron: Ncaron,\n    ncaron: ncaron,\n    Ncedil: Ncedil,\n    ncedil: ncedil,\n    ncong: ncong,\n    ncongdot: ncongdot,\n    ncup: ncup,\n    Ncy: Ncy,\n    ncy: ncy,\n    ndash: ndash,\n    nearhk: nearhk,\n    nearr: nearr,\n    neArr: neArr,\n    nearrow: nearrow,\n    ne: ne,\n    nedot: nedot,\n    NegativeMediumSpace: NegativeMediumSpace,\n    NegativeThickSpace: NegativeThickSpace,\n    NegativeThinSpace: NegativeThinSpace,\n    NegativeVeryThinSpace: NegativeVeryThinSpace,\n    nequiv: nequiv,\n    nesear: nesear,\n    nesim: nesim,\n    NestedGreaterGreater: NestedGreaterGreater,\n    NestedLessLess: NestedLessLess,\n    NewLine: NewLine,\n    nexist: nexist,\n    nexists: nexists,\n    Nfr: Nfr,\n    nfr: nfr,\n    ngE: ngE,\n    nge: nge,\n    ngeq: ngeq,\n    ngeqq: ngeqq,\n    ngeqslant: ngeqslant,\n    nges: nges,\n    nGg: nGg,\n    ngsim: ngsim,\n    nGt: nGt,\n    ngt: ngt,\n    ngtr: ngtr,\n    nGtv: nGtv,\n    nharr: nharr,\n    nhArr: nhArr,\n    nhpar: nhpar,\n    ni: ni,\n    nis: nis,\n    nisd: nisd,\n    niv: niv,\n    NJcy: NJcy,\n    njcy: njcy,\n    nlarr: nlarr,\n    nlArr: nlArr,\n    nldr: nldr,\n    nlE: nlE,\n    nle: nle,\n    nleftarrow: nleftarrow,\n    nLeftarrow: nLeftarrow,\n    nleftrightarrow: nleftrightarrow,\n    nLeftrightarrow: nLeftrightarrow,\n    nleq: nleq,\n    nleqq: nleqq,\n    nleqslant: nleqslant,\n    nles: nles,\n    nless: nless,\n    nLl: nLl,\n    nlsim: nlsim,\n    nLt: nLt,\n    nlt: nlt,\n    nltri: nltri,\n    nltrie: nltrie,\n    nLtv: nLtv,\n    nmid: nmid,\n    NoBreak: NoBreak,\n    NonBreakingSpace: NonBreakingSpace,\n    nopf: nopf,\n    Nopf: Nopf,\n    Not: Not,\n    not: not,\n    NotCongruent: NotCongruent,\n    NotCupCap: NotCupCap,\n    NotDoubleVerticalBar: NotDoubleVerticalBar,\n    NotElement: NotElement,\n    NotEqual: NotEqual,\n    NotEqualTilde: NotEqualTilde,\n    NotExists: NotExists,\n    NotGreater: NotGreater,\n    NotGreaterEqual: NotGreaterEqual,\n    NotGreaterFullEqual: NotGreaterFullEqual,\n    NotGreaterGreater: NotGreaterGreater,\n    NotGreaterLess: NotGreaterLess,\n    NotGreaterSlantEqual: NotGreaterSlantEqual,\n    NotGreaterTilde: NotGreaterTilde,\n    NotHumpDownHump: NotHumpDownHump,\n    NotHumpEqual: NotHumpEqual,\n    notin: notin,\n    notindot: notindot,\n    notinE: notinE,\n    notinva: notinva,\n    notinvb: notinvb,\n    notinvc: notinvc,\n    NotLeftTriangleBar: NotLeftTriangleBar,\n    NotLeftTriangle: NotLeftTriangle,\n    NotLeftTriangleEqual: NotLeftTriangleEqual,\n    NotLess: NotLess,\n    NotLessEqual: NotLessEqual,\n    NotLessGreater: NotLessGreater,\n    NotLessLess: NotLessLess,\n    NotLessSlantEqual: NotLessSlantEqual,\n    NotLessTilde: NotLessTilde,\n    NotNestedGreaterGreater: NotNestedGreaterGreater,\n    NotNestedLessLess: NotNestedLessLess,\n    notni: notni,\n    notniva: notniva,\n    notnivb: notnivb,\n    notnivc: notnivc,\n    NotPrecedes: NotPrecedes,\n    NotPrecedesEqual: NotPrecedesEqual,\n    NotPrecedesSlantEqual: NotPrecedesSlantEqual,\n    NotReverseElement: NotReverseElement,\n    NotRightTriangleBar: NotRightTriangleBar,\n    NotRightTriangle: NotRightTriangle,\n    NotRightTriangleEqual: NotRightTriangleEqual,\n    NotSquareSubset: NotSquareSubset,\n    NotSquareSubsetEqual: NotSquareSubsetEqual,\n    NotSquareSuperset: NotSquareSuperset,\n    NotSquareSupersetEqual: NotSquareSupersetEqual,\n    NotSubset: NotSubset,\n    NotSubsetEqual: NotSubsetEqual,\n    NotSucceeds: NotSucceeds,\n    NotSucceedsEqual: NotSucceedsEqual,\n    NotSucceedsSlantEqual: NotSucceedsSlantEqual,\n    NotSucceedsTilde: NotSucceedsTilde,\n    NotSuperset: NotSuperset,\n    NotSupersetEqual: NotSupersetEqual,\n    NotTilde: NotTilde,\n    NotTildeEqual: NotTildeEqual,\n    NotTildeFullEqual: NotTildeFullEqual,\n    NotTildeTilde: NotTildeTilde,\n    NotVerticalBar: NotVerticalBar,\n    nparallel: nparallel,\n    npar: npar,\n    nparsl: nparsl,\n    npart: npart,\n    npolint: npolint,\n    npr: npr,\n    nprcue: nprcue,\n    nprec: nprec,\n    npreceq: npreceq,\n    npre: npre,\n    nrarrc: nrarrc,\n    nrarr: nrarr,\n    nrArr: nrArr,\n    nrarrw: nrarrw,\n    nrightarrow: nrightarrow,\n    nRightarrow: nRightarrow,\n    nrtri: nrtri,\n    nrtrie: nrtrie,\n    nsc: nsc,\n    nsccue: nsccue,\n    nsce: nsce,\n    Nscr: Nscr,\n    nscr: nscr,\n    nshortmid: nshortmid,\n    nshortparallel: nshortparallel,\n    nsim: nsim,\n    nsime: nsime,\n    nsimeq: nsimeq,\n    nsmid: nsmid,\n    nspar: nspar,\n    nsqsube: nsqsube,\n    nsqsupe: nsqsupe,\n    nsub: nsub,\n    nsubE: nsubE,\n    nsube: nsube,\n    nsubset: nsubset,\n    nsubseteq: nsubseteq,\n    nsubseteqq: nsubseteqq,\n    nsucc: nsucc,\n    nsucceq: nsucceq,\n    nsup: nsup,\n    nsupE: nsupE,\n    nsupe: nsupe,\n    nsupset: nsupset,\n    nsupseteq: nsupseteq,\n    nsupseteqq: nsupseteqq,\n    ntgl: ntgl,\n    Ntilde: Ntilde,\n    ntilde: ntilde,\n    ntlg: ntlg,\n    ntriangleleft: ntriangleleft,\n    ntrianglelefteq: ntrianglelefteq,\n    ntriangleright: ntriangleright,\n    ntrianglerighteq: ntrianglerighteq,\n    Nu: Nu,\n    nu: nu,\n    num: num,\n    numero: numero,\n    numsp: numsp,\n    nvap: nvap,\n    nvdash: nvdash,\n    nvDash: nvDash,\n    nVdash: nVdash,\n    nVDash: nVDash,\n    nvge: nvge,\n    nvgt: nvgt,\n    nvHarr: nvHarr,\n    nvinfin: nvinfin,\n    nvlArr: nvlArr,\n    nvle: nvle,\n    nvlt: nvlt,\n    nvltrie: nvltrie,\n    nvrArr: nvrArr,\n    nvrtrie: nvrtrie,\n    nvsim: nvsim,\n    nwarhk: nwarhk,\n    nwarr: nwarr,\n    nwArr: nwArr,\n    nwarrow: nwarrow,\n    nwnear: nwnear,\n    Oacute: Oacute,\n    oacute: oacute,\n    oast: oast,\n    Ocirc: Ocirc,\n    ocirc: ocirc,\n    ocir: ocir,\n    Ocy: Ocy,\n    ocy: ocy,\n    odash: odash,\n    Odblac: Odblac,\n    odblac: odblac,\n    odiv: odiv,\n    odot: odot,\n    odsold: odsold,\n    OElig: OElig,\n    oelig: oelig,\n    ofcir: ofcir,\n    Ofr: Ofr,\n    ofr: ofr,\n    ogon: ogon,\n    Ograve: Ograve,\n    ograve: ograve,\n    ogt: ogt,\n    ohbar: ohbar,\n    ohm: ohm,\n    oint: oint,\n    olarr: olarr,\n    olcir: olcir,\n    olcross: olcross,\n    oline: oline,\n    olt: olt,\n    Omacr: Omacr,\n    omacr: omacr,\n    Omega: Omega,\n    omega: omega,\n    Omicron: Omicron,\n    omicron: omicron,\n    omid: omid,\n    ominus: ominus,\n    Oopf: Oopf,\n    oopf: oopf,\n    opar: opar,\n    OpenCurlyDoubleQuote: OpenCurlyDoubleQuote,\n    OpenCurlyQuote: OpenCurlyQuote,\n    operp: operp,\n    oplus: oplus,\n    orarr: orarr,\n    Or: Or,\n    or: or,\n    ord: ord,\n    order: order,\n    orderof: orderof,\n    ordf: ordf,\n    ordm: ordm,\n    origof: origof,\n    oror: oror,\n    orslope: orslope,\n    orv: orv,\n    oS: oS,\n    Oscr: Oscr,\n    oscr: oscr,\n    Oslash: Oslash,\n    oslash: oslash,\n    osol: osol,\n    Otilde: Otilde,\n    otilde: otilde,\n    otimesas: otimesas,\n    Otimes: Otimes,\n    otimes: otimes,\n    Ouml: Ouml,\n    ouml: ouml,\n    ovbar: ovbar,\n    OverBar: OverBar,\n    OverBrace: OverBrace,\n    OverBracket: OverBracket,\n    OverParenthesis: OverParenthesis,\n    para: para,\n    parallel: parallel,\n    par: par,\n    parsim: parsim,\n    parsl: parsl,\n    part: part,\n    PartialD: PartialD,\n    Pcy: Pcy,\n    pcy: pcy,\n    percnt: percnt,\n    period: period,\n    permil: permil,\n    perp: perp,\n    pertenk: pertenk,\n    Pfr: Pfr,\n    pfr: pfr,\n    Phi: Phi,\n    phi: phi,\n    phiv: phiv,\n    phmmat: phmmat,\n    phone: phone,\n    Pi: Pi,\n    pi: pi,\n    pitchfork: pitchfork,\n    piv: piv,\n    planck: planck,\n    planckh: planckh,\n    plankv: plankv,\n    plusacir: plusacir,\n    plusb: plusb,\n    pluscir: pluscir,\n    plus: plus,\n    plusdo: plusdo,\n    plusdu: plusdu,\n    pluse: pluse,\n    PlusMinus: PlusMinus,\n    plusmn: plusmn,\n    plussim: plussim,\n    plustwo: plustwo,\n    pm: pm,\n    Poincareplane: Poincareplane,\n    pointint: pointint,\n    popf: popf,\n    Popf: Popf,\n    pound: pound,\n    prap: prap,\n    Pr: Pr,\n    pr: pr,\n    prcue: prcue,\n    precapprox: precapprox,\n    prec: prec,\n    preccurlyeq: preccurlyeq,\n    Precedes: Precedes,\n    PrecedesEqual: PrecedesEqual,\n    PrecedesSlantEqual: PrecedesSlantEqual,\n    PrecedesTilde: PrecedesTilde,\n    preceq: preceq,\n    precnapprox: precnapprox,\n    precneqq: precneqq,\n    precnsim: precnsim,\n    pre: pre,\n    prE: prE,\n    precsim: precsim,\n    prime: prime,\n    Prime: Prime,\n    primes: primes,\n    prnap: prnap,\n    prnE: prnE,\n    prnsim: prnsim,\n    prod: prod,\n    Product: Product,\n    profalar: profalar,\n    profline: profline,\n    profsurf: profsurf,\n    prop: prop,\n    Proportional: Proportional,\n    Proportion: Proportion,\n    propto: propto,\n    prsim: prsim,\n    prurel: prurel,\n    Pscr: Pscr,\n    pscr: pscr,\n    Psi: Psi,\n    psi: psi,\n    puncsp: puncsp,\n    Qfr: Qfr,\n    qfr: qfr,\n    qint: qint,\n    qopf: qopf,\n    Qopf: Qopf,\n    qprime: qprime,\n    Qscr: Qscr,\n    qscr: qscr,\n    quaternions: quaternions,\n    quatint: quatint,\n    quest: quest,\n    questeq: questeq,\n    quot: quot,\n    QUOT: QUOT,\n    rAarr: rAarr,\n    race: race,\n    Racute: Racute,\n    racute: racute,\n    radic: radic,\n    raemptyv: raemptyv,\n    rang: rang,\n    Rang: Rang,\n    rangd: rangd,\n    range: range,\n    rangle: rangle,\n    raquo: raquo,\n    rarrap: rarrap,\n    rarrb: rarrb,\n    rarrbfs: rarrbfs,\n    rarrc: rarrc,\n    rarr: rarr,\n    Rarr: Rarr,\n    rArr: rArr,\n    rarrfs: rarrfs,\n    rarrhk: rarrhk,\n    rarrlp: rarrlp,\n    rarrpl: rarrpl,\n    rarrsim: rarrsim,\n    Rarrtl: Rarrtl,\n    rarrtl: rarrtl,\n    rarrw: rarrw,\n    ratail: ratail,\n    rAtail: rAtail,\n    ratio: ratio,\n    rationals: rationals,\n    rbarr: rbarr,\n    rBarr: rBarr,\n    RBarr: RBarr,\n    rbbrk: rbbrk,\n    rbrace: rbrace,\n    rbrack: rbrack,\n    rbrke: rbrke,\n    rbrksld: rbrksld,\n    rbrkslu: rbrkslu,\n    Rcaron: Rcaron,\n    rcaron: rcaron,\n    Rcedil: Rcedil,\n    rcedil: rcedil,\n    rceil: rceil,\n    rcub: rcub,\n    Rcy: Rcy,\n    rcy: rcy,\n    rdca: rdca,\n    rdldhar: rdldhar,\n    rdquo: rdquo,\n    rdquor: rdquor,\n    rdsh: rdsh,\n    real: real,\n    realine: realine,\n    realpart: realpart,\n    reals: reals,\n    Re: Re,\n    rect: rect,\n    reg: reg,\n    REG: REG,\n    ReverseElement: ReverseElement,\n    ReverseEquilibrium: ReverseEquilibrium,\n    ReverseUpEquilibrium: ReverseUpEquilibrium,\n    rfisht: rfisht,\n    rfloor: rfloor,\n    rfr: rfr,\n    Rfr: Rfr,\n    rHar: rHar,\n    rhard: rhard,\n    rharu: rharu,\n    rharul: rharul,\n    Rho: Rho,\n    rho: rho,\n    rhov: rhov,\n    RightAngleBracket: RightAngleBracket,\n    RightArrowBar: RightArrowBar,\n    rightarrow: rightarrow,\n    RightArrow: RightArrow,\n    Rightarrow: Rightarrow,\n    RightArrowLeftArrow: RightArrowLeftArrow,\n    rightarrowtail: rightarrowtail,\n    RightCeiling: RightCeiling,\n    RightDoubleBracket: RightDoubleBracket,\n    RightDownTeeVector: RightDownTeeVector,\n    RightDownVectorBar: RightDownVectorBar,\n    RightDownVector: RightDownVector,\n    RightFloor: RightFloor,\n    rightharpoondown: rightharpoondown,\n    rightharpoonup: rightharpoonup,\n    rightleftarrows: rightleftarrows,\n    rightleftharpoons: rightleftharpoons,\n    rightrightarrows: rightrightarrows,\n    rightsquigarrow: rightsquigarrow,\n    RightTeeArrow: RightTeeArrow,\n    RightTee: RightTee,\n    RightTeeVector: RightTeeVector,\n    rightthreetimes: rightthreetimes,\n    RightTriangleBar: RightTriangleBar,\n    RightTriangle: RightTriangle,\n    RightTriangleEqual: RightTriangleEqual,\n    RightUpDownVector: RightUpDownVector,\n    RightUpTeeVector: RightUpTeeVector,\n    RightUpVectorBar: RightUpVectorBar,\n    RightUpVector: RightUpVector,\n    RightVectorBar: RightVectorBar,\n    RightVector: RightVector,\n    ring: ring,\n    risingdotseq: risingdotseq,\n    rlarr: rlarr,\n    rlhar: rlhar,\n    rlm: rlm,\n    rmoustache: rmoustache,\n    rmoust: rmoust,\n    rnmid: rnmid,\n    roang: roang,\n    roarr: roarr,\n    robrk: robrk,\n    ropar: ropar,\n    ropf: ropf,\n    Ropf: Ropf,\n    roplus: roplus,\n    rotimes: rotimes,\n    RoundImplies: RoundImplies,\n    rpar: rpar,\n    rpargt: rpargt,\n    rppolint: rppolint,\n    rrarr: rrarr,\n    Rrightarrow: Rrightarrow,\n    rsaquo: rsaquo,\n    rscr: rscr,\n    Rscr: Rscr,\n    rsh: rsh,\n    Rsh: Rsh,\n    rsqb: rsqb,\n    rsquo: rsquo,\n    rsquor: rsquor,\n    rthree: rthree,\n    rtimes: rtimes,\n    rtri: rtri,\n    rtrie: rtrie,\n    rtrif: rtrif,\n    rtriltri: rtriltri,\n    RuleDelayed: RuleDelayed,\n    ruluhar: ruluhar,\n    rx: rx,\n    Sacute: Sacute,\n    sacute: sacute,\n    sbquo: sbquo,\n    scap: scap,\n    Scaron: Scaron,\n    scaron: scaron,\n    Sc: Sc,\n    sc: sc,\n    sccue: sccue,\n    sce: sce,\n    scE: scE,\n    Scedil: Scedil,\n    scedil: scedil,\n    Scirc: Scirc,\n    scirc: scirc,\n    scnap: scnap,\n    scnE: scnE,\n    scnsim: scnsim,\n    scpolint: scpolint,\n    scsim: scsim,\n    Scy: Scy,\n    scy: scy,\n    sdotb: sdotb,\n    sdot: sdot,\n    sdote: sdote,\n    searhk: searhk,\n    searr: searr,\n    seArr: seArr,\n    searrow: searrow,\n    sect: sect,\n    semi: semi,\n    seswar: seswar,\n    setminus: setminus,\n    setmn: setmn,\n    sext: sext,\n    Sfr: Sfr,\n    sfr: sfr,\n    sfrown: sfrown,\n    sharp: sharp,\n    SHCHcy: SHCHcy,\n    shchcy: shchcy,\n    SHcy: SHcy,\n    shcy: shcy,\n    ShortDownArrow: ShortDownArrow,\n    ShortLeftArrow: ShortLeftArrow,\n    shortmid: shortmid,\n    shortparallel: shortparallel,\n    ShortRightArrow: ShortRightArrow,\n    ShortUpArrow: ShortUpArrow,\n    shy: shy,\n    Sigma: Sigma,\n    sigma: sigma,\n    sigmaf: sigmaf,\n    sigmav: sigmav,\n    sim: sim,\n    simdot: simdot,\n    sime: sime,\n    simeq: simeq,\n    simg: simg,\n    simgE: simgE,\n    siml: siml,\n    simlE: simlE,\n    simne: simne,\n    simplus: simplus,\n    simrarr: simrarr,\n    slarr: slarr,\n    SmallCircle: SmallCircle,\n    smallsetminus: smallsetminus,\n    smashp: smashp,\n    smeparsl: smeparsl,\n    smid: smid,\n    smile: smile,\n    smt: smt,\n    smte: smte,\n    smtes: smtes,\n    SOFTcy: SOFTcy,\n    softcy: softcy,\n    solbar: solbar,\n    solb: solb,\n    sol: sol,\n    Sopf: Sopf,\n    sopf: sopf,\n    spades: spades,\n    spadesuit: spadesuit,\n    spar: spar,\n    sqcap: sqcap,\n    sqcaps: sqcaps,\n    sqcup: sqcup,\n    sqcups: sqcups,\n    Sqrt: Sqrt,\n    sqsub: sqsub,\n    sqsube: sqsube,\n    sqsubset: sqsubset,\n    sqsubseteq: sqsubseteq,\n    sqsup: sqsup,\n    sqsupe: sqsupe,\n    sqsupset: sqsupset,\n    sqsupseteq: sqsupseteq,\n    square: square,\n    Square: Square,\n    SquareIntersection: SquareIntersection,\n    SquareSubset: SquareSubset,\n    SquareSubsetEqual: SquareSubsetEqual,\n    SquareSuperset: SquareSuperset,\n    SquareSupersetEqual: SquareSupersetEqual,\n    SquareUnion: SquareUnion,\n    squarf: squarf,\n    squ: squ,\n    squf: squf,\n    srarr: srarr,\n    Sscr: Sscr,\n    sscr: sscr,\n    ssetmn: ssetmn,\n    ssmile: ssmile,\n    sstarf: sstarf,\n    Star: Star,\n    star: star,\n    starf: starf,\n    straightepsilon: straightepsilon,\n    straightphi: straightphi,\n    strns: strns,\n    sub: sub,\n    Sub: Sub,\n    subdot: subdot,\n    subE: subE,\n    sube: sube,\n    subedot: subedot,\n    submult: submult,\n    subnE: subnE,\n    subne: subne,\n    subplus: subplus,\n    subrarr: subrarr,\n    subset: subset,\n    Subset: Subset,\n    subseteq: subseteq,\n    subseteqq: subseteqq,\n    SubsetEqual: SubsetEqual,\n    subsetneq: subsetneq,\n    subsetneqq: subsetneqq,\n    subsim: subsim,\n    subsub: subsub,\n    subsup: subsup,\n    succapprox: succapprox,\n    succ: succ,\n    succcurlyeq: succcurlyeq,\n    Succeeds: Succeeds,\n    SucceedsEqual: SucceedsEqual,\n    SucceedsSlantEqual: SucceedsSlantEqual,\n    SucceedsTilde: SucceedsTilde,\n    succeq: succeq,\n    succnapprox: succnapprox,\n    succneqq: succneqq,\n    succnsim: succnsim,\n    succsim: succsim,\n    SuchThat: SuchThat,\n    sum: sum,\n    Sum: Sum,\n    sung: sung,\n    sup1: sup1,\n    sup2: sup2,\n    sup3: sup3,\n    sup: sup,\n    Sup: Sup,\n    supdot: supdot,\n    supdsub: supdsub,\n    supE: supE,\n    supe: supe,\n    supedot: supedot,\n    Superset: Superset,\n    SupersetEqual: SupersetEqual,\n    suphsol: suphsol,\n    suphsub: suphsub,\n    suplarr: suplarr,\n    supmult: supmult,\n    supnE: supnE,\n    supne: supne,\n    supplus: supplus,\n    supset: supset,\n    Supset: Supset,\n    supseteq: supseteq,\n    supseteqq: supseteqq,\n    supsetneq: supsetneq,\n    supsetneqq: supsetneqq,\n    supsim: supsim,\n    supsub: supsub,\n    supsup: supsup,\n    swarhk: swarhk,\n    swarr: swarr,\n    swArr: swArr,\n    swarrow: swarrow,\n    swnwar: swnwar,\n    szlig: szlig,\n    Tab: Tab,\n    target: target,\n    Tau: Tau,\n    tau: tau,\n    tbrk: tbrk,\n    Tcaron: Tcaron,\n    tcaron: tcaron,\n    Tcedil: Tcedil,\n    tcedil: tcedil,\n    Tcy: Tcy,\n    tcy: tcy,\n    tdot: tdot,\n    telrec: telrec,\n    Tfr: Tfr,\n    tfr: tfr,\n    there4: there4,\n    therefore: therefore,\n    Therefore: Therefore,\n    Theta: Theta,\n    theta: theta,\n    thetasym: thetasym,\n    thetav: thetav,\n    thickapprox: thickapprox,\n    thicksim: thicksim,\n    ThickSpace: ThickSpace,\n    ThinSpace: ThinSpace,\n    thinsp: thinsp,\n    thkap: thkap,\n    thksim: thksim,\n    THORN: THORN,\n    thorn: thorn,\n    tilde: tilde,\n    Tilde: Tilde,\n    TildeEqual: TildeEqual,\n    TildeFullEqual: TildeFullEqual,\n    TildeTilde: TildeTilde,\n    timesbar: timesbar,\n    timesb: timesb,\n    times: times,\n    timesd: timesd,\n    tint: tint,\n    toea: toea,\n    topbot: topbot,\n    topcir: topcir,\n    top: top,\n    Topf: Topf,\n    topf: topf,\n    topfork: topfork,\n    tosa: tosa,\n    tprime: tprime,\n    trade: trade,\n    TRADE: TRADE,\n    triangle: triangle,\n    triangledown: triangledown,\n    triangleleft: triangleleft,\n    trianglelefteq: trianglelefteq,\n    triangleq: triangleq,\n    triangleright: triangleright,\n    trianglerighteq: trianglerighteq,\n    tridot: tridot,\n    trie: trie,\n    triminus: triminus,\n    TripleDot: TripleDot,\n    triplus: triplus,\n    trisb: trisb,\n    tritime: tritime,\n    trpezium: trpezium,\n    Tscr: Tscr,\n    tscr: tscr,\n    TScy: TScy,\n    tscy: tscy,\n    TSHcy: TSHcy,\n    tshcy: tshcy,\n    Tstrok: Tstrok,\n    tstrok: tstrok,\n    twixt: twixt,\n    twoheadleftarrow: twoheadleftarrow,\n    twoheadrightarrow: twoheadrightarrow,\n    Uacute: Uacute,\n    uacute: uacute,\n    uarr: uarr,\n    Uarr: Uarr,\n    uArr: uArr,\n    Uarrocir: Uarrocir,\n    Ubrcy: Ubrcy,\n    ubrcy: ubrcy,\n    Ubreve: Ubreve,\n    ubreve: ubreve,\n    Ucirc: Ucirc,\n    ucirc: ucirc,\n    Ucy: Ucy,\n    ucy: ucy,\n    udarr: udarr,\n    Udblac: Udblac,\n    udblac: udblac,\n    udhar: udhar,\n    ufisht: ufisht,\n    Ufr: Ufr,\n    ufr: ufr,\n    Ugrave: Ugrave,\n    ugrave: ugrave,\n    uHar: uHar,\n    uharl: uharl,\n    uharr: uharr,\n    uhblk: uhblk,\n    ulcorn: ulcorn,\n    ulcorner: ulcorner,\n    ulcrop: ulcrop,\n    ultri: ultri,\n    Umacr: Umacr,\n    umacr: umacr,\n    uml: uml,\n    UnderBar: UnderBar,\n    UnderBrace: UnderBrace,\n    UnderBracket: UnderBracket,\n    UnderParenthesis: UnderParenthesis,\n    Union: Union,\n    UnionPlus: UnionPlus,\n    Uogon: Uogon,\n    uogon: uogon,\n    Uopf: Uopf,\n    uopf: uopf,\n    UpArrowBar: UpArrowBar,\n    uparrow: uparrow,\n    UpArrow: UpArrow,\n    Uparrow: Uparrow,\n    UpArrowDownArrow: UpArrowDownArrow,\n    updownarrow: updownarrow,\n    UpDownArrow: UpDownArrow,\n    Updownarrow: Updownarrow,\n    UpEquilibrium: UpEquilibrium,\n    upharpoonleft: upharpoonleft,\n    upharpoonright: upharpoonright,\n    uplus: uplus,\n    UpperLeftArrow: UpperLeftArrow,\n    UpperRightArrow: UpperRightArrow,\n    upsi: upsi,\n    Upsi: Upsi,\n    upsih: upsih,\n    Upsilon: Upsilon,\n    upsilon: upsilon,\n    UpTeeArrow: UpTeeArrow,\n    UpTee: UpTee,\n    upuparrows: upuparrows,\n    urcorn: urcorn,\n    urcorner: urcorner,\n    urcrop: urcrop,\n    Uring: Uring,\n    uring: uring,\n    urtri: urtri,\n    Uscr: Uscr,\n    uscr: uscr,\n    utdot: utdot,\n    Utilde: Utilde,\n    utilde: utilde,\n    utri: utri,\n    utrif: utrif,\n    uuarr: uuarr,\n    Uuml: Uuml,\n    uuml: uuml,\n    uwangle: uwangle,\n    vangrt: vangrt,\n    varepsilon: varepsilon,\n    varkappa: varkappa,\n    varnothing: varnothing,\n    varphi: varphi,\n    varpi: varpi,\n    varpropto: varpropto,\n    varr: varr,\n    vArr: vArr,\n    varrho: varrho,\n    varsigma: varsigma,\n    varsubsetneq: varsubsetneq,\n    varsubsetneqq: varsubsetneqq,\n    varsupsetneq: varsupsetneq,\n    varsupsetneqq: varsupsetneqq,\n    vartheta: vartheta,\n    vartriangleleft: vartriangleleft,\n    vartriangleright: vartriangleright,\n    vBar: vBar,\n    Vbar: Vbar,\n    vBarv: vBarv,\n    Vcy: Vcy,\n    vcy: vcy,\n    vdash: vdash,\n    vDash: vDash,\n    Vdash: Vdash,\n    VDash: VDash,\n    Vdashl: Vdashl,\n    veebar: veebar,\n    vee: vee,\n    Vee: Vee,\n    veeeq: veeeq,\n    vellip: vellip,\n    verbar: verbar,\n    Verbar: Verbar,\n    vert: vert,\n    Vert: Vert,\n    VerticalBar: VerticalBar,\n    VerticalLine: VerticalLine,\n    VerticalSeparator: VerticalSeparator,\n    VerticalTilde: VerticalTilde,\n    VeryThinSpace: VeryThinSpace,\n    Vfr: Vfr,\n    vfr: vfr,\n    vltri: vltri,\n    vnsub: vnsub,\n    vnsup: vnsup,\n    Vopf: Vopf,\n    vopf: vopf,\n    vprop: vprop,\n    vrtri: vrtri,\n    Vscr: Vscr,\n    vscr: vscr,\n    vsubnE: vsubnE,\n    vsubne: vsubne,\n    vsupnE: vsupnE,\n    vsupne: vsupne,\n    Vvdash: Vvdash,\n    vzigzag: vzigzag,\n    Wcirc: Wcirc,\n    wcirc: wcirc,\n    wedbar: wedbar,\n    wedge: wedge,\n    Wedge: Wedge,\n    wedgeq: wedgeq,\n    weierp: weierp,\n    Wfr: Wfr,\n    wfr: wfr,\n    Wopf: Wopf,\n    wopf: wopf,\n    wp: wp,\n    wr: wr,\n    wreath: wreath,\n    Wscr: Wscr,\n    wscr: wscr,\n    xcap: xcap,\n    xcirc: xcirc,\n    xcup: xcup,\n    xdtri: xdtri,\n    Xfr: Xfr,\n    xfr: xfr,\n    xharr: xharr,\n    xhArr: xhArr,\n    Xi: Xi,\n    xi: xi,\n    xlarr: xlarr,\n    xlArr: xlArr,\n    xmap: xmap,\n    xnis: xnis,\n    xodot: xodot,\n    Xopf: Xopf,\n    xopf: xopf,\n    xoplus: xoplus,\n    xotime: xotime,\n    xrarr: xrarr,\n    xrArr: xrArr,\n    Xscr: Xscr,\n    xscr: xscr,\n    xsqcup: xsqcup,\n    xuplus: xuplus,\n    xutri: xutri,\n    xvee: xvee,\n    xwedge: xwedge,\n    Yacute: Yacute,\n    yacute: yacute,\n    YAcy: YAcy,\n    yacy: yacy,\n    Ycirc: Ycirc,\n    ycirc: ycirc,\n    Ycy: Ycy,\n    ycy: ycy,\n    yen: yen,\n    Yfr: Yfr,\n    yfr: yfr,\n    YIcy: YIcy,\n    yicy: yicy,\n    Yopf: Yopf,\n    yopf: yopf,\n    Yscr: Yscr,\n    yscr: yscr,\n    YUcy: YUcy,\n    yucy: yucy,\n    yuml: yuml,\n    Yuml: Yuml,\n    Zacute: Zacute,\n    zacute: zacute,\n    Zcaron: Zcaron,\n    zcaron: zcaron,\n    Zcy: Zcy,\n    zcy: zcy,\n    Zdot: Zdot,\n    zdot: zdot,\n    zeetrf: zeetrf,\n    ZeroWidthSpace: ZeroWidthSpace,\n    Zeta: Zeta,\n    zeta: zeta,\n    zfr: zfr,\n    Zfr: Zfr,\n    ZHcy: ZHcy,\n    zhcy: zhcy,\n    zigrarr: zigrarr,\n    zopf: zopf,\n    Zopf: Zopf,\n    Zscr: Zscr,\n    zscr: zscr,\n    zwj: zwj,\n    zwnj: zwnj,\n    'default': entities\n  };\n  var Aacute$1 = \"Á\";\n  var aacute$1 = \"á\";\n  var Acirc$1 = \"Â\";\n  var acirc$1 = \"â\";\n  var acute$1 = \"´\";\n  var AElig$1 = \"Æ\";\n  var aelig$1 = \"æ\";\n  var Agrave$1 = \"À\";\n  var agrave$1 = \"à\";\n  var amp$1 = \"&\";\n  var AMP$1 = \"&\";\n  var Aring$1 = \"Å\";\n  var aring$1 = \"å\";\n  var Atilde$1 = \"Ã\";\n  var atilde$1 = \"ã\";\n  var Auml$1 = \"Ä\";\n  var auml$1 = \"ä\";\n  var brvbar$1 = \"¦\";\n  var Ccedil$1 = \"Ç\";\n  var ccedil$1 = \"ç\";\n  var cedil$1 = \"¸\";\n  var cent$1 = \"¢\";\n  var copy$1 = \"©\";\n  var COPY$1 = \"©\";\n  var curren$1 = \"¤\";\n  var deg$1 = \"°\";\n  var divide$1 = \"÷\";\n  var Eacute$1 = \"É\";\n  var eacute$1 = \"é\";\n  var Ecirc$1 = \"Ê\";\n  var ecirc$1 = \"ê\";\n  var Egrave$1 = \"È\";\n  var egrave$1 = \"è\";\n  var ETH$1 = \"Ð\";\n  var eth$1 = \"ð\";\n  var Euml$1 = \"Ë\";\n  var euml$1 = \"ë\";\n  var frac12$1 = \"½\";\n  var frac14$1 = \"¼\";\n  var frac34$1 = \"¾\";\n  var gt$1 = \">\";\n  var GT$1 = \">\";\n  var Iacute$1 = \"Í\";\n  var iacute$1 = \"í\";\n  var Icirc$1 = \"Î\";\n  var icirc$1 = \"î\";\n  var iexcl$1 = \"¡\";\n  var Igrave$1 = \"Ì\";\n  var igrave$1 = \"ì\";\n  var iquest$1 = \"¿\";\n  var Iuml$1 = \"Ï\";\n  var iuml$1 = \"ï\";\n  var laquo$1 = \"«\";\n  var lt$1 = \"<\";\n  var LT$1 = \"<\";\n  var macr$1 = \"¯\";\n  var micro$1 = \"µ\";\n  var middot$1 = \"·\";\n  var nbsp$1 = \" \";\n  var not$1 = \"¬\";\n  var Ntilde$1 = \"Ñ\";\n  var ntilde$1 = \"ñ\";\n  var Oacute$1 = \"Ó\";\n  var oacute$1 = \"ó\";\n  var Ocirc$1 = \"Ô\";\n  var ocirc$1 = \"ô\";\n  var Ograve$1 = \"Ò\";\n  var ograve$1 = \"ò\";\n  var ordf$1 = \"ª\";\n  var ordm$1 = \"º\";\n  var Oslash$1 = \"Ø\";\n  var oslash$1 = \"ø\";\n  var Otilde$1 = \"Õ\";\n  var otilde$1 = \"õ\";\n  var Ouml$1 = \"Ö\";\n  var ouml$1 = \"ö\";\n  var para$1 = \"¶\";\n  var plusmn$1 = \"±\";\n  var pound$1 = \"£\";\n  var quot$1 = \"\\\"\";\n  var QUOT$1 = \"\\\"\";\n  var raquo$1 = \"»\";\n  var reg$1 = \"®\";\n  var REG$1 = \"®\";\n  var sect$1 = \"§\";\n  var shy$1 = \"­\";\n  var sup1$1 = \"¹\";\n  var sup2$1 = \"²\";\n  var sup3$1 = \"³\";\n  var szlig$1 = \"ß\";\n  var THORN$1 = \"Þ\";\n  var thorn$1 = \"þ\";\n  var times$1 = \"×\";\n  var Uacute$1 = \"Ú\";\n  var uacute$1 = \"ú\";\n  var Ucirc$1 = \"Û\";\n  var ucirc$1 = \"û\";\n  var Ugrave$1 = \"Ù\";\n  var ugrave$1 = \"ù\";\n  var uml$1 = \"¨\";\n  var Uuml$1 = \"Ü\";\n  var uuml$1 = \"ü\";\n  var Yacute$1 = \"Ý\";\n  var yacute$1 = \"ý\";\n  var yen$1 = \"¥\";\n  var yuml$1 = \"ÿ\";\n  var legacy = {\n    Aacute: Aacute$1,\n    aacute: aacute$1,\n    Acirc: Acirc$1,\n    acirc: acirc$1,\n    acute: acute$1,\n    AElig: AElig$1,\n    aelig: aelig$1,\n    Agrave: Agrave$1,\n    agrave: agrave$1,\n    amp: amp$1,\n    AMP: AMP$1,\n    Aring: Aring$1,\n    aring: aring$1,\n    Atilde: Atilde$1,\n    atilde: atilde$1,\n    Auml: Auml$1,\n    auml: auml$1,\n    brvbar: brvbar$1,\n    Ccedil: Ccedil$1,\n    ccedil: ccedil$1,\n    cedil: cedil$1,\n    cent: cent$1,\n    copy: copy$1,\n    COPY: COPY$1,\n    curren: curren$1,\n    deg: deg$1,\n    divide: divide$1,\n    Eacute: Eacute$1,\n    eacute: eacute$1,\n    Ecirc: Ecirc$1,\n    ecirc: ecirc$1,\n    Egrave: Egrave$1,\n    egrave: egrave$1,\n    ETH: ETH$1,\n    eth: eth$1,\n    Euml: Euml$1,\n    euml: euml$1,\n    frac12: frac12$1,\n    frac14: frac14$1,\n    frac34: frac34$1,\n    gt: gt$1,\n    GT: GT$1,\n    Iacute: Iacute$1,\n    iacute: iacute$1,\n    Icirc: Icirc$1,\n    icirc: icirc$1,\n    iexcl: iexcl$1,\n    Igrave: Igrave$1,\n    igrave: igrave$1,\n    iquest: iquest$1,\n    Iuml: Iuml$1,\n    iuml: iuml$1,\n    laquo: laquo$1,\n    lt: lt$1,\n    LT: LT$1,\n    macr: macr$1,\n    micro: micro$1,\n    middot: middot$1,\n    nbsp: nbsp$1,\n    not: not$1,\n    Ntilde: Ntilde$1,\n    ntilde: ntilde$1,\n    Oacute: Oacute$1,\n    oacute: oacute$1,\n    Ocirc: Ocirc$1,\n    ocirc: ocirc$1,\n    Ograve: Ograve$1,\n    ograve: ograve$1,\n    ordf: ordf$1,\n    ordm: ordm$1,\n    Oslash: Oslash$1,\n    oslash: oslash$1,\n    Otilde: Otilde$1,\n    otilde: otilde$1,\n    Ouml: Ouml$1,\n    ouml: ouml$1,\n    para: para$1,\n    plusmn: plusmn$1,\n    pound: pound$1,\n    quot: quot$1,\n    QUOT: QUOT$1,\n    raquo: raquo$1,\n    reg: reg$1,\n    REG: REG$1,\n    sect: sect$1,\n    shy: shy$1,\n    sup1: sup1$1,\n    sup2: sup2$1,\n    sup3: sup3$1,\n    szlig: szlig$1,\n    THORN: THORN$1,\n    thorn: thorn$1,\n    times: times$1,\n    Uacute: Uacute$1,\n    uacute: uacute$1,\n    Ucirc: Ucirc$1,\n    ucirc: ucirc$1,\n    Ugrave: Ugrave$1,\n    ugrave: ugrave$1,\n    uml: uml$1,\n    Uuml: Uuml$1,\n    uuml: uuml$1,\n    Yacute: Yacute$1,\n    yacute: yacute$1,\n    yen: yen$1,\n    yuml: yuml$1\n  };\n  var legacy$1 = {\n    __proto__: null,\n    Aacute: Aacute$1,\n    aacute: aacute$1,\n    Acirc: Acirc$1,\n    acirc: acirc$1,\n    acute: acute$1,\n    AElig: AElig$1,\n    aelig: aelig$1,\n    Agrave: Agrave$1,\n    agrave: agrave$1,\n    amp: amp$1,\n    AMP: AMP$1,\n    Aring: Aring$1,\n    aring: aring$1,\n    Atilde: Atilde$1,\n    atilde: atilde$1,\n    Auml: Auml$1,\n    auml: auml$1,\n    brvbar: brvbar$1,\n    Ccedil: Ccedil$1,\n    ccedil: ccedil$1,\n    cedil: cedil$1,\n    cent: cent$1,\n    copy: copy$1,\n    COPY: COPY$1,\n    curren: curren$1,\n    deg: deg$1,\n    divide: divide$1,\n    Eacute: Eacute$1,\n    eacute: eacute$1,\n    Ecirc: Ecirc$1,\n    ecirc: ecirc$1,\n    Egrave: Egrave$1,\n    egrave: egrave$1,\n    ETH: ETH$1,\n    eth: eth$1,\n    Euml: Euml$1,\n    euml: euml$1,\n    frac12: frac12$1,\n    frac14: frac14$1,\n    frac34: frac34$1,\n    gt: gt$1,\n    GT: GT$1,\n    Iacute: Iacute$1,\n    iacute: iacute$1,\n    Icirc: Icirc$1,\n    icirc: icirc$1,\n    iexcl: iexcl$1,\n    Igrave: Igrave$1,\n    igrave: igrave$1,\n    iquest: iquest$1,\n    Iuml: Iuml$1,\n    iuml: iuml$1,\n    laquo: laquo$1,\n    lt: lt$1,\n    LT: LT$1,\n    macr: macr$1,\n    micro: micro$1,\n    middot: middot$1,\n    nbsp: nbsp$1,\n    not: not$1,\n    Ntilde: Ntilde$1,\n    ntilde: ntilde$1,\n    Oacute: Oacute$1,\n    oacute: oacute$1,\n    Ocirc: Ocirc$1,\n    ocirc: ocirc$1,\n    Ograve: Ograve$1,\n    ograve: ograve$1,\n    ordf: ordf$1,\n    ordm: ordm$1,\n    Oslash: Oslash$1,\n    oslash: oslash$1,\n    Otilde: Otilde$1,\n    otilde: otilde$1,\n    Ouml: Ouml$1,\n    ouml: ouml$1,\n    para: para$1,\n    plusmn: plusmn$1,\n    pound: pound$1,\n    quot: quot$1,\n    QUOT: QUOT$1,\n    raquo: raquo$1,\n    reg: reg$1,\n    REG: REG$1,\n    sect: sect$1,\n    shy: shy$1,\n    sup1: sup1$1,\n    sup2: sup2$1,\n    sup3: sup3$1,\n    szlig: szlig$1,\n    THORN: THORN$1,\n    thorn: thorn$1,\n    times: times$1,\n    Uacute: Uacute$1,\n    uacute: uacute$1,\n    Ucirc: Ucirc$1,\n    ucirc: ucirc$1,\n    Ugrave: Ugrave$1,\n    ugrave: ugrave$1,\n    uml: uml$1,\n    Uuml: Uuml$1,\n    uuml: uuml$1,\n    Yacute: Yacute$1,\n    yacute: yacute$1,\n    yen: yen$1,\n    yuml: yuml$1,\n    'default': legacy\n  };\n  var amp$2 = \"&\";\n  var apos$1 = \"'\";\n  var gt$2 = \">\";\n  var lt$2 = \"<\";\n  var quot$2 = \"\\\"\";\n  var xml = {\n    amp: amp$2,\n    apos: apos$1,\n    gt: gt$2,\n    lt: lt$2,\n    quot: quot$2\n  };\n  var xml$1 = {\n    __proto__: null,\n    amp: amp$2,\n    apos: apos$1,\n    gt: gt$2,\n    lt: lt$2,\n    quot: quot$2,\n    'default': xml\n  };\n  var decode = {\n    \"0\": 65533,\n    \"128\": 8364,\n    \"130\": 8218,\n    \"131\": 402,\n    \"132\": 8222,\n    \"133\": 8230,\n    \"134\": 8224,\n    \"135\": 8225,\n    \"136\": 710,\n    \"137\": 8240,\n    \"138\": 352,\n    \"139\": 8249,\n    \"140\": 338,\n    \"142\": 381,\n    \"145\": 8216,\n    \"146\": 8217,\n    \"147\": 8220,\n    \"148\": 8221,\n    \"149\": 8226,\n    \"150\": 8211,\n    \"151\": 8212,\n    \"152\": 732,\n    \"153\": 8482,\n    \"154\": 353,\n    \"155\": 8250,\n    \"156\": 339,\n    \"158\": 382,\n    \"159\": 376\n  };\n  var decode$1 = {\n    __proto__: null,\n    'default': decode\n  };\n  var require$$0 = getCjsExportFromNamespace(decode$1);\n  var decode_codepoint = createCommonjsModule(function (module, exports) {\n    var __importDefault = commonjsGlobal && commonjsGlobal.__importDefault || function (mod) {\n      return mod && mod.__esModule ? mod : {\n        \"default\": mod\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n\n    var decode_json_1 = __importDefault(require$$0); // modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\n\n\n    function decodeCodePoint(codePoint) {\n      if (codePoint >= 0xd800 && codePoint <= 0xdfff || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n      }\n\n      if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n      }\n\n      var output = \"\";\n\n      if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(codePoint >>> 10 & 0x3ff | 0xd800);\n        codePoint = 0xdc00 | codePoint & 0x3ff;\n      }\n\n      output += String.fromCharCode(codePoint);\n      return output;\n    }\n\n    exports.default = decodeCodePoint;\n  });\n  var require$$1 = getCjsExportFromNamespace(entities$1);\n  var require$$1$1 = getCjsExportFromNamespace(legacy$1);\n  var require$$0$1 = getCjsExportFromNamespace(xml$1);\n  var decode$2 = createCommonjsModule(function (module, exports) {\n    var __importDefault = commonjsGlobal && commonjsGlobal.__importDefault || function (mod) {\n      return mod && mod.__esModule ? mod : {\n        \"default\": mod\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\n\n    var entities_json_1 = __importDefault(require$$1);\n\n    var legacy_json_1 = __importDefault(require$$1$1);\n\n    var xml_json_1 = __importDefault(require$$0$1);\n\n    var decode_codepoint_1 = __importDefault(decode_codepoint);\n\n    exports.decodeXML = getStrictDecoder(xml_json_1.default);\n    exports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\n\n    function getStrictDecoder(map) {\n      var keys = Object.keys(map).join(\"|\");\n      var replace = getReplacer(map);\n      keys += \"|#[xX][\\\\da-fA-F]+|#\\\\d+\";\n      var re = new RegExp(\"&(?:\" + keys + \");\", \"g\");\n      return function (str) {\n        return String(str).replace(re, replace);\n      };\n    }\n\n    var sorter = function sorter(a, b) {\n      return a < b ? 1 : -1;\n    };\n\n    exports.decodeHTML = function () {\n      var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n      var keys = Object.keys(entities_json_1.default).sort(sorter);\n\n      for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n          keys[i] += \";?\";\n          j++;\n        } else {\n          keys[i] += \";\";\n        }\n      }\n\n      var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n      var replace = getReplacer(entities_json_1.default);\n\n      function replacer(str) {\n        if (str.substr(-1) !== \";\") str += \";\";\n        return replace(str);\n      } //TODO consider creating a merged map\n\n\n      return function (str) {\n        return String(str).replace(re, replacer);\n      };\n    }();\n\n    function getReplacer(map) {\n      return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n          var secondChar = str.charAt(2);\n\n          if (secondChar === \"X\" || secondChar === \"x\") {\n            return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n          }\n\n          return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n\n        return map[str.slice(1, -1)];\n      };\n    }\n  });\n  var encode = createCommonjsModule(function (module, exports) {\n    var __importDefault = commonjsGlobal && commonjsGlobal.__importDefault || function (mod) {\n      return mod && mod.__esModule ? mod : {\n        \"default\": mod\n      };\n    };\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.escape = exports.encodeHTML = exports.encodeXML = void 0;\n\n    var xml_json_1 = __importDefault(require$$0$1);\n\n    var inverseXML = getInverseObj(xml_json_1.default);\n    var xmlReplacer = getInverseReplacer(inverseXML);\n    exports.encodeXML = getInverse(inverseXML, xmlReplacer);\n\n    var entities_json_1 = __importDefault(require$$1);\n\n    var inverseHTML = getInverseObj(entities_json_1.default);\n    var htmlReplacer = getInverseReplacer(inverseHTML);\n    exports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n\n    function getInverseObj(obj) {\n      return Object.keys(obj).sort().reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n      }, {});\n    }\n\n    function getInverseReplacer(inverse) {\n      var single = [];\n      var multiple = [];\n\n      for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n\n        if (k.length === 1) {\n          // Add value to single array\n          single.push(\"\\\\\" + k);\n        } else {\n          // Add value to multiple array\n          multiple.push(k);\n        }\n      } // Add ranges to single characters.\n\n\n      single.sort();\n\n      for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n\n        while (end < single.length - 1 && single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n          end += 1;\n        }\n\n        var count = 1 + end - start; // We want to replace at least three characters\n\n        if (count < 3) continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n      }\n\n      multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n      return new RegExp(multiple.join(\"|\"), \"g\");\n    }\n\n    var reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\n\n    function singleCharReplacer(c) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return \"&#x\" + c.codePointAt(0).toString(16).toUpperCase() + \";\";\n    }\n\n    function getInverse(inverse, re) {\n      return function (data) {\n        return data.replace(re, function (name) {\n          return inverse[name];\n        }).replace(reNonASCII, singleCharReplacer);\n      };\n    }\n\n    var reXmlChars = getInverseReplacer(inverseXML);\n\n    function escape(data) {\n      return data.replace(reXmlChars, singleCharReplacer).replace(reNonASCII, singleCharReplacer);\n    }\n\n    exports.escape = escape;\n  });\n  var lib$1 = createCommonjsModule(function (module, exports) {\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.encode = exports.decodeStrict = exports.decode = void 0;\n    /**\n     * Decodes a string with entities.\n     *\n     * @param data String to decode.\n     * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n     */\n\n    function decode(data, level) {\n      return (!level || level <= 0 ? decode$2.decodeXML : decode$2.decodeHTML)(data);\n    }\n\n    exports.decode = decode;\n    /**\n     * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n     *\n     * @param data String to decode.\n     * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n     */\n\n    function decodeStrict(data, level) {\n      return (!level || level <= 0 ? decode$2.decodeXML : decode$2.decodeHTMLStrict)(data);\n    }\n\n    exports.decodeStrict = decodeStrict;\n    /**\n     * Encodes a string with entities.\n     *\n     * @param data String to encode.\n     * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n     */\n\n    function encode$1(data, level) {\n      return (!level || level <= 0 ? encode.encodeXML : encode.encodeHTML)(data);\n    }\n\n    exports.encode = encode$1;\n    var encode_2 = encode;\n    Object.defineProperty(exports, \"encodeXML\", {\n      enumerable: true,\n      get: function get() {\n        return encode_2.encodeXML;\n      }\n    });\n    Object.defineProperty(exports, \"encodeHTML\", {\n      enumerable: true,\n      get: function get() {\n        return encode_2.encodeHTML;\n      }\n    });\n    Object.defineProperty(exports, \"escape\", {\n      enumerable: true,\n      get: function get() {\n        return encode_2.escape;\n      }\n    }); // Legacy aliases\n\n    Object.defineProperty(exports, \"encodeHTML4\", {\n      enumerable: true,\n      get: function get() {\n        return encode_2.encodeHTML;\n      }\n    });\n    Object.defineProperty(exports, \"encodeHTML5\", {\n      enumerable: true,\n      get: function get() {\n        return encode_2.encodeHTML;\n      }\n    });\n    var decode_2 = decode$2;\n    Object.defineProperty(exports, \"decodeXML\", {\n      enumerable: true,\n      get: function get() {\n        return decode_2.decodeXML;\n      }\n    });\n    Object.defineProperty(exports, \"decodeHTML\", {\n      enumerable: true,\n      get: function get() {\n        return decode_2.decodeHTML;\n      }\n    });\n    Object.defineProperty(exports, \"decodeHTMLStrict\", {\n      enumerable: true,\n      get: function get() {\n        return decode_2.decodeHTMLStrict;\n      }\n    }); // Legacy aliases\n\n    Object.defineProperty(exports, \"decodeHTML4\", {\n      enumerable: true,\n      get: function get() {\n        return decode_2.decodeHTML;\n      }\n    });\n    Object.defineProperty(exports, \"decodeHTML5\", {\n      enumerable: true,\n      get: function get() {\n        return decode_2.decodeHTML;\n      }\n    });\n    Object.defineProperty(exports, \"decodeHTML4Strict\", {\n      enumerable: true,\n      get: function get() {\n        return decode_2.decodeHTMLStrict;\n      }\n    });\n    Object.defineProperty(exports, \"decodeHTML5Strict\", {\n      enumerable: true,\n      get: function get() {\n        return decode_2.decodeHTMLStrict;\n      }\n    });\n    Object.defineProperty(exports, \"decodeXMLStrict\", {\n      enumerable: true,\n      get: function get() {\n        return decode_2.decodeXML;\n      }\n    });\n  });\n  var elementNames = {\n    altglyph: \"altGlyph\",\n    altglyphdef: \"altGlyphDef\",\n    altglyphitem: \"altGlyphItem\",\n    animatecolor: \"animateColor\",\n    animatemotion: \"animateMotion\",\n    animatetransform: \"animateTransform\",\n    clippath: \"clipPath\",\n    feblend: \"feBlend\",\n    fecolormatrix: \"feColorMatrix\",\n    fecomponenttransfer: \"feComponentTransfer\",\n    fecomposite: \"feComposite\",\n    feconvolvematrix: \"feConvolveMatrix\",\n    fediffuselighting: \"feDiffuseLighting\",\n    fedisplacementmap: \"feDisplacementMap\",\n    fedistantlight: \"feDistantLight\",\n    fedropshadow: \"feDropShadow\",\n    feflood: \"feFlood\",\n    fefunca: \"feFuncA\",\n    fefuncb: \"feFuncB\",\n    fefuncg: \"feFuncG\",\n    fefuncr: \"feFuncR\",\n    fegaussianblur: \"feGaussianBlur\",\n    feimage: \"feImage\",\n    femerge: \"feMerge\",\n    femergenode: \"feMergeNode\",\n    femorphology: \"feMorphology\",\n    feoffset: \"feOffset\",\n    fepointlight: \"fePointLight\",\n    fespecularlighting: \"feSpecularLighting\",\n    fespotlight: \"feSpotLight\",\n    fetile: \"feTile\",\n    feturbulence: \"feTurbulence\",\n    foreignobject: \"foreignObject\",\n    glyphref: \"glyphRef\",\n    lineargradient: \"linearGradient\",\n    radialgradient: \"radialGradient\",\n    textpath: \"textPath\"\n  };\n  var attributeNames = {\n    definitionurl: \"definitionURL\",\n    attributename: \"attributeName\",\n    attributetype: \"attributeType\",\n    basefrequency: \"baseFrequency\",\n    baseprofile: \"baseProfile\",\n    calcmode: \"calcMode\",\n    clippathunits: \"clipPathUnits\",\n    diffuseconstant: \"diffuseConstant\",\n    edgemode: \"edgeMode\",\n    filterunits: \"filterUnits\",\n    glyphref: \"glyphRef\",\n    gradienttransform: \"gradientTransform\",\n    gradientunits: \"gradientUnits\",\n    kernelmatrix: \"kernelMatrix\",\n    kernelunitlength: \"kernelUnitLength\",\n    keypoints: \"keyPoints\",\n    keysplines: \"keySplines\",\n    keytimes: \"keyTimes\",\n    lengthadjust: \"lengthAdjust\",\n    limitingconeangle: \"limitingConeAngle\",\n    markerheight: \"markerHeight\",\n    markerunits: \"markerUnits\",\n    markerwidth: \"markerWidth\",\n    maskcontentunits: \"maskContentUnits\",\n    maskunits: \"maskUnits\",\n    numoctaves: \"numOctaves\",\n    pathlength: \"pathLength\",\n    patterncontentunits: \"patternContentUnits\",\n    patterntransform: \"patternTransform\",\n    patternunits: \"patternUnits\",\n    pointsatx: \"pointsAtX\",\n    pointsaty: \"pointsAtY\",\n    pointsatz: \"pointsAtZ\",\n    preservealpha: \"preserveAlpha\",\n    preserveaspectratio: \"preserveAspectRatio\",\n    primitiveunits: \"primitiveUnits\",\n    refx: \"refX\",\n    refy: \"refY\",\n    repeatcount: \"repeatCount\",\n    repeatdur: \"repeatDur\",\n    requiredextensions: \"requiredExtensions\",\n    requiredfeatures: \"requiredFeatures\",\n    specularconstant: \"specularConstant\",\n    specularexponent: \"specularExponent\",\n    spreadmethod: \"spreadMethod\",\n    startoffset: \"startOffset\",\n    stddeviation: \"stdDeviation\",\n    stitchtiles: \"stitchTiles\",\n    surfacescale: \"surfaceScale\",\n    systemlanguage: \"systemLanguage\",\n    tablevalues: \"tableValues\",\n    targetx: \"targetX\",\n    targety: \"targetY\",\n    textlength: \"textLength\",\n    viewbox: \"viewBox\",\n    viewtarget: \"viewTarget\",\n    xchannelselector: \"xChannelSelector\",\n    ychannelselector: \"yChannelSelector\",\n    zoomandpan: \"zoomAndPan\"\n  };\n  var foreignNames = {\n    elementNames: elementNames,\n    attributeNames: attributeNames\n  };\n  var foreignNames$1 = {\n    __proto__: null,\n    elementNames: elementNames,\n    attributeNames: attributeNames,\n    'default': foreignNames\n  };\n  var foreignNames$2 = getCjsExportFromNamespace(foreignNames$1);\n  var domSerializer = createCommonjsModule(function (module) {\n    /*\n      Module dependencies\n    */\n\n    /* mixed-case SVG and MathML tags & attributes\n       recognized by the HTML parser, see\n       https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n    */\n    foreignNames$2.elementNames.__proto__ = null;\n    /* use as a simple dictionary */\n\n    foreignNames$2.attributeNames.__proto__ = null;\n    var unencodedElements = {\n      __proto__: null,\n      style: true,\n      script: true,\n      xmp: true,\n      iframe: true,\n      noembed: true,\n      noframes: true,\n      plaintext: true,\n      noscript: true\n    };\n    /*\n      Format attributes\n    */\n\n    function formatAttrs(attributes, opts) {\n      if (!attributes) return;\n      var output = '';\n      var value; // Loop through the attributes\n\n      for (var key in attributes) {\n        value = attributes[key];\n\n        if (output) {\n          output += ' ';\n        }\n\n        if (opts.xmlMode === 'foreign') {\n          /* fix up mixed-case attribute names */\n          key = foreignNames$2.attributeNames[key] || key;\n        }\n\n        output += key;\n\n        if (value !== null && value !== '' || opts.xmlMode) {\n          output += '=\"' + (opts.decodeEntities ? lib$1.encodeXML(value) : value.replace(/\\\"/g, '&quot;')) + '\"';\n        }\n      }\n\n      return output;\n    }\n    /*\n      Self-enclosing tags (stolen from node-htmlparser)\n    */\n\n\n    var singleTag = {\n      __proto__: null,\n      area: true,\n      base: true,\n      basefont: true,\n      br: true,\n      col: true,\n      command: true,\n      embed: true,\n      frame: true,\n      hr: true,\n      img: true,\n      input: true,\n      isindex: true,\n      keygen: true,\n      link: true,\n      meta: true,\n      param: true,\n      source: true,\n      track: true,\n      wbr: true\n    };\n\n    var render = module.exports = function (dom, opts) {\n      if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];\n      opts = opts || {};\n      var output = '';\n\n      for (var i = 0; i < dom.length; i++) {\n        var elem = dom[i];\n        if (elem.type === 'root') output += render(elem.children, opts);else if (lib.isTag(elem)) output += renderTag(elem, opts);else if (elem.type === lib.Directive) output += renderDirective(elem);else if (elem.type === lib.Comment) output += renderComment(elem);else if (elem.type === lib.CDATA) output += renderCdata(elem);else output += renderText(elem, opts);\n      }\n\n      return output;\n    };\n\n    var foreignModeIntegrationPoints = ['mi', 'mo', 'mn', 'ms', 'mtext', 'annotation-xml', 'foreignObject', 'desc', 'title'];\n\n    function renderTag(elem, opts) {\n      // Handle SVG / MathML in HTML\n      if (opts.xmlMode === 'foreign') {\n        /* fix up mixed-case element names */\n        elem.name = foreignNames$2.elementNames[elem.name] || elem.name;\n        /* exit foreign mode at integration points */\n\n        if (elem.parent && foreignModeIntegrationPoints.indexOf(elem.parent.name) >= 0) opts = Object.assign({}, opts, {\n          xmlMode: false\n        });\n      }\n\n      if (!opts.xmlMode && ['svg', 'math'].indexOf(elem.name) >= 0) {\n        opts = Object.assign({}, opts, {\n          xmlMode: 'foreign'\n        });\n      }\n\n      var tag = '<' + elem.name;\n      var attribs = formatAttrs(elem.attribs, opts);\n\n      if (attribs) {\n        tag += ' ' + attribs;\n      }\n\n      if (opts.xmlMode && (!elem.children || elem.children.length === 0)) {\n        tag += '/>';\n      } else {\n        tag += '>';\n\n        if (elem.children) {\n          tag += render(elem.children, opts);\n        }\n\n        if (!singleTag[elem.name] || opts.xmlMode) {\n          tag += '</' + elem.name + '>';\n        }\n      }\n\n      return tag;\n    }\n\n    function renderDirective(elem) {\n      return '<' + elem.data + '>';\n    }\n\n    function renderText(elem, opts) {\n      var data = elem.data || ''; // if entities weren't decoded, no need to encode them back\n\n      if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {\n        data = lib$1.encodeXML(data);\n      }\n\n      return data;\n    }\n\n    function renderCdata(elem) {\n      return '<![CDATA[' + elem.children[0].data + ']]>';\n    }\n\n    function renderComment(elem) {\n      return '<!--' + elem.data + '-->';\n    }\n  });\n  var isTag = domelementtype.isTag;\n  var stringify = {\n    getInnerHTML: getInnerHTML,\n    getOuterHTML: domSerializer,\n    getText: getText\n  };\n\n  function getInnerHTML(elem, opts) {\n    return elem.children ? elem.children.map(function (elem) {\n      return domSerializer(elem, opts);\n    }).join(\"\") : \"\";\n  }\n\n  function getText(elem) {\n    if (Array.isArray(elem)) return elem.map(getText).join(\"\");\n    if (isTag(elem) || elem.type === domelementtype.CDATA) return getText(elem.children);\n    if (elem.type === domelementtype.Text) return elem.data;\n    return \"\";\n  }\n\n  var traversal = createCommonjsModule(function (module, exports) {\n    var getChildren = exports.getChildren = function (elem) {\n      return elem.children;\n    };\n\n    var getParent = exports.getParent = function (elem) {\n      return elem.parent;\n    };\n\n    exports.getSiblings = function (elem) {\n      var parent = getParent(elem);\n      return parent ? getChildren(parent) : [elem];\n    };\n\n    exports.getAttributeValue = function (elem, name) {\n      return elem.attribs && elem.attribs[name];\n    };\n\n    exports.hasAttrib = function (elem, name) {\n      return !!elem.attribs && hasOwnProperty.call(elem.attribs, name);\n    };\n\n    exports.getName = function (elem) {\n      return elem.name;\n    };\n  });\n\n  var removeElement = function removeElement(elem) {\n    if (elem.prev) elem.prev.next = elem.next;\n    if (elem.next) elem.next.prev = elem.prev;\n\n    if (elem.parent) {\n      var childs = elem.parent.children;\n      childs.splice(childs.lastIndexOf(elem), 1);\n    }\n  };\n\n  var replaceElement = function replaceElement(elem, replacement) {\n    var prev = replacement.prev = elem.prev;\n\n    if (prev) {\n      prev.next = replacement;\n    }\n\n    var next = replacement.next = elem.next;\n\n    if (next) {\n      next.prev = replacement;\n    }\n\n    var parent = replacement.parent = elem.parent;\n\n    if (parent) {\n      var childs = parent.children;\n      childs[childs.lastIndexOf(elem)] = replacement;\n    }\n  };\n\n  var appendChild = function appendChild(elem, child) {\n    child.parent = elem;\n\n    if (elem.children.push(child) !== 1) {\n      var sibling = elem.children[elem.children.length - 2];\n      sibling.next = child;\n      child.prev = sibling;\n      child.next = null;\n    }\n  };\n\n  var append = function append(elem, next) {\n    var parent = elem.parent,\n        currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n\n    if (currNext) {\n      currNext.prev = next;\n\n      if (parent) {\n        var childs = parent.children;\n        childs.splice(childs.lastIndexOf(currNext), 0, next);\n      }\n    } else if (parent) {\n      parent.children.push(next);\n    }\n  };\n\n  var prepend = function prepend(elem, prev) {\n    var parent = elem.parent;\n\n    if (parent) {\n      var childs = parent.children;\n      childs.splice(childs.lastIndexOf(elem), 0, prev);\n    }\n\n    if (elem.prev) {\n      elem.prev.next = prev;\n    }\n\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n  };\n\n  var manipulation = {\n    removeElement: removeElement,\n    replaceElement: replaceElement,\n    appendChild: appendChild,\n    append: append,\n    prepend: prepend\n  };\n  var isTag$1 = domelementtype.isTag;\n  var querying = {\n    filter: filter,\n    find: find,\n    findOneChild: findOneChild,\n    findOne: findOne,\n    existsOne: existsOne,\n    findAll: findAll\n  };\n\n  function filter(test, element, recurse, limit) {\n    if (!Array.isArray(element)) element = [element];\n\n    if (typeof limit !== \"number\" || !isFinite(limit)) {\n      limit = Infinity;\n    }\n\n    return find(test, element, recurse !== false, limit);\n  }\n\n  function find(test, elems, recurse, limit) {\n    var result = [],\n        childs;\n\n    for (var i = 0, j = elems.length; i < j; i++) {\n      if (test(elems[i])) {\n        result.push(elems[i]);\n        if (--limit <= 0) break;\n      }\n\n      childs = elems[i].children;\n\n      if (recurse && childs && childs.length > 0) {\n        childs = find(test, childs, recurse, limit);\n        result = result.concat(childs);\n        limit -= childs.length;\n        if (limit <= 0) break;\n      }\n    }\n\n    return result;\n  }\n\n  function findOneChild(test, elems) {\n    for (var i = 0, l = elems.length; i < l; i++) {\n      if (test(elems[i])) return elems[i];\n    }\n\n    return null;\n  }\n\n  function findOne(test, elems) {\n    var elem = null;\n\n    for (var i = 0, l = elems.length; i < l && !elem; i++) {\n      if (!isTag$1(elems[i])) {\n        continue;\n      } else if (test(elems[i])) {\n        elem = elems[i];\n      } else if (elems[i].children.length > 0) {\n        elem = findOne(test, elems[i].children);\n      }\n    }\n\n    return elem;\n  }\n\n  function existsOne(test, elems) {\n    for (var i = 0, l = elems.length; i < l; i++) {\n      if (isTag$1(elems[i]) && (test(elems[i]) || elems[i].children.length > 0 && existsOne(test, elems[i].children))) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function findAll(test, elems) {\n    var result = [];\n\n    for (var i = 0, j = elems.length; i < j; i++) {\n      if (!isTag$1(elems[i])) continue;\n      if (test(elems[i])) result.push(elems[i]);\n\n      if (elems[i].children.length > 0) {\n        result = result.concat(findAll(test, elems[i].children));\n      }\n    }\n\n    return result;\n  }\n\n  var legacy$2 = createCommonjsModule(function (module, exports) {\n    var isTag = exports.isTag = domelementtype.isTag;\n\n    exports.testElement = function (options, element) {\n      for (var key in options) {\n        if (!options.hasOwnProperty(key)) ;else if (key === \"tag_name\") {\n          if (!isTag(element) || !options.tag_name(element.name)) {\n            return false;\n          }\n        } else if (key === \"tag_type\") {\n          if (!options.tag_type(element.type)) return false;\n        } else if (key === \"tag_contains\") {\n          if (isTag(element) || !options.tag_contains(element.data)) {\n            return false;\n          }\n        } else if (!element.attribs || !options[key](element.attribs[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var Checks = {\n      tag_name: function tag_name(name) {\n        if (typeof name === \"function\") {\n          return function (elem) {\n            return isTag(elem) && name(elem.name);\n          };\n        } else if (name === \"*\") {\n          return isTag;\n        } else {\n          return function (elem) {\n            return isTag(elem) && elem.name === name;\n          };\n        }\n      },\n      tag_type: function tag_type(type) {\n        if (typeof type === \"function\") {\n          return function (elem) {\n            return type(elem.type);\n          };\n        } else {\n          return function (elem) {\n            return elem.type === type;\n          };\n        }\n      },\n      tag_contains: function tag_contains(data) {\n        if (typeof data === \"function\") {\n          return function (elem) {\n            return !isTag(elem) && data(elem.data);\n          };\n        } else {\n          return function (elem) {\n            return !isTag(elem) && elem.data === data;\n          };\n        }\n      }\n    };\n\n    function getAttribCheck(attrib, value) {\n      if (typeof value === \"function\") {\n        return function (elem) {\n          return elem.attribs && value(elem.attribs[attrib]);\n        };\n      } else {\n        return function (elem) {\n          return elem.attribs && elem.attribs[attrib] === value;\n        };\n      }\n    }\n\n    function combineFuncs(a, b) {\n      return function (elem) {\n        return a(elem) || b(elem);\n      };\n    }\n\n    exports.getElements = function (options, element, recurse, limit) {\n      var funcs = Object.keys(options).map(function (key) {\n        var value = options[key];\n        return key in Checks ? Checks[key](value) : getAttribCheck(key, value);\n      });\n      return funcs.length === 0 ? [] : this.filter(funcs.reduce(combineFuncs), element, recurse, limit);\n    };\n\n    exports.getElementById = function (id, element, recurse) {\n      if (!Array.isArray(element)) element = [element];\n      return this.findOne(getAttribCheck(\"id\", id), element, recurse !== false);\n    };\n\n    exports.getElementsByTagName = function (name, element, recurse, limit) {\n      return this.filter(Checks.tag_name(name), element, recurse, limit);\n    };\n\n    exports.getElementsByTagType = function (type, element, recurse, limit) {\n      return this.filter(Checks.tag_type(type), element, recurse, limit);\n    };\n  });\n  var helpers = createCommonjsModule(function (module, exports) {\n    // removeSubsets\n    // Given an array of nodes, remove any member that is contained by another.\n    exports.removeSubsets = function (nodes) {\n      var idx = nodes.length,\n          node,\n          ancestor,\n          replace; // Check if each node (or one of its ancestors) is already contained in the\n      // array.\n\n      while (--idx > -1) {\n        node = ancestor = nodes[idx]; // Temporarily remove the node under consideration\n\n        nodes[idx] = null;\n        replace = true;\n\n        while (ancestor) {\n          if (nodes.indexOf(ancestor) > -1) {\n            replace = false;\n            nodes.splice(idx, 1);\n            break;\n          }\n\n          ancestor = ancestor.parent;\n        } // If the node has been found to be unique, re-insert it.\n\n\n        if (replace) {\n          nodes[idx] = node;\n        }\n      }\n\n      return nodes;\n    }; // Source: http://dom.spec.whatwg.org/#dom-node-comparedocumentposition\n\n\n    var POSITION = {\n      DISCONNECTED: 1,\n      PRECEDING: 2,\n      FOLLOWING: 4,\n      CONTAINS: 8,\n      CONTAINED_BY: 16\n    }; // Compare the position of one node against another node in any other document.\n    // The return value is a bitmask with the following values:\n    //\n    // document order:\n    // > There is an ordering, document order, defined on all the nodes in the\n    // > document corresponding to the order in which the first character of the\n    // > XML representation of each node occurs in the XML representation of the\n    // > document after expansion of general entities. Thus, the document element\n    // > node will be the first node. Element nodes occur before their children.\n    // > Thus, document order orders element nodes in order of the occurrence of\n    // > their start-tag in the XML (after expansion of entities). The attribute\n    // > nodes of an element occur after the element and before its children. The\n    // > relative order of attribute nodes is implementation-dependent./\n    // Source:\n    // http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n    //\n    // @argument {Node} nodaA The first node to use in the comparison\n    // @argument {Node} nodeB The second node to use in the comparison\n    //\n    // @return {Number} A bitmask describing the input nodes' relative position.\n    //         See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n    //         a description of these values.\n\n    var comparePos = exports.compareDocumentPosition = function (nodeA, nodeB) {\n      var aParents = [];\n      var bParents = [];\n      var current, sharedParent, siblings, aSibling, bSibling, idx;\n\n      if (nodeA === nodeB) {\n        return 0;\n      }\n\n      current = nodeA;\n\n      while (current) {\n        aParents.unshift(current);\n        current = current.parent;\n      }\n\n      current = nodeB;\n\n      while (current) {\n        bParents.unshift(current);\n        current = current.parent;\n      }\n\n      idx = 0;\n\n      while (aParents[idx] === bParents[idx]) {\n        idx++;\n      }\n\n      if (idx === 0) {\n        return POSITION.DISCONNECTED;\n      }\n\n      sharedParent = aParents[idx - 1];\n      siblings = sharedParent.children;\n      aSibling = aParents[idx];\n      bSibling = bParents[idx];\n\n      if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n        if (sharedParent === nodeB) {\n          return POSITION.FOLLOWING | POSITION.CONTAINED_BY;\n        }\n\n        return POSITION.FOLLOWING;\n      } else {\n        if (sharedParent === nodeA) {\n          return POSITION.PRECEDING | POSITION.CONTAINS;\n        }\n\n        return POSITION.PRECEDING;\n      }\n    }; // Sort an array of nodes based on their relative position in the document and\n    // remove any duplicate nodes. If the array contains nodes that do not belong\n    // to the same document, sort order is unspecified.\n    //\n    // @argument {Array} nodes Array of DOM nodes\n    //\n    // @returns {Array} collection of unique nodes, sorted in document order\n\n\n    exports.uniqueSort = function (nodes) {\n      var idx = nodes.length,\n          node,\n          position;\n      nodes = nodes.slice();\n\n      while (--idx > -1) {\n        node = nodes[idx];\n        position = nodes.indexOf(node);\n\n        if (position > -1 && position < idx) {\n          nodes.splice(idx, 1);\n        }\n      }\n\n      nodes.sort(function (a, b) {\n        var relative = comparePos(a, b);\n\n        if (relative & POSITION.PRECEDING) {\n          return -1;\n        } else if (relative & POSITION.FOLLOWING) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return nodes;\n    };\n  });\n  var domutils = createCommonjsModule(function (module) {\n    var DomUtils = module.exports;\n    [stringify, traversal, manipulation, querying, legacy$2, helpers].forEach(function (ext) {\n      Object.keys(ext).forEach(function (key) {\n        DomUtils[key] = ext[key].bind(DomUtils);\n      });\n    });\n  });\n  var parse_1 = parse; //following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\n  //[ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n\n  var re_nthElement = /^([+\\-]?\\d*n)?\\s*(?:([+\\-]?)\\s*(\\d+))?$/;\n  /*\n  \tparses a nth-check formula, returns an array of two numbers\n  */\n\n  function parse(formula) {\n    formula = formula.trim().toLowerCase();\n\n    if (formula === \"even\") {\n      return [2, 0];\n    } else if (formula === \"odd\") {\n      return [2, 1];\n    } else {\n      var parsed = formula.match(re_nthElement);\n\n      if (!parsed) {\n        throw new SyntaxError(\"n-th rule couldn't be parsed ('\" + formula + \"')\");\n      }\n\n      var a;\n\n      if (parsed[1]) {\n        a = parseInt(parsed[1], 10);\n\n        if (isNaN(a)) {\n          if (parsed[1].charAt(0) === \"-\") a = -1;else a = 1;\n        }\n      } else a = 0;\n\n      return [a, parsed[3] ? parseInt((parsed[2] || \"\") + parsed[3], 10) : 0];\n    }\n  }\n\n  var boolbase = {\n    trueFunc: function trueFunc() {\n      return true;\n    },\n    falseFunc: function falseFunc() {\n      return false;\n    }\n  };\n  var compile_1 = compile;\n  var trueFunc = boolbase.trueFunc,\n      falseFunc = boolbase.falseFunc;\n  /*\n  \treturns a function that checks if an elements index matches the given rule\n  \thighly optimized to return the fastest solution\n  */\n\n  function compile(parsed) {\n    var a = parsed[0],\n        b = parsed[1] - 1; //when b <= 0, a*n won't be possible for any matches when a < 0\n    //besides, the specification says that no element is matched when a and b are 0\n\n    if (b < 0 && a <= 0) return falseFunc; //when a is in the range -1..1, it matches any element (so only b is checked)\n\n    if (a === -1) return function (pos) {\n      return pos <= b;\n    };\n    if (a === 0) return function (pos) {\n      return pos === b;\n    }; //when b <= 0 and a === 1, they match any element\n\n    if (a === 1) return b < 0 ? trueFunc : function (pos) {\n      return pos >= b;\n    }; //when a > 0, modulo can be used to check if there is a match\n\n    var bMod = b % a;\n    if (bMod < 0) bMod += a;\n\n    if (a > 1) {\n      return function (pos) {\n        return pos >= b && pos % a === bMod;\n      };\n    }\n\n    a *= -1; //make `a` positive\n\n    return function (pos) {\n      return pos <= b && pos % a === bMod;\n    };\n  }\n\n  var nthCheck = function nthCheck(formula) {\n    return compile_1(parse_1(formula));\n  };\n\n  var parse_1$1 = parse_1;\n  var compile_1$1 = compile_1;\n  nthCheck.parse = parse_1$1;\n  nthCheck.compile = compile_1$1;\n  var hasAttrib = domutils.hasAttrib,\n      getAttributeValue = domutils.getAttributeValue,\n      falseFunc$1 = boolbase.falseFunc; //https://github.com/slevithan/XRegExp/blob/master/src/xregexp.js#L469\n\n  var reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\n  /*\n  \tattribute selectors\n  */\n\n  var attributeRules = {\n    __proto__: null,\n    equals: function equals(next, data) {\n      var name = data.name,\n          value = data.value;\n\n      if (data.ignoreCase) {\n        value = value.toLowerCase();\n        return function equalsIC(elem) {\n          var attr = getAttributeValue(elem, name);\n          return attr != null && attr.toLowerCase() === value && next(elem);\n        };\n      }\n\n      return function equals(elem) {\n        return getAttributeValue(elem, name) === value && next(elem);\n      };\n    },\n    hyphen: function hyphen(next, data) {\n      var name = data.name,\n          value = data.value,\n          len = value.length;\n\n      if (data.ignoreCase) {\n        value = value.toLowerCase();\n        return function hyphenIC(elem) {\n          var attr = getAttributeValue(elem, name);\n          return attr != null && (attr.length === len || attr.charAt(len) === \"-\") && attr.substr(0, len).toLowerCase() === value && next(elem);\n        };\n      }\n\n      return function hyphen(elem) {\n        var attr = getAttributeValue(elem, name);\n        return attr != null && attr.substr(0, len) === value && (attr.length === len || attr.charAt(len) === \"-\") && next(elem);\n      };\n    },\n    element: function element(next, data) {\n      var name = data.name,\n          value = data.value;\n\n      if (/\\s/.test(value)) {\n        return falseFunc$1;\n      }\n\n      value = value.replace(reChars, \"\\\\$&\");\n      var pattern = \"(?:^|\\\\s)\" + value + \"(?:$|\\\\s)\",\n          flags = data.ignoreCase ? \"i\" : \"\",\n          regex = new RegExp(pattern, flags);\n      return function element(elem) {\n        var attr = getAttributeValue(elem, name);\n        return attr != null && regex.test(attr) && next(elem);\n      };\n    },\n    exists: function exists(next, data) {\n      var name = data.name;\n      return function exists(elem) {\n        return hasAttrib(elem, name) && next(elem);\n      };\n    },\n    start: function start(next, data) {\n      var name = data.name,\n          value = data.value,\n          len = value.length;\n\n      if (len === 0) {\n        return falseFunc$1;\n      }\n\n      if (data.ignoreCase) {\n        value = value.toLowerCase();\n        return function startIC(elem) {\n          var attr = getAttributeValue(elem, name);\n          return attr != null && attr.substr(0, len).toLowerCase() === value && next(elem);\n        };\n      }\n\n      return function start(elem) {\n        var attr = getAttributeValue(elem, name);\n        return attr != null && attr.substr(0, len) === value && next(elem);\n      };\n    },\n    end: function end(next, data) {\n      var name = data.name,\n          value = data.value,\n          len = -value.length;\n\n      if (len === 0) {\n        return falseFunc$1;\n      }\n\n      if (data.ignoreCase) {\n        value = value.toLowerCase();\n        return function endIC(elem) {\n          var attr = getAttributeValue(elem, name);\n          return attr != null && attr.substr(len).toLowerCase() === value && next(elem);\n        };\n      }\n\n      return function end(elem) {\n        var attr = getAttributeValue(elem, name);\n        return attr != null && attr.substr(len) === value && next(elem);\n      };\n    },\n    any: function any(next, data) {\n      var name = data.name,\n          value = data.value;\n\n      if (value === \"\") {\n        return falseFunc$1;\n      }\n\n      if (data.ignoreCase) {\n        var regex = new RegExp(value.replace(reChars, \"\\\\$&\"), \"i\");\n        return function anyIC(elem) {\n          var attr = getAttributeValue(elem, name);\n          return attr != null && regex.test(attr) && next(elem);\n        };\n      }\n\n      return function any(elem) {\n        var attr = getAttributeValue(elem, name);\n        return attr != null && attr.indexOf(value) >= 0 && next(elem);\n      };\n    },\n    not: function not(next, data) {\n      var name = data.name,\n          value = data.value;\n\n      if (value === \"\") {\n        return function notEmpty(elem) {\n          return !!getAttributeValue(elem, name) && next(elem);\n        };\n      } else if (data.ignoreCase) {\n        value = value.toLowerCase();\n        return function notIC(elem) {\n          var attr = getAttributeValue(elem, name);\n          return attr != null && attr.toLowerCase() !== value && next(elem);\n        };\n      }\n\n      return function not(elem) {\n        return getAttributeValue(elem, name) !== value && next(elem);\n      };\n    }\n  };\n  var attributes = {\n    compile: function compile(next, data, options) {\n      if (options && options.strict && (data.ignoreCase || data.action === \"not\")) throw SyntaxError(\"Unsupported attribute selector\");\n      return attributeRules[data.action](next, data);\n    },\n    rules: attributeRules\n  };\n  /*\n  \tpseudo selectors\n  \n  \t---\n  \n  \tthey are available in two forms:\n  \t* filters called when the selector\n  \t  is compiled and return a function\n  \t  that needs to return next()\n  \t* pseudos get called on execution\n  \t  they need to return a boolean\n  */\n\n  var isTag$2 = domutils.isTag,\n      getText$1 = domutils.getText,\n      getParent = domutils.getParent,\n      getChildren = domutils.getChildren,\n      getSiblings = domutils.getSiblings,\n      hasAttrib$1 = domutils.hasAttrib,\n      getName = domutils.getName,\n      getAttribute = domutils.getAttributeValue,\n      checkAttrib = attributes.rules.equals,\n      trueFunc$1 = boolbase.trueFunc,\n      falseFunc$2 = boolbase.falseFunc; //helper methods\n\n  function getFirstElement(elems) {\n    for (var i = 0; elems && i < elems.length; i++) {\n      if (isTag$2(elems[i])) return elems[i];\n    }\n  }\n\n  function getAttribFunc(name, value) {\n    var data = {\n      name: name,\n      value: value\n    };\n    return function attribFunc(next) {\n      return checkAttrib(next, data);\n    };\n  }\n\n  function getChildFunc(next) {\n    return function (elem) {\n      return !!getParent(elem) && next(elem);\n    };\n  }\n\n  var filters = {\n    contains: function contains(next, text) {\n      return function contains(elem) {\n        return next(elem) && getText$1(elem).indexOf(text) >= 0;\n      };\n    },\n    icontains: function icontains(next, text) {\n      var itext = text.toLowerCase();\n      return function icontains(elem) {\n        return next(elem) && getText$1(elem).toLowerCase().indexOf(itext) >= 0;\n      };\n    },\n    //location specific methods\n    \"nth-child\": function nthChild(next, rule) {\n      var func = nthCheck(rule);\n      if (func === falseFunc$2) return func;\n      if (func === trueFunc$1) return getChildFunc(next);\n      return function nthChild(elem) {\n        var siblings = getSiblings(elem);\n\n        for (var i = 0, pos = 0; i < siblings.length; i++) {\n          if (isTag$2(siblings[i])) {\n            if (siblings[i] === elem) break;else pos++;\n          }\n        }\n\n        return func(pos) && next(elem);\n      };\n    },\n    \"nth-last-child\": function nthLastChild(next, rule) {\n      var func = nthCheck(rule);\n      if (func === falseFunc$2) return func;\n      if (func === trueFunc$1) return getChildFunc(next);\n      return function nthLastChild(elem) {\n        var siblings = getSiblings(elem);\n\n        for (var pos = 0, i = siblings.length - 1; i >= 0; i--) {\n          if (isTag$2(siblings[i])) {\n            if (siblings[i] === elem) break;else pos++;\n          }\n        }\n\n        return func(pos) && next(elem);\n      };\n    },\n    \"nth-of-type\": function nthOfType(next, rule) {\n      var func = nthCheck(rule);\n      if (func === falseFunc$2) return func;\n      if (func === trueFunc$1) return getChildFunc(next);\n      return function nthOfType(elem) {\n        var siblings = getSiblings(elem);\n\n        for (var pos = 0, i = 0; i < siblings.length; i++) {\n          if (isTag$2(siblings[i])) {\n            if (siblings[i] === elem) break;\n            if (getName(siblings[i]) === getName(elem)) pos++;\n          }\n        }\n\n        return func(pos) && next(elem);\n      };\n    },\n    \"nth-last-of-type\": function nthLastOfType(next, rule) {\n      var func = nthCheck(rule);\n      if (func === falseFunc$2) return func;\n      if (func === trueFunc$1) return getChildFunc(next);\n      return function nthLastOfType(elem) {\n        var siblings = getSiblings(elem);\n\n        for (var pos = 0, i = siblings.length - 1; i >= 0; i--) {\n          if (isTag$2(siblings[i])) {\n            if (siblings[i] === elem) break;\n            if (getName(siblings[i]) === getName(elem)) pos++;\n          }\n        }\n\n        return func(pos) && next(elem);\n      };\n    },\n    //TODO determine the actual root element\n    root: function root(next) {\n      return function (elem) {\n        return !getParent(elem) && next(elem);\n      };\n    },\n    scope: function scope(next, rule, options, context) {\n      if (!context || context.length === 0) {\n        //equivalent to :root\n        return filters.root(next);\n      }\n\n      if (context.length === 1) {\n        //NOTE: can't be unpacked, as :has uses this for side-effects\n        return function (elem) {\n          return context[0] === elem && next(elem);\n        };\n      }\n\n      return function (elem) {\n        return context.indexOf(elem) >= 0 && next(elem);\n      };\n    },\n    //jQuery extensions (others follow as pseudos)\n    checkbox: getAttribFunc(\"type\", \"checkbox\"),\n    file: getAttribFunc(\"type\", \"file\"),\n    password: getAttribFunc(\"type\", \"password\"),\n    radio: getAttribFunc(\"type\", \"radio\"),\n    reset: getAttribFunc(\"type\", \"reset\"),\n    image: getAttribFunc(\"type\", \"image\"),\n    submit: getAttribFunc(\"type\", \"submit\")\n  }; //while filters are precompiled, pseudos get called when they are needed\n\n  var pseudos = {\n    empty: function empty(elem) {\n      return !getChildren(elem).some(function (elem) {\n        return isTag$2(elem) || elem.type === \"text\";\n      });\n    },\n    \"first-child\": function firstChild(elem) {\n      return getFirstElement(getSiblings(elem)) === elem;\n    },\n    \"last-child\": function lastChild(elem) {\n      var siblings = getSiblings(elem);\n\n      for (var i = siblings.length - 1; i >= 0; i--) {\n        if (siblings[i] === elem) return true;\n        if (isTag$2(siblings[i])) break;\n      }\n\n      return false;\n    },\n    \"first-of-type\": function firstOfType(elem) {\n      var siblings = getSiblings(elem);\n\n      for (var i = 0; i < siblings.length; i++) {\n        if (isTag$2(siblings[i])) {\n          if (siblings[i] === elem) return true;\n          if (getName(siblings[i]) === getName(elem)) break;\n        }\n      }\n\n      return false;\n    },\n    \"last-of-type\": function lastOfType(elem) {\n      var siblings = getSiblings(elem);\n\n      for (var i = siblings.length - 1; i >= 0; i--) {\n        if (isTag$2(siblings[i])) {\n          if (siblings[i] === elem) return true;\n          if (getName(siblings[i]) === getName(elem)) break;\n        }\n      }\n\n      return false;\n    },\n    \"only-of-type\": function onlyOfType(elem) {\n      var siblings = getSiblings(elem);\n\n      for (var i = 0, j = siblings.length; i < j; i++) {\n        if (isTag$2(siblings[i])) {\n          if (siblings[i] === elem) continue;\n          if (getName(siblings[i]) === getName(elem)) return false;\n        }\n      }\n\n      return true;\n    },\n    \"only-child\": function onlyChild(elem) {\n      var siblings = getSiblings(elem);\n\n      for (var i = 0; i < siblings.length; i++) {\n        if (isTag$2(siblings[i]) && siblings[i] !== elem) return false;\n      }\n\n      return true;\n    },\n    //:matches(a, area, link)[href]\n    link: function link(elem) {\n      return hasAttrib$1(elem, \"href\");\n    },\n    visited: falseFunc$2,\n    //seems to be a valid implementation\n    //TODO: :any-link once the name is finalized (as an alias of :link)\n    //forms\n    //to consider: :target\n    //:matches([selected], select:not([multiple]):not(> option[selected]) > option:first-of-type)\n    selected: function selected(elem) {\n      if (hasAttrib$1(elem, \"selected\")) return true;else if (getName(elem) !== \"option\") return false; //the first <option> in a <select> is also selected\n\n      var parent = getParent(elem);\n      if (!parent || getName(parent) !== \"select\" || hasAttrib$1(parent, \"multiple\")) return false;\n      var siblings = getChildren(parent),\n          sawElem = false;\n\n      for (var i = 0; i < siblings.length; i++) {\n        if (isTag$2(siblings[i])) {\n          if (siblings[i] === elem) {\n            sawElem = true;\n          } else if (!sawElem) {\n            return false;\n          } else if (hasAttrib$1(siblings[i], \"selected\")) {\n            return false;\n          }\n        }\n      }\n\n      return sawElem;\n    },\n    //https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    //:matches(\n    //  :matches(button, input, select, textarea, menuitem, optgroup, option)[disabled],\n    //  optgroup[disabled] > option),\n    // fieldset[disabled] * //TODO not child of first <legend>\n    //)\n    disabled: function disabled(elem) {\n      return hasAttrib$1(elem, \"disabled\");\n    },\n    enabled: function enabled(elem) {\n      return !hasAttrib$1(elem, \"disabled\");\n    },\n    //:matches(:matches(:radio, :checkbox)[checked], :selected) (TODO menuitem)\n    checked: function checked(elem) {\n      return hasAttrib$1(elem, \"checked\") || pseudos.selected(elem);\n    },\n    //:matches(input, select, textarea)[required]\n    required: function required(elem) {\n      return hasAttrib$1(elem, \"required\");\n    },\n    //:matches(input, select, textarea):not([required])\n    optional: function optional(elem) {\n      return !hasAttrib$1(elem, \"required\");\n    },\n    //jQuery extensions\n    //:not(:empty)\n    parent: function parent(elem) {\n      return !pseudos.empty(elem);\n    },\n    //:matches(h1, h2, h3, h4, h5, h6)\n    header: function header(elem) {\n      var name = getName(elem);\n      return name === \"h1\" || name === \"h2\" || name === \"h3\" || name === \"h4\" || name === \"h5\" || name === \"h6\";\n    },\n    //:matches(button, input[type=button])\n    button: function button(elem) {\n      var name = getName(elem);\n      return name === \"button\" || name === \"input\" && getAttribute(elem, \"type\") === \"button\";\n    },\n    //:matches(input, textarea, select, button)\n    input: function input(elem) {\n      var name = getName(elem);\n      return name === \"input\" || name === \"textarea\" || name === \"select\" || name === \"button\";\n    },\n    //input:matches(:not([type!='']), [type='text' i])\n    text: function text(elem) {\n      var attr;\n      return getName(elem) === \"input\" && (!(attr = getAttribute(elem, \"type\")) || attr.toLowerCase() === \"text\");\n    }\n  };\n\n  function verifyArgs(func, name, subselect) {\n    if (subselect === null) {\n      if (func.length > 1 && name !== \"scope\") {\n        throw new SyntaxError(\"pseudo-selector :\" + name + \" requires an argument\");\n      }\n    } else {\n      if (func.length === 1) {\n        throw new SyntaxError(\"pseudo-selector :\" + name + \" doesn't have any arguments\");\n      }\n    }\n  } //FIXME this feels hacky\n\n\n  var re_CSS3 = /^(?:(?:nth|last|first|only)-(?:child|of-type)|root|empty|(?:en|dis)abled|checked|not)$/;\n  var pseudos_1 = {\n    compile: function compile(next, data, options, context) {\n      var name = data.name,\n          subselect = data.data;\n\n      if (options && options.strict && !re_CSS3.test(name)) {\n        throw SyntaxError(\":\" + name + \" isn't part of CSS3\");\n      }\n\n      if (typeof filters[name] === \"function\") {\n        verifyArgs(filters[name], name, subselect);\n        return filters[name](next, subselect, options, context);\n      } else if (typeof pseudos[name] === \"function\") {\n        var func = pseudos[name];\n        verifyArgs(func, name, subselect);\n        if (next === trueFunc$1) return func;\n        return function pseudoArgs(elem) {\n          return func(elem, subselect) && next(elem);\n        };\n      } else {\n        throw new SyntaxError(\"unmatched pseudo-class :\" + name);\n      }\n    },\n    filters: filters,\n    pseudos: pseudos\n  };\n  var cssWhat = parse$1;\n  var re_name = /^(?:\\\\.|[\\w\\-\\u00b0-\\uFFFF])+/,\n      re_escape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/ig,\n      //modified version of https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L87\n  re_attr = /^\\s*((?:\\\\.|[\\w\\u00b0-\\uFFFF\\-])+)\\s*(?:(\\S?)=\\s*(?:(['\"])([^]*?)\\3|(#?(?:\\\\.|[\\w\\u00b0-\\uFFFF\\-])*)|)|)\\s*(i)?\\]/;\n  var actionTypes = {\n    __proto__: null,\n    \"undefined\": \"exists\",\n    \"\": \"equals\",\n    \"~\": \"element\",\n    \"^\": \"start\",\n    \"$\": \"end\",\n    \"*\": \"any\",\n    \"!\": \"not\",\n    \"|\": \"hyphen\"\n  };\n  var simpleSelectors = {\n    __proto__: null,\n    \">\": \"child\",\n    \"<\": \"parent\",\n    \"~\": \"sibling\",\n    \"+\": \"adjacent\"\n  };\n  var attribSelectors = {\n    __proto__: null,\n    \"#\": [\"id\", \"equals\"],\n    \".\": [\"class\", \"element\"]\n  }; //pseudos, whose data-property is parsed as well\n\n  var unpackPseudos = {\n    __proto__: null,\n    \"has\": true,\n    \"not\": true,\n    \"matches\": true\n  };\n  var stripQuotesFromPseudos = {\n    __proto__: null,\n    \"contains\": true,\n    \"icontains\": true\n  };\n  var quotes = {\n    __proto__: null,\n    \"\\\"\": true,\n    \"'\": true\n  }; //unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L139\n\n  function funescape(_, escaped, escapedWhitespace) {\n    var high = \"0x\" + escaped - 0x10000; // NaN means non-codepoint\n    // Support: Firefox\n    // Workaround erroneous numeric interpretation of +\"0x\"\n\n    return high !== high || escapedWhitespace ? escaped : // BMP codepoint\n    high < 0 ? String.fromCharCode(high + 0x10000) : // Supplemental Plane codepoint (surrogate pair)\n    String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n  }\n\n  function unescapeCSS(str) {\n    return str.replace(re_escape, funescape);\n  }\n\n  function isWhitespace(c) {\n    return c === \" \" || c === \"\\n\" || c === \"\\t\" || c === \"\\f\" || c === \"\\r\";\n  }\n\n  function parse$1(selector, options) {\n    var subselects = [];\n    selector = parseSelector(subselects, selector + \"\", options);\n\n    if (selector !== \"\") {\n      throw new SyntaxError(\"Unmatched selector: \" + selector);\n    }\n\n    return subselects;\n  }\n\n  function parseSelector(subselects, selector, options) {\n    var tokens = [],\n        sawWS = false,\n        data,\n        firstChar,\n        name,\n        quot;\n\n    function getName() {\n      var sub = selector.match(re_name)[0];\n      selector = selector.substr(sub.length);\n      return unescapeCSS(sub);\n    }\n\n    function stripWhitespace(start) {\n      while (isWhitespace(selector.charAt(start))) start++;\n\n      selector = selector.substr(start);\n    }\n\n    function isEscaped(pos) {\n      var slashCount = 0;\n\n      while (selector.charAt(--pos) === \"\\\\\") slashCount++;\n\n      return (slashCount & 1) === 1;\n    }\n\n    stripWhitespace(0);\n\n    while (selector !== \"\") {\n      firstChar = selector.charAt(0);\n\n      if (isWhitespace(firstChar)) {\n        sawWS = true;\n        stripWhitespace(1);\n      } else if (firstChar in simpleSelectors) {\n        tokens.push({\n          type: simpleSelectors[firstChar]\n        });\n        sawWS = false;\n        stripWhitespace(1);\n      } else if (firstChar === \",\") {\n        if (tokens.length === 0) {\n          throw new SyntaxError(\"empty sub-selector\");\n        }\n\n        subselects.push(tokens);\n        tokens = [];\n        sawWS = false;\n        stripWhitespace(1);\n      } else {\n        if (sawWS) {\n          if (tokens.length > 0) {\n            tokens.push({\n              type: \"descendant\"\n            });\n          }\n\n          sawWS = false;\n        }\n\n        if (firstChar === \"*\") {\n          selector = selector.substr(1);\n          tokens.push({\n            type: \"universal\"\n          });\n        } else if (firstChar in attribSelectors) {\n          selector = selector.substr(1);\n          tokens.push({\n            type: \"attribute\",\n            name: attribSelectors[firstChar][0],\n            action: attribSelectors[firstChar][1],\n            value: getName(),\n            ignoreCase: false\n          });\n        } else if (firstChar === \"[\") {\n          selector = selector.substr(1);\n          data = selector.match(re_attr);\n\n          if (!data) {\n            throw new SyntaxError(\"Malformed attribute selector: \" + selector);\n          }\n\n          selector = selector.substr(data[0].length);\n          name = unescapeCSS(data[1]);\n\n          if (!options || (\"lowerCaseAttributeNames\" in options ? options.lowerCaseAttributeNames : !options.xmlMode)) {\n            name = name.toLowerCase();\n          }\n\n          tokens.push({\n            type: \"attribute\",\n            name: name,\n            action: actionTypes[data[2]],\n            value: unescapeCSS(data[4] || data[5] || \"\"),\n            ignoreCase: !!data[6]\n          });\n        } else if (firstChar === \":\") {\n          if (selector.charAt(1) === \":\") {\n            selector = selector.substr(2);\n            tokens.push({\n              type: \"pseudo-element\",\n              name: getName().toLowerCase()\n            });\n            continue;\n          }\n\n          selector = selector.substr(1);\n          name = getName().toLowerCase();\n          data = null;\n\n          if (selector.charAt(0) === \"(\") {\n            if (name in unpackPseudos) {\n              quot = selector.charAt(1);\n              var quoted = (quot in quotes);\n              selector = selector.substr(quoted + 1);\n              data = [];\n              selector = parseSelector(data, selector, options);\n\n              if (quoted) {\n                if (selector.charAt(0) !== quot) {\n                  throw new SyntaxError(\"unmatched quotes in :\" + name);\n                } else {\n                  selector = selector.substr(1);\n                }\n              }\n\n              if (selector.charAt(0) !== \")\") {\n                throw new SyntaxError(\"missing closing parenthesis in :\" + name + \" \" + selector);\n              }\n\n              selector = selector.substr(1);\n            } else {\n              var pos = 1,\n                  counter = 1;\n\n              for (; counter > 0 && pos < selector.length; pos++) {\n                if (selector.charAt(pos) === \"(\" && !isEscaped(pos)) counter++;else if (selector.charAt(pos) === \")\" && !isEscaped(pos)) counter--;\n              }\n\n              if (counter) {\n                throw new SyntaxError(\"parenthesis not matched\");\n              }\n\n              data = selector.substr(1, pos - 2);\n              selector = selector.substr(pos);\n\n              if (name in stripQuotesFromPseudos) {\n                quot = data.charAt(0);\n\n                if (quot === data.slice(-1) && quot in quotes) {\n                  data = data.slice(1, -1);\n                }\n\n                data = unescapeCSS(data);\n              }\n            }\n          }\n\n          tokens.push({\n            type: \"pseudo\",\n            name: name,\n            data: data\n          });\n        } else if (re_name.test(selector)) {\n          name = getName();\n\n          if (!options || (\"lowerCaseTags\" in options ? options.lowerCaseTags : !options.xmlMode)) {\n            name = name.toLowerCase();\n          }\n\n          tokens.push({\n            type: \"tag\",\n            name: name\n          });\n        } else {\n          if (tokens.length && tokens[tokens.length - 1].type === \"descendant\") {\n            tokens.pop();\n          }\n\n          addToken(subselects, tokens);\n          return selector;\n        }\n      }\n    }\n\n    addToken(subselects, tokens);\n    return selector;\n  }\n\n  function addToken(subselects, tokens) {\n    if (subselects.length > 0 && tokens.length === 0) {\n      throw new SyntaxError(\"empty sub-selector\");\n    }\n\n    subselects.push(tokens);\n  }\n\n  var isTag$3 = domutils.isTag,\n      getParent$1 = domutils.getParent,\n      getChildren$1 = domutils.getChildren,\n      getSiblings$1 = domutils.getSiblings,\n      getName$1 = domutils.getName;\n  /*\n  \tall available rules\n  */\n\n  var general = {\n    __proto__: null,\n    attribute: attributes.compile,\n    pseudo: pseudos_1.compile,\n    //tags\n    tag: function tag(next, data) {\n      var name = data.name;\n      return function tag(elem) {\n        return getName$1(elem) === name && next(elem);\n      };\n    },\n    //traversal\n    descendant: function descendant(next, rule, options, context, acceptSelf) {\n      return function descendant(elem) {\n        if (acceptSelf && next(elem)) return true;\n        var found = false;\n\n        while (!found && (elem = getParent$1(elem))) {\n          found = next(elem);\n        }\n\n        return found;\n      };\n    },\n    parent: function parent(next, data, options) {\n      if (options && options.strict) throw SyntaxError(\"Parent selector isn't part of CSS3\");\n      return function parent(elem) {\n        return getChildren$1(elem).some(test);\n      };\n\n      function test(elem) {\n        return isTag$3(elem) && next(elem);\n      }\n    },\n    child: function child(next) {\n      return function child(elem) {\n        var parent = getParent$1(elem);\n        return !!parent && next(parent);\n      };\n    },\n    sibling: function sibling(next) {\n      return function sibling(elem) {\n        var siblings = getSiblings$1(elem);\n\n        for (var i = 0; i < siblings.length; i++) {\n          if (isTag$3(siblings[i])) {\n            if (siblings[i] === elem) break;\n            if (next(siblings[i])) return true;\n          }\n        }\n\n        return false;\n      };\n    },\n    adjacent: function adjacent(next) {\n      return function adjacent(elem) {\n        var siblings = getSiblings$1(elem),\n            lastElement;\n\n        for (var i = 0; i < siblings.length; i++) {\n          if (isTag$3(siblings[i])) {\n            if (siblings[i] === elem) break;\n            lastElement = siblings[i];\n          }\n        }\n\n        return !!lastElement && next(lastElement);\n      };\n    },\n    universal: function universal(next) {\n      return next;\n    }\n  };\n  var universal = 50;\n  var tag = 30;\n  var attribute = 1;\n  var pseudo = 0;\n  var descendant = -1;\n  var child = -1;\n  var parent = -1;\n  var sibling = -1;\n  var adjacent = -1;\n  var procedure = {\n    universal: universal,\n    tag: tag,\n    attribute: attribute,\n    pseudo: pseudo,\n    descendant: descendant,\n    child: child,\n    parent: parent,\n    sibling: sibling,\n    adjacent: adjacent\n  };\n  var procedure$1 = {\n    __proto__: null,\n    universal: universal,\n    tag: tag,\n    attribute: attribute,\n    pseudo: pseudo,\n    descendant: descendant,\n    child: child,\n    parent: parent,\n    sibling: sibling,\n    adjacent: adjacent,\n    'default': procedure\n  };\n  var procedure$2 = getCjsExportFromNamespace(procedure$1);\n  var sort = sortByProcedure;\n  /*\n  \tsort the parts of the passed selector,\n  \tas there is potential for optimization\n  \t(some types of selectors are faster than others)\n  */\n\n  var attributes$1 = {\n    __proto__: null,\n    exists: 10,\n    equals: 8,\n    not: 7,\n    start: 6,\n    end: 6,\n    any: 5,\n    hyphen: 4,\n    element: 4\n  };\n\n  function sortByProcedure(arr) {\n    var procs = arr.map(getProcedure);\n\n    for (var i = 1; i < arr.length; i++) {\n      var procNew = procs[i];\n      if (procNew < 0) continue;\n\n      for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n        var token = arr[j + 1];\n        arr[j + 1] = arr[j];\n        arr[j] = token;\n        procs[j + 1] = procs[j];\n        procs[j] = procNew;\n      }\n    }\n  }\n\n  function getProcedure(token) {\n    var proc = procedure$2[token.type];\n\n    if (proc === procedure$2.attribute) {\n      proc = attributes$1[token.action];\n\n      if (proc === attributes$1.equals && token.name === \"id\") {\n        //prefer ID selectors (eg. #ID)\n        proc = 9;\n      }\n\n      if (token.ignoreCase) {\n        //ignoreCase adds some overhead, prefer \"normal\" token\n        //this is a binary operation, to ensure it's still an int\n        proc >>= 1;\n      }\n    } else if (proc === procedure$2.pseudo) {\n      if (!token.data) {\n        proc = 3;\n      } else if (token.name === \"has\" || token.name === \"contains\") {\n        proc = 0; //expensive in any case\n      } else if (token.name === \"matches\" || token.name === \"not\") {\n        proc = 0;\n\n        for (var i = 0; i < token.data.length; i++) {\n          //TODO better handling of complex selectors\n          if (token.data[i].length !== 1) continue;\n          var cur = getProcedure(token.data[i][0]); //avoid executing :has or :contains\n\n          if (cur === 0) {\n            proc = 0;\n            break;\n          }\n\n          if (cur > proc) proc = cur;\n        }\n\n        if (token.data.length > 1 && proc > 0) proc -= 1;\n      } else {\n        proc = 1;\n      }\n    }\n\n    return proc;\n  }\n  /*\n  \tcompiles a selector to an executable function\n  */\n\n\n  var compile_1$2 = compile$1;\n  var compileUnsafe_1 = compileUnsafe;\n  var compileToken_1 = compileToken;\n  var isTag$4 = domutils.isTag,\n      trueFunc$2 = boolbase.trueFunc,\n      falseFunc$3 = boolbase.falseFunc;\n\n  function compile$1(selector, options, context) {\n    var next = compileUnsafe(selector, options, context);\n    return wrap(next);\n  }\n\n  function wrap(next) {\n    return function base(elem) {\n      return isTag$4(elem) && next(elem);\n    };\n  }\n\n  function compileUnsafe(selector, options, context) {\n    var token = cssWhat(selector, options);\n    return compileToken(token, options, context);\n  }\n\n  function includesScopePseudo(t) {\n    return t.type === \"pseudo\" && (t.name === \"scope\" || Array.isArray(t.data) && t.data.some(function (data) {\n      return data.some(includesScopePseudo);\n    }));\n  }\n\n  var DESCENDANT_TOKEN = {\n    type: \"descendant\"\n  },\n      SCOPE_TOKEN = {\n    type: \"pseudo\",\n    name: \"scope\"\n  },\n      PLACEHOLDER_ELEMENT = {},\n      getParent$2 = domutils.getParent; //CSS 4 Spec (Draft): 3.3.1. Absolutizing a Scope-relative Selector\n  //http://www.w3.org/TR/selectors4/#absolutizing\n\n  function absolutize(token, context) {\n    //TODO better check if context is document\n    var hasContext = !!context && !!context.length && context.every(function (e) {\n      return e === PLACEHOLDER_ELEMENT || !!getParent$2(e);\n    });\n    token.forEach(function (t) {\n      if (t.length > 0 && isTraversal(t[0]) && t[0].type !== \"descendant\") ;else if (hasContext && !includesScopePseudo(t)) {\n        t.unshift(DESCENDANT_TOKEN);\n      } else {\n        return;\n      }\n      t.unshift(SCOPE_TOKEN);\n    });\n  }\n\n  function compileToken(token, options, context) {\n    token = token.filter(function (t) {\n      return t.length > 0;\n    });\n    token.forEach(sort);\n    var isArrayContext = Array.isArray(context);\n    context = options && options.context || context;\n    if (context && !isArrayContext) context = [context];\n    absolutize(token, context);\n    return token.map(function (rules) {\n      return compileRules(rules, options, context, isArrayContext);\n    }).reduce(reduceRules, falseFunc$3);\n  }\n\n  function isTraversal(t) {\n    return procedure$2[t.type] < 0;\n  }\n\n  function compileRules(rules, options, context, isArrayContext) {\n    var acceptSelf = isArrayContext && rules[0].name === \"scope\" && rules[1].type === \"descendant\";\n    return rules.reduce(function (func, rule, index) {\n      if (func === falseFunc$3) return func;\n      return general[rule.type](func, rule, options, context, acceptSelf && index === 1);\n    }, options && options.rootFunc || trueFunc$2);\n  }\n\n  function reduceRules(a, b) {\n    if (b === falseFunc$3 || a === trueFunc$2) {\n      return a;\n    }\n\n    if (a === falseFunc$3 || b === trueFunc$2) {\n      return b;\n    }\n\n    return function combine(elem) {\n      return a(elem) || b(elem);\n    };\n  } //:not, :has and :matches have to compile selectors\n  //doing this in lib/pseudos.js would lead to circular dependencies,\n  //so we add them here\n\n\n  var filters$1 = pseudos_1.filters,\n      existsOne$1 = domutils.existsOne,\n      isTag$4 = domutils.isTag,\n      getChildren$2 = domutils.getChildren;\n\n  function containsTraversal(t) {\n    return t.some(isTraversal);\n  }\n\n  filters$1.not = function (next, token, options, context) {\n    var opts = {\n      xmlMode: !!(options && options.xmlMode),\n      strict: !!(options && options.strict)\n    };\n\n    if (opts.strict) {\n      if (token.length > 1 || token.some(containsTraversal)) {\n        throw new SyntaxError(\"complex selectors in :not aren't allowed in strict mode\");\n      }\n    }\n\n    var func = compileToken(token, opts, context);\n    if (func === falseFunc$3) return next;\n    if (func === trueFunc$2) return falseFunc$3;\n    return function (elem) {\n      return !func(elem) && next(elem);\n    };\n  };\n\n  filters$1.has = function (next, token, options) {\n    var opts = {\n      xmlMode: !!(options && options.xmlMode),\n      strict: !!(options && options.strict)\n    }; //FIXME: Uses an array as a pointer to the current element (side effects)\n\n    var context = token.some(containsTraversal) ? [PLACEHOLDER_ELEMENT] : null;\n    var func = compileToken(token, opts, context);\n    if (func === falseFunc$3) return falseFunc$3;\n    if (func === trueFunc$2) return function (elem) {\n      return getChildren$2(elem).some(isTag$4) && next(elem);\n    };\n    func = wrap(func);\n\n    if (context) {\n      return function has(elem) {\n        return next(elem) && (context[0] = elem, existsOne$1(func, getChildren$2(elem)));\n      };\n    }\n\n    return function has(elem) {\n      return next(elem) && existsOne$1(func, getChildren$2(elem));\n    };\n  };\n\n  filters$1.matches = function (next, token, options, context) {\n    var opts = {\n      xmlMode: !!(options && options.xmlMode),\n      strict: !!(options && options.strict),\n      rootFunc: next\n    };\n    return compileToken(token, opts, context);\n  };\n\n  compile_1$2.compileUnsafe = compileUnsafe_1;\n  compile_1$2.compileToken = compileToken_1;\n  var cssSelect = CSSselect;\n  var findOne$1 = domutils.findOne,\n      findAll$1 = domutils.findAll,\n      getChildren$3 = domutils.getChildren,\n      removeSubsets = domutils.removeSubsets,\n      falseFunc$4 = boolbase.falseFunc,\n      compileUnsafe$1 = compile_1$2.compileUnsafe,\n      compileToken$1 = compile_1$2.compileToken;\n\n  function getSelectorFunc(searchFunc) {\n    return function select(query, elems, options) {\n      if (typeof query !== \"function\") query = compileUnsafe$1(query, options, elems);\n      if (!Array.isArray(elems)) elems = getChildren$3(elems);else elems = removeSubsets(elems);\n      return searchFunc(query, elems);\n    };\n  }\n\n  var selectAll = getSelectorFunc(function selectAll(query, elems) {\n    return query === falseFunc$4 || !elems || elems.length === 0 ? [] : findAll$1(query, elems);\n  });\n  var selectOne = getSelectorFunc(function selectOne(query, elems) {\n    return query === falseFunc$4 || !elems || elems.length === 0 ? null : findOne$1(query, elems);\n  });\n\n  function is(elem, query, options) {\n    return (typeof query === \"function\" ? query : compile_1$2(query, options))(elem);\n  }\n  /*\n  \tthe exported interface\n  */\n\n\n  function CSSselect(query, elems, options) {\n    return selectAll(query, elems, options);\n  }\n\n  CSSselect.compile = compile_1$2;\n  CSSselect.filters = pseudos_1.filters;\n  CSSselect.pseudos = pseudos_1.pseudos;\n  CSSselect.selectAll = selectAll;\n  CSSselect.selectOne = selectOne;\n  CSSselect.is = is; //legacy methods (might be removed)\n\n  CSSselect.parse = compile_1$2;\n  CSSselect.iterate = selectAll; //hooks\n\n  CSSselect._compileUnsafe = compileUnsafe$1;\n  CSSselect._compileToken = compileToken$1;\n  /**\n   * Copyright 2018 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n   * use this file except in compliance with the License. You may obtain a copy of\n   * the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n   * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n   * License for the specific language governing permissions and limitations under\n   * the License.\n   */\n\n  var PARSE5_OPTS = {\n    treeAdapter: parse5Htmlparser2TreeAdapter\n  };\n  /**\n   * Parse HTML into a mutable, serializable DOM Document.\n   * The DOM implementation is an htmlparser2 DOM enhanced with basic DOM mutation methods.\n   * @param {String} html   HTML to parse into a Document instance\n   */\n\n  function createDocument(html) {\n    var document = parse5$1.parse(html, PARSE5_OPTS);\n    defineProperties(document, DocumentExtensions); // Extend Element.prototype with DOM manipulation methods.\n\n    var scratch = document.createElement('div'); // Get a reference to the base Node class - used by createTextNode()\n\n    document.$$Node = scratch.constructor;\n    var elementProto = Object.getPrototypeOf(scratch);\n    defineProperties(elementProto, ElementExtensions);\n    elementProto.ownerDocument = document;\n    return document;\n  }\n  /**\n   * Serialize a Document to an HTML String\n   * @param {Document} document   A Document, such as one created via `createDocument()`\n   */\n\n\n  function serializeDocument(document) {\n    return parse5$1.serialize(document, PARSE5_OPTS);\n  }\n  /**\n   * Methods and descriptors to mix into Element.prototype\n   */\n\n\n  var ElementExtensions = {\n    /** @extends htmlparser2.Element.prototype */\n    nodeName: {\n      get: function get() {\n        return this.tagName.toUpperCase();\n      }\n    },\n    id: reflectedProperty('id'),\n    className: reflectedProperty('class'),\n    insertBefore: function insertBefore(child, referenceNode) {\n      if (!referenceNode) return this.appendChild(child);\n      parse5Htmlparser2TreeAdapter.insertBefore(this, child, referenceNode);\n      return child;\n    },\n    appendChild: function appendChild(child) {\n      parse5Htmlparser2TreeAdapter.appendChild(this, child);\n      return child;\n    },\n    removeChild: function removeChild(child) {\n      parse5Htmlparser2TreeAdapter.detachNode(child);\n    },\n    remove: function remove() {\n      parse5Htmlparser2TreeAdapter.detachNode(this);\n    },\n    textContent: {\n      get: function get() {\n        return getText$2(this);\n      },\n      set: function set(text) {\n        this.children = [];\n        parse5Htmlparser2TreeAdapter.insertText(this, text);\n      }\n    },\n    setAttribute: function setAttribute(name, value) {\n      if (this.attribs == null) this.attribs = {};\n      if (value == null) value = '';\n      this.attribs[name] = value;\n    },\n    removeAttribute: function removeAttribute(name) {\n      if (this.attribs != null) {\n        delete this.attribs[name];\n      }\n    },\n    getAttribute: function getAttribute(name) {\n      return this.attribs != null && this.attribs[name];\n    },\n    hasAttribute: function hasAttribute(name) {\n      return this.attribs != null && this.attribs[name] != null;\n    },\n    getAttributeNode: function getAttributeNode(name) {\n      var value = this.getAttribute(name);\n      if (value != null) return {\n        specified: true,\n        value: value\n      };\n    }\n  };\n  /**\n   * Methods and descriptors to mix into the global document instance\n   * @private\n   */\n\n  var DocumentExtensions = {\n    /** @extends htmlparser2.Document.prototype */\n    // document is just an Element in htmlparser2, giving it a nodeType of ELEMENT_NODE.\n    // TODO: verify if these are needed for css-select\n    nodeType: {\n      get: function get() {\n        return 9;\n      }\n    },\n    contentType: {\n      get: function get() {\n        return 'text/html';\n      }\n    },\n    nodeName: {\n      get: function get() {\n        return '#document';\n      }\n    },\n    documentElement: {\n      get: function get() {\n        // Find the first <html> element within the document\n        return this.childNodes.filter(function (child) {\n          return String(child.tagName).toLowerCase() === 'html';\n        });\n      }\n    },\n    compatMode: {\n      get: function get() {\n        var compatMode = {\n          'no-quirks': 'CSS1Compat',\n          quirks: 'BackCompat',\n          'limited-quirks': 'CSS1Compat'\n        };\n        return compatMode[parse5Htmlparser2TreeAdapter.getDocumentMode(this)];\n      }\n    },\n    body: {\n      get: function get() {\n        return this.querySelector('body');\n      }\n    },\n    createElement: function createElement(name) {\n      return parse5Htmlparser2TreeAdapter.createElement(name, null, []);\n    },\n    createTextNode: function createTextNode(text) {\n      // there is no dedicated createTextNode equivalent exposed in htmlparser2's DOM\n      var Node = this.$$Node;\n      return new Node({\n        type: 'text',\n        data: text,\n        parent: null,\n        prev: null,\n        next: null\n      });\n    },\n    querySelector: function querySelector(sel) {\n      if (sel === ':root') {\n        return this;\n      }\n\n      return cssSelect.selectOne(sel, this.documentElement);\n    },\n    querySelectorAll: function querySelectorAll(sel) {\n      if (sel === ':root') {\n        return this;\n      }\n\n      return cssSelect(sel, this.documentElement);\n    }\n  };\n  /**\n   * Essentially `Object.defineProperties()`, except function values are assigned as value descriptors for convenience.\n   * @private\n   */\n\n  function defineProperties(obj, properties) {\n    for (var i in properties) {\n      var value = properties[i];\n      Object.defineProperty(obj, i, typeof value === 'function' ? {\n        value: value\n      } : value);\n    }\n  }\n  /**\n   * Create a property descriptor defining a getter/setter pair alias for a named attribute.\n   * @private\n   */\n\n\n  function reflectedProperty(attributeName) {\n    return {\n      get: function get() {\n        return this.getAttribute(attributeName);\n      },\n      set: function set(value) {\n        this.setAttribute(attributeName, value);\n      }\n    };\n  }\n  /**\n   * Helper to get the text content of a node\n   * https://github.com/fb55/domutils/blob/master/src/stringify.ts#L21\n   * @private\n   */\n\n\n  function getText$2(node) {\n    if (Array.isArray(node)) return node.map(getText$2).join('');\n    if (parse5Htmlparser2TreeAdapter.isElementNode(node)) return node.name === 'br' ? '\\n' : getText$2(node.children);\n    if (parse5Htmlparser2TreeAdapter.isTextNode(node)) return node.data;\n    return '';\n  }\n  /**\n   * Copyright 2018 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n   * use this file except in compliance with the License. You may obtain a copy of\n   * the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n   * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n   * License for the specific language governing permissions and limitations under\n   * the License.\n   */\n\n  /**\n   * Parse a textual CSS Stylesheet into a Stylesheet instance.\n   * Stylesheet is a mutable ReworkCSS AST with format similar to CSSOM.\n   * @see https://github.com/reworkcss/css\n   * @private\n   * @param {String} stylesheet\n   * @returns {css.Stylesheet} ast\n   */\n\n\n  function parseStylesheet(stylesheet) {\n    return css$1.parse(stylesheet);\n  }\n  /**\n   * Serialize a ReworkCSS Stylesheet to a String of CSS.\n   * @private\n   * @param {css.Stylesheet} ast          A Stylesheet to serialize, such as one returned from `parseStylesheet()`\n   * @param {Object} options              Options to pass to `css.stringify()`\n   * @param {Boolean} [options.compress]  Compress CSS output (removes comments, whitespace, etc)\n   */\n\n\n  function serializeStylesheet(ast, options) {\n    return css$1.stringify(ast, options);\n  }\n  /**\n   * Converts a walkStyleRules() iterator to mark nodes with `.$$remove=true` instead of actually removing them.\n   * This means they can be removed in a second pass, allowing the first pass to be nondestructive (eg: to preserve mirrored sheets).\n   * @private\n   * @param {Function} iterator   Invoked on each node in the tree. Return `false` to remove that node.\n   * @returns {(rule) => void} nonDestructiveIterator\n   */\n\n\n  function markOnly(predicate) {\n    return function (rule) {\n      var sel = rule.selectors;\n\n      if (predicate(rule) === false) {\n        rule.$$remove = true;\n      }\n\n      rule.$$markedSelectors = rule.selectors;\n\n      if (rule._other) {\n        rule._other.$$markedSelectors = rule._other.selectors;\n      }\n\n      rule.selectors = sel;\n    };\n  }\n  /**\n   * Apply filtered selectors to a rule from a previous markOnly run.\n   * @private\n   * @param {css.Rule} rule The Rule to apply marked selectors to (if they exist).\n  */\n\n\n  function applyMarkedSelectors(rule) {\n    if (rule.$$markedSelectors) {\n      rule.selectors = rule.$$markedSelectors;\n    }\n\n    if (rule._other) {\n      applyMarkedSelectors(rule._other);\n    }\n  }\n  /**\n   * Recursively walk all rules in a stylesheet.\n   * @private\n   * @param {css.Rule} node       A Stylesheet or Rule to descend into.\n   * @param {Function} iterator   Invoked on each node in the tree. Return `false` to remove that node.\n   */\n\n\n  function walkStyleRules(node, iterator) {\n    if (node.stylesheet) return walkStyleRules(node.stylesheet, iterator);\n    node.rules = node.rules.filter(function (rule) {\n      if (rule.rules) {\n        walkStyleRules(rule, iterator);\n      }\n\n      rule._other = undefined;\n      rule.filterSelectors = filterSelectors;\n      return iterator(rule) !== false;\n    });\n  }\n  /**\n   * Recursively walk all rules in two identical stylesheets, filtering nodes into one or the other based on a predicate.\n   * @private\n   * @param {css.Rule} node       A Stylesheet or Rule to descend into.\n   * @param {css.Rule} node2      A second tree identical to `node`\n   * @param {Function} iterator   Invoked on each node in the tree. Return `false` to remove that node from the first tree, true to remove it from the second.\n   */\n\n\n  function walkStyleRulesWithReverseMirror(node, node2, iterator) {\n    if (node2 === null) return walkStyleRules(node, iterator);\n    if (node.stylesheet) return walkStyleRulesWithReverseMirror(node.stylesheet, node2.stylesheet, iterator);\n\n    var _splitFilter = splitFilter(node.rules, node2.rules, function (rule, index, rules, rules2) {\n      var rule2 = rules2[index];\n\n      if (rule.rules) {\n        walkStyleRulesWithReverseMirror(rule, rule2, iterator);\n      }\n\n      rule._other = rule2;\n      rule.filterSelectors = filterSelectors;\n      return iterator(rule) !== false;\n    });\n\n    var _splitFilter2 = _slicedToArray(_splitFilter, 2);\n\n    node.rules = _splitFilter2[0];\n    node2.rules = _splitFilter2[1];\n  } // Like [].filter(), but applies the opposite filtering result to a second copy of the Array without a second pass.\n  // This is just a quicker version of generating the compliment of the set returned from a filter operation.\n\n\n  function splitFilter(a, b, predicate) {\n    var aOut = [];\n    var bOut = [];\n\n    for (var index = 0; index < a.length; index++) {\n      if (predicate(a[index], index, a, b)) {\n        aOut.push(a[index]);\n      } else {\n        bOut.push(a[index]);\n      }\n    }\n\n    return [aOut, bOut];\n  } // can be invoked on a style rule to subset its selectors (with reverse mirroring)\n\n\n  function filterSelectors(predicate) {\n    if (this._other) {\n      var _splitFilter3 = splitFilter(this.selectors, this._other.selectors, predicate),\n          _splitFilter4 = _slicedToArray(_splitFilter3, 2),\n          a = _splitFilter4[0],\n          b = _splitFilter4[1];\n\n      this.selectors = a;\n      this._other.selectors = b;\n    } else {\n      this.selectors = this.selectors.filter(predicate);\n    }\n  }\n\n  var logger = {\n    warn: function warn(msg) {\n      console.error(chalk$1.yellow(msg));\n    },\n    error: function error(msg) {\n      console.error(chalk$1.bold.red(msg));\n    },\n    log: function log(msg) {\n      console.log(msg);\n    },\n    info: function info(msg) {\n      console.log(chalk$1.bold.blue(msg));\n    }\n  };\n  /**\n   * Copyright 2018 Google LLC\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n   * use this file except in compliance with the License. You may obtain a copy of\n   * the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n   * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n   * License for the specific language governing permissions and limitations under\n   * the License.\n   */\n\n  /**\n   * The mechanism to use for lazy-loading stylesheets.\n   * _[JS]_ indicates that a strategy requires JavaScript (falls back to `<noscript>`).\n   *\n   * - **default:** Move stylesheet links to the end of the document and insert preload meta tags in their place.\n   * - **\"body\":** Move all external stylesheet links to the end of the document.\n   * - **\"media\":** Load stylesheets asynchronously by adding `media=\"not x\"` and removing once loaded. _[JS]_\n   * - **\"swap\":** Convert stylesheet links to preloads that swap to `rel=\"stylesheet\"` once loaded. _[JS]_\n   * - **\"js\":** Inject an asynchronous CSS loader similar to [LoadCSS](https://github.com/filamentgroup/loadCSS) and use it to load stylesheets. _[JS]_\n   * - **\"js-lazy\":** Like `\"js\"`, but the stylesheet is disabled until fully loaded.\n   * @typedef {(default|'body'|'media'|'swap'|'js'|'js-lazy')} PreloadStrategy\n   * @public\n   */\n\n  /**\n   * Controls which keyframes rules are inlined.\n   *\n   * - **\"critical\":** _(default)_ inline keyframes rules that are used by the critical CSS.\n   * - **\"all\":** Inline all keyframes rules.\n   * - **\"none\":** Remove all keyframes rules.\n   * @typedef {('critical'|'all'|'none')} KeyframeStrategy\n   * @private\n   * @property {String} keyframes     Which {@link KeyframeStrategy keyframe strategy} to use (default: `critical`)_\n   */\n\n  /**\n   * Controls log level of the plugin. Specifies the level the logger should use. A logger will\n   * not produce output for any log level beneath the specified level. Available levels and order\n   * are:\n   *\n   * - **\"info\"** _(default)_\n   * - **\"warn\"**\n   * - **\"error\"**\n   * - **\"trace\"**\n   * - **\"debug\"**\n   * - **\"silent\"**\n   * @typedef {('info'|'warn'|'error'|'trace'|'debug'|'silent')} LogLevel\n   * @public\n   */\n\n  /**\n   * All optional. Pass them to `new Critters({ ... })`.\n   * @public\n   * @typedef Options\n   * @property {String} path     Base path location of the CSS files _(default: `''`)_\n   * @property {String} publicPath     Public path of the CSS resources. This prefix is removed from the href _(default: `''`)_\n   * @property {Boolean} external     Inline styles from external stylesheets _(default: `true`)_\n   * @property {Number} inlineThreshold Inline external stylesheets smaller than a given size _(default: `0`)_\n   * @property {Number} minimumExternalSize If the non-critical external stylesheet would be below this size, just inline it _(default: `0`)_\n   * @property {Boolean} pruneSource  Remove inlined rules from the external stylesheet _(default: `false`)_\n   * @property {Boolean} mergeStylesheets Merged inlined stylesheets into a single <style> tag _(default: `true`)_\n   * @property {String[]} additionalStylesheets Glob for matching other stylesheets to be used while looking for critical CSS _(default: ``)_.\n   * @property {String} preload       Which {@link PreloadStrategy preload strategy} to use\n   * @property {Boolean} noscriptFallback Add `<noscript>` fallback to JS-based strategies\n   * @property {Boolean} inlineFonts  Inline critical font-face rules _(default: `false`)_\n   * @property {Boolean} preloadFonts Preloads critical fonts _(default: `true`)_\n   * @property {Boolean} fonts        Shorthand for setting `inlineFonts`+`preloadFonts`\n   *  - Values:\n   *  - `true` to inline critical font-face rules and preload the fonts\n   *  - `false` to don't inline any font-face rules and don't preload fonts\n   * @property {String} keyframes     Controls which keyframes rules are inlined.\n   *  - Values:\n   *  - `\"critical\"`: _(default)_ inline keyframes rules used by the critical CSS\n   *  - `\"all\"` inline all keyframes rules\n   *  - `\"none\"` remove all keyframes rules\n   * @property {Boolean} compress     Compress resulting critical CSS _(default: `true`)_\n   * @property {String} logLevel      Controls {@link LogLevel log level} of the plugin _(default: `\"info\"`)_\n   * @property {Boolean} ssrMode      Optimizes for SSR _(default: `false`)_\n   */\n\n  function _catch(body, recover) {\n    try {\n      var result = body();\n    } catch (e) {\n      return recover(e);\n    }\n\n    if (result && result.then) {\n      return result.then(void 0, recover);\n    }\n\n    return result;\n  }\n\n  var Critters = /*#__PURE__*/function () {\n    /** @private */\n    function Critters(options) {\n      _classCallCheck(this, Critters);\n\n      this.options = Object.assign({\n        logLevel: 'info',\n        path: '',\n        publicPath: '',\n        reduceInlineStyles: true,\n        pruneSource: false,\n        additionalStylesheets: [],\n        ssrMode: false\n      }, options || {});\n      this.urlFilter = this.options.filter;\n\n      if (this.urlFilter instanceof RegExp) {\n        this.urlFilter = this.urlFilter.test.bind(this.urlFilter);\n      }\n\n      this.logger = this.options.logger || logger;\n    }\n    /**\n     * Read the contents of a file from the specified filesystem or disk\n     */\n\n\n    return _createClass(Critters, [{\n      key: \"readFile\",\n      value: function readFile(filename) {\n        var fs$1 = this.fs;\n        return new Promise(function (resolve, reject) {\n          var callback = function callback(err, data) {\n            if (err) reject(err);else resolve(data);\n          };\n\n          if (fs$1 && fs$1.readFile) {\n            fs$1.readFile(filename, callback);\n          } else {\n            fs.readFile(filename, 'utf8', callback);\n          }\n        });\n      }\n      /**\n       * Apply critical CSS processing to the html\n       */\n\n    }, {\n      key: \"process\",\n      value: function (_process) {\n        function process(_x) {\n          return _process.apply(this, arguments);\n        }\n\n        process.toString = function () {\n          return _process.toString();\n        };\n\n        return process;\n      }(function (html) {\n        try {\n          var _temp4 = function _temp4() {\n            // go through all the style tags in the document and reduce them to only critical CSS\n            var styles = _this.getAffectedStyleTags(document);\n\n            return Promise.resolve(Promise.all(styles.map(function (style) {\n              return _this.processStyle(style, document);\n            }))).then(function () {\n              function _temp2() {\n                // serialize the document back to HTML and we're done\n                var output = serializeDocument(document);\n                var end = process.hrtime.bigint();\n\n                _this.logger.log('Time ' + parseFloat(end - start) / 1000000.0);\n\n                return output;\n              }\n\n              var _temp = function () {\n                if (_this.options.mergeStylesheets !== false && styles.length !== 0) {\n                  return Promise.resolve(_this.mergeStylesheets(document)).then(function () {});\n                }\n              }();\n\n              return _temp && _temp.then ? _temp.then(_temp2) : _temp2(_temp);\n            });\n          };\n\n          var _this = this;\n\n          var start = process.hrtime.bigint(); // Parse the generated HTML in a DOM we can mutate\n\n          var document = createDocument(html);\n\n          if (_this.options.additionalStylesheets.length > 0) {\n            _this.embedAdditionalStylesheet(document);\n          } // `external:false` skips processing of external sheets\n\n\n          var _temp3 = function () {\n            if (_this.options.external !== false) {\n              var externalSheets = [].slice.call(document.querySelectorAll('link[rel=\"stylesheet\"]'));\n              return Promise.resolve(Promise.all(externalSheets.map(function (link) {\n                return _this.embedLinkedStylesheet(link, document);\n              }))).then(function () {});\n            }\n          }();\n\n          return Promise.resolve(_temp3 && _temp3.then ? _temp3.then(_temp4) : _temp4(_temp3));\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }\n      /**\n       * Get the style tags that need processing\n       */\n      )\n    }, {\n      key: \"getAffectedStyleTags\",\n      value: function getAffectedStyleTags(document) {\n        var styles = [].slice.call(document.querySelectorAll('style')); // `inline:false` skips processing of inline stylesheets\n\n        if (this.options.reduceInlineStyles === false) {\n          return styles.filter(function (style) {\n            return style.$$external;\n          });\n        }\n\n        return styles;\n      }\n    }, {\n      key: \"mergeStylesheets\",\n      value: function mergeStylesheets(document) {\n        try {\n          var _this2 = this;\n\n          var styles = _this2.getAffectedStyleTags(document);\n\n          if (styles.length === 0) {\n            _this2.logger.warn('Merging inline stylesheets into a single <style> tag skipped, no inline stylesheets to merge');\n\n            return Promise.resolve();\n          }\n\n          var first = styles[0];\n          var sheet = first.textContent; // console.log(sheet);\n\n          for (var i = 1; i < styles.length; i++) {\n            var node = styles[i];\n            sheet += node.textContent;\n            node.remove();\n          } // if (!this.options.ssrMode && this.options.compress !== false) {\n          //   const before = sheet;\n          //   const processor = postcss([cssnano()]);\n          //   const result = await processor.process(before, { from: undefined });\n          //   // @todo sourcemap support (elsewhere first)\n          //   sheet = result.css;\n          // }\n\n\n          first.textContent = sheet;\n          return Promise.resolve();\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }\n      /**\n       * Given href, find the corresponding CSS asset\n       */\n\n    }, {\n      key: \"getCssAsset\",\n      value: function getCssAsset(href) {\n        try {\n          var _this3 = this;\n\n          var outputPath = _this3.options.path;\n          var publicPath = _this3.options.publicPath; // CHECK - the output path\n          // path on disk (with output.publicPath removed)\n\n          var normalizedPath = href.replace(/^\\//, '');\n          var pathPrefix = (publicPath || '').replace(/(^\\/|\\/$)/g, '') + '/';\n\n          if (normalizedPath.indexOf(pathPrefix) === 0) {\n            normalizedPath = normalizedPath.substring(pathPrefix.length).replace(/^\\//, '');\n          }\n\n          var filename = path$1.resolve(outputPath, normalizedPath);\n          var sheet;\n\n          var _temp5 = _catch(function () {\n            return Promise.resolve(_this3.readFile(filename)).then(function (_this3$readFile) {\n              sheet = _this3$readFile;\n            });\n          }, function () {\n            _this3.logger.warn(\"Unable to locate stylesheet: \".concat(filename));\n          });\n\n          return Promise.resolve(_temp5 && _temp5.then ? _temp5.then(function () {\n            return sheet;\n          }) : sheet);\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }\n    }, {\n      key: \"checkInlineThreshold\",\n      value: function checkInlineThreshold(link, style, sheet) {\n        if (this.options.inlineThreshold && sheet.length < this.options.inlineThreshold) {\n          var href = style.$$name;\n          style.$$reduce = false;\n          this.logger.info(\"\\x1B[32mInlined all of \".concat(href, \" (\").concat(sheet.length, \" was below the threshold of \").concat(this.options.inlineThreshold, \")\\x1B[39m\"));\n          link.remove();\n          return true;\n        }\n\n        return false;\n      }\n      /**\n       * Inline the stylesheets from options.additionalStylesheets (assuming it passes `options.filter`)\n       */\n\n    }, {\n      key: \"embedAdditionalStylesheet\",\n      value: function embedAdditionalStylesheet(document) {\n        try {\n          var _this4 = this;\n\n          var styleSheetsIncluded = [];\n          return Promise.resolve(Promise.all(_this4.options.additionalStylesheets.map(function (cssFile) {\n            if (styleSheetsIncluded.includes(cssFile)) {\n              return;\n            }\n\n            styleSheetsIncluded.push(cssFile);\n            var style = document.createElement('style');\n            style.$$external = true;\n            return _this4.getCssAsset(cssFile, style).then(function (sheet) {\n              return [sheet, style];\n            });\n          }))).then(function (sources) {\n            sources.forEach(function (_ref) {\n              var _ref2 = _slicedToArray(_ref, 2),\n                  sheet = _ref2[0],\n                  style = _ref2[1];\n\n              if (!sheet) return;\n              style.textContent = sheet;\n              document.head.appendChild(style);\n            });\n          });\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }\n      /**\n       * Inline the target stylesheet referred to by a <link rel=\"stylesheet\"> (assuming it passes `options.filter`)\n       */\n\n    }, {\n      key: \"embedLinkedStylesheet\",\n      value: function embedLinkedStylesheet(link, document) {\n        try {\n          var _this5 = this;\n\n          var href = link.getAttribute('href');\n          var media = link.getAttribute('media');\n          var preloadMode = _this5.options.preload; // skip filtered resources, or network resources if no filter is provided\n\n          if (_this5.urlFilter ? _this5.urlFilter(href) : !(href || '').match(/\\.css$/)) {\n            return Promise.resolve();\n          } // the reduced critical CSS gets injected into a new <style> tag\n\n\n          var style = document.createElement('style');\n          style.$$external = true;\n          return Promise.resolve(_this5.getCssAsset(href, style)).then(function (sheet) {\n            if (!sheet) {\n              return;\n            }\n\n            style.textContent = sheet;\n            style.$$name = href;\n            style.$$links = [link];\n            link.parentNode.insertBefore(style, link);\n\n            if (_this5.checkInlineThreshold(link, style, sheet)) {\n              return;\n            } // CSS loader is only injected for the first sheet, then this becomes an empty string\n\n\n            var cssLoaderPreamble = \"function $loadcss(u,m,l){(l=document.createElement('link')).rel='stylesheet';l.href=u;document.head.appendChild(l)}\";\n            var lazy = preloadMode === 'js-lazy';\n\n            if (lazy) {\n              cssLoaderPreamble = cssLoaderPreamble.replace('l.href', \"l.media='print';l.onload=function(){l.media=m};l.href\");\n            } // Allow disabling any mutation of the stylesheet link:\n\n\n            if (preloadMode === false) return;\n            var noscriptFallback = false;\n\n            if (preloadMode === 'body') {\n              document.body.appendChild(link);\n            } else {\n              link.setAttribute('rel', 'preload');\n              link.setAttribute('as', 'style');\n\n              if (preloadMode === 'js' || preloadMode === 'js-lazy') {\n                var script = document.createElement('script');\n                var js = \"\".concat(cssLoaderPreamble, \"$loadcss(\").concat(JSON.stringify(href)).concat(lazy ? ',' + JSON.stringify(media || 'all') : '', \")\"); // script.appendChild(document.createTextNode(js));\n\n                script.textContent = js;\n                link.parentNode.insertBefore(script, link.nextSibling);\n                style.$$links.push(script);\n                cssLoaderPreamble = '';\n                noscriptFallback = true;\n              } else if (preloadMode === 'media') {\n                // @see https://github.com/filamentgroup/loadCSS/blob/af1106cfe0bf70147e22185afa7ead96c01dec48/src/loadCSS.js#L26\n                link.setAttribute('rel', 'stylesheet');\n                link.removeAttribute('as');\n                link.setAttribute('media', 'print');\n                link.setAttribute('onload', \"this.media='\".concat(media || 'all', \"'\"));\n                noscriptFallback = true;\n              } else if (preloadMode === 'swap') {\n                link.setAttribute('onload', \"this.rel='stylesheet'\");\n                noscriptFallback = true;\n              } else {\n                var bodyLink = document.createElement('link');\n                bodyLink.setAttribute('rel', 'stylesheet');\n                if (media) bodyLink.setAttribute('media', media);\n                bodyLink.setAttribute('href', href);\n                document.body.appendChild(bodyLink);\n                style.$$links.push(bodyLink);\n              }\n            }\n\n            if (_this5.options.noscriptFallback !== false && noscriptFallback) {\n              var noscript = document.createElement('noscript');\n              var noscriptLink = document.createElement('link');\n              noscriptLink.setAttribute('rel', 'stylesheet');\n              noscriptLink.setAttribute('href', href);\n              if (media) noscriptLink.setAttribute('media', media);\n              noscript.appendChild(noscriptLink);\n              link.parentNode.insertBefore(noscript, link.nextSibling);\n              style.$$links.push(noscript);\n            }\n          });\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }\n      /**\n       * Prune the source CSS files\n       */\n\n    }, {\n      key: \"pruneSource\",\n      value: function pruneSource(style, before, sheetInverse) {\n        // if external stylesheet would be below minimum size, just inline everything\n        var minSize = this.options.minimumExternalSize;\n        var name = style.$$name;\n\n        if (minSize && sheetInverse.length < minSize) {\n          this.logger.info(\"\\x1B[32mInlined all of \".concat(name, \" (non-critical external stylesheet would have been \").concat(sheetInverse.length, \"b, which was below the threshold of \").concat(minSize, \")\\x1B[39m\"));\n          style.textContent = before; // remove any associated external resources/loaders:\n\n          if (style.$$links) {\n            var _iterator = _createForOfIteratorHelper(style.$$links),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var link = _step.value;\n                var _parent = link.parentNode;\n                if (_parent) _parent.removeChild(link);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      }\n      /**\n       * Parse the stylesheet within a <style> element, then reduce it to contain only rules used by the document.\n       */\n\n    }, {\n      key: \"processStyle\",\n      value: function processStyle(style, document) {\n        try {\n          var _this6 = this;\n\n          if (style.$$reduce === false) return Promise.resolve();\n          var name = style.$$name ? style.$$name.replace(/^\\//, '') : 'inline CSS';\n          var options = _this6.options; // const document = style.ownerDocument;\n\n          var head = document.querySelector('head');\n          var keyframesMode = options.keyframes || 'critical'; // we also accept a boolean value for options.keyframes\n\n          if (keyframesMode === true) keyframesMode = 'all';\n          if (keyframesMode === false) keyframesMode = 'none';\n          var sheet = style.textContent; // store a reference to the previous serialized stylesheet for reporting stats\n\n          var before = sheet; // Skip empty stylesheets\n\n          if (!sheet) return Promise.resolve();\n\n          var _ast = parseStylesheet(sheet);\n\n          var astInverse = options.pruneSource ? parseStylesheet(sheet) : null; // a string to search for font names (very loose)\n\n          var criticalFonts = '';\n          var failedSelectors = [];\n          var criticalKeyframeNames = []; // Walk all CSS rules, marking unused rules with `.$$remove=true` for removal in the second pass.\n          // This first pass is also used to collect font and keyframe usage used in the second pass.\n\n          walkStyleRules(_ast, markOnly(function (rule) {\n            if (rule.type === 'rule') {\n              // Filter the selector list down to only those match\n              rule.filterSelectors(function (sel) {\n                // Strip pseudo-elements and pseudo-classes, since we only care that their associated elements exist.\n                // This means any selector for a pseudo-element or having a pseudo-class will be inlined if the rest of the selector matches.\n                if (sel !== ':root') {\n                  sel = sel.replace(/(?<!\\\\)::?[a-z-]+(?![a-z-(])/gi, '').replace(/::?not\\(\\s*\\)/g, '').trim();\n                }\n\n                if (!sel) return false;\n\n                try {\n                  return document.querySelector(sel) != null;\n                } catch (e) {\n                  failedSelectors.push(sel + ' -> ' + e.message);\n                  return false;\n                }\n              }); // If there are no matched selectors, remove the rule:\n\n              if (rule.selectors.length === 0) {\n                return false;\n              }\n\n              if (rule.declarations) {\n                for (var i = 0; i < rule.declarations.length; i++) {\n                  var decl = rule.declarations[i]; // detect used fonts\n\n                  if (decl.property && decl.property.match(/\\bfont(-family)?\\b/i)) {\n                    criticalFonts += ' ' + decl.value;\n                  } // detect used keyframes\n\n\n                  if (decl.property === 'animation' || decl.property === 'animation-name') {\n                    // @todo: parse animation declarations and extract only the name. for now we'll do a lazy match.\n                    var names = decl.value.split(/\\s+/);\n\n                    for (var j = 0; j < names.length; j++) {\n                      var _name = names[j].trim();\n\n                      if (_name) criticalKeyframeNames.push(_name);\n                    }\n                  }\n                }\n              }\n            } // keep font rules, they're handled in the second pass:\n\n\n            if (rule.type === 'font-face') return; // If there are no remaining rules, remove the whole rule:\n\n            var rules = rule.rules && rule.rules.filter(function (rule) {\n              return !rule.$$remove;\n            });\n            return !rules || rules.length !== 0;\n          }));\n\n          if (failedSelectors.length !== 0) {\n            _this6.logger.warn(\"\".concat(failedSelectors.length, \" rules skipped due to selector errors:\\n  \").concat(failedSelectors.join('\\n  ')));\n          }\n\n          var shouldPreloadFonts = options.fonts === true || options.preloadFonts === true;\n          var shouldInlineFonts = options.fonts !== false && options.inlineFonts === true;\n          var preloadedFonts = []; // Second pass, using data picked up from the first\n\n          walkStyleRulesWithReverseMirror(_ast, astInverse, function (rule) {\n            // remove any rules marked in the first pass\n            if (rule.$$remove === true) return false;\n            applyMarkedSelectors(rule); // prune @keyframes rules\n\n            if (rule.type === 'keyframes') {\n              if (keyframesMode === 'none') return false;\n              if (keyframesMode === 'all') return true;\n              return criticalKeyframeNames.indexOf(rule.name) !== -1;\n            } // prune @font-face rules\n\n\n            if (rule.type === 'font-face') {\n              var family, src;\n\n              for (var i = 0; i < rule.declarations.length; i++) {\n                var decl = rule.declarations[i];\n\n                if (decl.property === 'src') {\n                  // @todo parse this properly and generate multiple preloads with type=\"font/woff2\" etc\n                  src = (decl.value.match(/url\\s*\\(\\s*(['\"]?)(.+?)\\1\\s*\\)/) || [])[2];\n                } else if (decl.property === 'font-family') {\n                  family = decl.value;\n                }\n              }\n\n              if (src && shouldPreloadFonts && preloadedFonts.indexOf(src) === -1) {\n                preloadedFonts.push(src);\n                var preload = document.createElement('link');\n                preload.setAttribute('rel', 'preload');\n                preload.setAttribute('as', 'font');\n                preload.setAttribute('crossorigin', 'anonymous');\n                preload.setAttribute('href', src.trim());\n                head.appendChild(preload);\n              } // if we're missing info, if the font is unused, or if critical font inlining is disabled, remove the rule:\n\n\n              if (!family || !src || criticalFonts.indexOf(family) === -1 || !shouldInlineFonts) {\n                return false;\n              }\n            }\n          });\n          sheet = serializeStylesheet(_ast, {\n            compress: _this6.options.compress !== false\n          }).trim(); // If all rules were removed, get rid of the style element entirely\n\n          if (sheet.trim().length === 0) {\n            if (style.parentNode) {\n              style.remove();\n            }\n\n            return Promise.resolve();\n          }\n\n          var afterText = '';\n          var styleInlinedCompletely = false;\n\n          if (options.pruneSource) {\n            var sheetInverse = serializeStylesheet(astInverse, {\n              compress: _this6.options.compress !== false\n            });\n            styleInlinedCompletely = _this6.pruneSource(style, before, sheetInverse);\n\n            if (styleInlinedCompletely) {\n              var _percent = sheetInverse.length / before.length * 100;\n\n              afterText = \", reducing non-inlined size \".concat(_percent | 0, \"% to \").concat(prettyBytes$1(sheetInverse.length));\n            }\n          } // replace the inline stylesheet with its critical'd counterpart\n\n\n          if (!styleInlinedCompletely) {\n            style.textContent = sheet;\n          } // output stats\n\n\n          var percent = sheet.length / before.length * 100 | 0;\n\n          _this6.logger.info(\"\\x1B[32mInlined \" + prettyBytes$1(sheet.length) + ' (' + percent + '% of original ' + prettyBytes$1(before.length) + ') of ' + name + afterText + \".\\x1B[39m\");\n\n          return Promise.resolve();\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }\n    }]);\n  }();\n\n  module.exports = Critters;\n});\nvar Critters = unwrapExports(critters);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar CrittersExtended = /*#__PURE__*/function (_Critters) {\n  function CrittersExtended(optionsExtended, resourceCache) {\n    var _this7;\n\n    _classCallCheck(this, CrittersExtended);\n\n    _this7 = _callSuper(this, CrittersExtended, [{\n      logger: {\n        warn: function warn(s) {\n          return _this7.warnings.push(s);\n        },\n        error: function error(s) {\n          return _this7.errors.push(s);\n        },\n        log: function log() {},\n        info: function info() {}\n      },\n      path: optionsExtended.outputPath,\n      publicPath: optionsExtended.deployUrl,\n      compress: !!optionsExtended.minify,\n      pruneSource: false,\n      reduceInlineStyles: false,\n      mergeStylesheets: false,\n      preload: 'media',\n      noscriptFallback: true,\n      inlineFonts: true\n    }]);\n    _this7.optionsExtended = optionsExtended;\n    _this7.resourceCache = resourceCache;\n    _this7.warnings = [];\n    _this7.errors = [];\n    return _this7;\n  }\n\n  _inherits(CrittersExtended, _Critters);\n\n  return _createClass(CrittersExtended, [{\n    key: \"readFile\",\n    value: function readFile(path) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var resourceContent;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              resourceContent = this.resourceCache.get(path);\n\n              if (!(resourceContent === undefined)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 4;\n              return _readFile(path, 'utf-8');\n\n            case 4:\n              resourceContent = _context2.sent;\n              this.resourceCache.set(path, resourceContent);\n\n            case 6:\n              return _context2.abrupt(\"return\", resourceContent);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n    }\n  }]);\n}(Critters);\n\nvar InlineCriticalCssProcessor = /*#__PURE__*/function () {\n  function InlineCriticalCssProcessor(options) {\n    _classCallCheck(this, InlineCriticalCssProcessor);\n\n    this.options = options;\n    this.resourceCache = new Map();\n  }\n\n  return _createClass(InlineCriticalCssProcessor, [{\n    key: \"process\",\n    value: function process(html, options) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var critters, content;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              critters = new CrittersExtended(Object.assign(Object.assign({}, this.options), options), this.resourceCache);\n              _context3.next = 3;\n              return critters.process(html);\n\n            case 3:\n              content = _context3.sent;\n              return _context3.abrupt(\"return\", {\n                content: content,\n                errors: critters.errors,\n                warnings: critters.warnings\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n    }\n  }]);\n}();\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\n\n\nvar CommonEngine = /*#__PURE__*/function () {\n  function CommonEngine(moduleOrFactory) {\n    var providers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, CommonEngine);\n\n    this.moduleOrFactory = moduleOrFactory;\n    this.providers = providers;\n    this.factoryCacheMap = new Map();\n    this.templateCache = new Map();\n    this.pageExists = new Map();\n    this.inlineCriticalCssProcessor = new InlineCriticalCssProcessor({\n      minify: true\n    });\n  }\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n\n\n  return _createClass(CommonEngine, [{\n    key: \"render\",\n    value: function render(opts) {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var url, pathname, pagePath, pageExists, extraProviders, doc, moduleOrFactory, factory, html, _yield$this$inlineCri, content, errors, warnings;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(opts.publicPath && opts.documentFilePath && opts.url !== undefined)) {\n                _context4.next = 13;\n                break;\n              }\n\n              url = new URL(opts.url); // Remove leading forward slash.\n\n              pathname = url.pathname.substring(1);\n              pagePath = resolve(opts.publicPath, pathname, 'index.html');\n\n              if (!(pagePath !== resolve(opts.documentFilePath))) {\n                _context4.next = 13;\n                break;\n              }\n\n              // View path doesn't match with prerender path.\n              pageExists = this.pageExists.get(pagePath);\n\n              if (!(pageExists === undefined)) {\n                _context4.next = 11;\n                break;\n              }\n\n              _context4.next = 9;\n              return exists(pagePath);\n\n            case 9:\n              pageExists = _context4.sent;\n              this.pageExists.set(pagePath, pageExists);\n\n            case 11:\n              if (!pageExists) {\n                _context4.next = 13;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", _readFile(pagePath, 'utf-8'));\n\n            case 13:\n              // if opts.document dosen't exist then opts.documentFilePath must\n              extraProviders = [].concat(_toConsumableArray(opts.providers || []), _toConsumableArray(this.providers || []));\n              doc = opts.document;\n\n              if (!(!doc && opts.documentFilePath)) {\n                _context4.next = 19;\n                break;\n              }\n\n              _context4.next = 18;\n              return this.getDocument(opts.documentFilePath);\n\n            case 18:\n              doc = _context4.sent;\n\n            case 19:\n              if (doc) {\n                extraProviders.push({\n                  provide: INITIAL_CONFIG,\n                  useValue: {\n                    document: opts.inlineCriticalCss // Workaround for https://github.com/GoogleChromeLabs/critters/issues/64\n                    ? doc.replace(/ media=\\\"print\\\" onload=\\\"this\\.media='all'\"><noscript><link .+?><\\/noscript>/g, '>') : doc,\n                    url: opts.url\n                  }\n                });\n              }\n\n              moduleOrFactory = this.moduleOrFactory || opts.bootstrap;\n              _context4.next = 23;\n              return this.getFactory(moduleOrFactory);\n\n            case 23:\n              factory = _context4.sent;\n              _context4.next = 26;\n              return renderModuleFactory(factory, {\n                extraProviders: extraProviders\n              });\n\n            case 26:\n              html = _context4.sent;\n\n              if (opts.inlineCriticalCss) {\n                _context4.next = 29;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", html);\n\n            case 29:\n              _context4.next = 31;\n              return this.inlineCriticalCssProcessor.process(html, {\n                outputPath: (_a = opts.publicPath) !== null && _a !== void 0 ? _a : opts.documentFilePath ? dirname(opts.documentFilePath) : undefined\n              });\n\n            case 31:\n              _yield$this$inlineCri = _context4.sent;\n              content = _yield$this$inlineCri.content;\n              errors = _yield$this$inlineCri.errors;\n              warnings = _yield$this$inlineCri.warnings;\n              // tslint:disable-next-line: no-console\n              warnings.forEach(function (m) {\n                return console.warn(m);\n              }); // tslint:disable-next-line: no-console\n\n              errors.forEach(function (m) {\n                return console.error(m);\n              });\n              return _context4.abrupt(\"return\", content);\n\n            case 38:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n    }\n    /** Return the factory for a given engine instance */\n\n  }, {\n    key: \"getFactory\",\n    value: function getFactory(moduleOrFactory) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var moduleFactory, factory;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(moduleOrFactory instanceof NgModuleFactory)) {\n                _context5.next = 4;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", moduleOrFactory);\n\n            case 4:\n              // we're in JIT mode\n              moduleFactory = this.factoryCacheMap.get(moduleOrFactory); // If module factory is cached\n\n              if (!moduleFactory) {\n                _context5.next = 7;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", moduleFactory);\n\n            case 7:\n              _context5.next = 9;\n              return this.getCompiler().compileModuleAsync(moduleOrFactory);\n\n            case 9:\n              factory = _context5.sent;\n              this.factoryCacheMap.set(moduleOrFactory, factory);\n              return _context5.abrupt(\"return\", factory);\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n    }\n    /** Retrieve the document from the cache or the filesystem */\n\n  }, {\n    key: \"getDocument\",\n    value: function getDocument(filePath) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var doc;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              doc = this.templateCache.get(filePath);\n\n              if (doc) {\n                _context6.next = 6;\n                break;\n              }\n\n              _context6.next = 4;\n              return _readFile(filePath, 'utf-8');\n\n            case 4:\n              doc = _context6.sent;\n              this.templateCache.set(filePath, doc);\n\n            case 6:\n              return _context6.abrupt(\"return\", doc);\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n    }\n    /** Return an instance of the platformServer compiler */\n\n  }, {\n    key: \"getCompiler\",\n    value: function getCompiler() {\n      var compilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n      return compilerFactory.createCompiler([{\n        providers: [{\n          provide: ResourceLoader,\n          useClass: FileLoader,\n          deps: []\n        }]\n      }]);\n    }\n  }]);\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CommonEngine as ɵCommonEngine, InlineCriticalCssProcessor as ɵInlineCriticalCssProcessor }; //# sourceMappingURL=engine.js.map","map":null,"metadata":{},"sourceType":"module"}
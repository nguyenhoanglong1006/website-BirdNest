{"ast":null,"code":"import _toConsumableArray from \"/Users/nguyenlong/Project/BirdNest/client-website-BirdNest/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { ɵCommonEngine } from '@nguniversal/common/engine';\nimport { REQUEST, RESPONSE } from '@nguniversal/express-engine/tokens';\n/**\n * This is an express engine for handling Angular Applications\n */\n\nfunction ngExpressEngine(setupOptions) {\n  var engine = new ɵCommonEngine(setupOptions.bootstrap, setupOptions.providers);\n  return function (filePath, options, callback) {\n    var _a, _b, _c, _d;\n\n    try {\n      var renderOptions = Object.assign({}, options);\n\n      if (!setupOptions.bootstrap && !renderOptions.bootstrap) {\n        throw new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped');\n      }\n\n      var req = renderOptions.req;\n      var res = renderOptions.res || req.res;\n      renderOptions.url = renderOptions.url || \"\".concat(req.protocol, \"://\").concat(req.get('host') || '').concat(req.originalUrl);\n      renderOptions.documentFilePath = renderOptions.documentFilePath || filePath;\n      renderOptions.providers = [].concat(_toConsumableArray(renderOptions.providers || []), [getReqResProviders(req, res)]);\n      renderOptions.publicPath = (_b = (_a = renderOptions.publicPath) !== null && _a !== void 0 ? _a : setupOptions.publicPath) !== null && _b !== void 0 ? _b : (_c = options.settings) === null || _c === void 0 ? void 0 : _c.views, renderOptions.inlineCriticalCss = (_d = renderOptions.inlineCriticalCss) !== null && _d !== void 0 ? _d : setupOptions.inlineCriticalCss;\n      engine.render(renderOptions).then(function (html) {\n        return callback(null, html);\n      }).catch(callback);\n    } catch (err) {\n      callback(err);\n    }\n  };\n}\n/**\n * Get providers of the request and response\n */\n\n\nfunction getReqResProviders(req, res) {\n  var providers = [{\n    provide: REQUEST,\n    useValue: req\n  }];\n\n  if (res) {\n    providers.push({\n      provide: RESPONSE,\n      useValue: res\n    });\n  }\n\n  return providers;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ngExpressEngine }; //# sourceMappingURL=express-engine.js.map","map":null,"metadata":{},"sourceType":"module"}
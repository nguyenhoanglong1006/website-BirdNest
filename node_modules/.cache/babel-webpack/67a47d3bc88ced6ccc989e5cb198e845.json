{"ast":null,"code":"\"use strict\";\n\nvar root_1 = require('./root');\n\nfunction minimalSetImpl() {\n  // THIS IS NOT a full impl of Set, this is just the minimum\n  // bits of functionality we need for this library.\n  return function () {\n    function MinimalSet() {\n      this._values = [];\n    }\n\n    MinimalSet.prototype.add = function (value) {\n      if (!this.has(value)) {\n        this._values.push(value);\n      }\n    };\n\n    MinimalSet.prototype.has = function (value) {\n      return this._values.indexOf(value) !== -1;\n    };\n\n    Object.defineProperty(MinimalSet.prototype, \"size\", {\n      get: function get() {\n        return this._values.length;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    MinimalSet.prototype.clear = function () {\n      this._values.length = 0;\n    };\n\n    return MinimalSet;\n  }();\n}\n\nexports.minimalSetImpl = minimalSetImpl;\nexports.Set = root_1.root.Set || minimalSetImpl(); //# sourceMappingURL=Set.js.map","map":null,"metadata":{},"sourceType":"script"}